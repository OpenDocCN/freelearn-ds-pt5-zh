["```py\n# --- read our data file into \"x\" \nx <-read.table(\"c:/Worker/23SamplesSalesTrans.csv\", sep=\",\", header = FALSE, skip = 1) \n# --- convert \"x\" into a data frame object, then set the data frame to \n# --- hold only the sales_date  \ndata.df <- data.frame(x) \ndata.df <- data.df[,4] \n# --- use the R commands substr and regexpr to strip out just the year and # --- month from the sales date field  \nYearsInData = substr(substr(data.df[],(regexpr('/',data.df[])+1),11),( regexpr('/',substr(data.df[],(regexpr('/',data.df[])+1),11))+1),11) \nMonthsInData = substr(data.df[],(regexpr('/',data.df[])-1),1) \n# --- use sort and unique functions to list our year(s) and month(s) \nsort(unique(YearsInData)) \nsort(unique(MonthsInData)) \n```", "```py\n# --- read data \ndata.df<-data.frame(x) \n# --- initialize counters \nJanuarySales <-0 \nFebruarySales <-0 \nMarchSales <-0 \n# --- loop and count \nfor(i in 1:nrow(data.df)) \n{ \n    MonthInData = substr(data.df[i,4],(regexpr('/',data.df[i,4])-1),1) \nif (MonthInData == '1') {JanuarySales <- JanuarySales + data.df[i,3]} \nif (MonthInData == '2') {FebruarySales <- FebruarySales + + data.df[i,3]} \nif (MonthInData == '3') {MarchSales <- MarchSales + + data.df[i,3]} \n}\n```", "```py\nbarplot(c(JanuarySales, FebruarySales, MarchSales), main=\"Sales Qty by Month\", border = \"dark blue\", legend.text = c(\"Jan\", \"Feb\", \"Mar\"), col = c(\"lightblue\", \"mistyrose\",\"lightcyan\"), sub = \"Sales Transactions from File\") \n```", "```py\n# --- read in the data in  \nsales <- read.csv(\"c:/Worker/SamplesSalesTrans_2.csv\") \n# --- just moving our original data to a data frame object \n# --- preserving the original  \ndata.df<-data.frame(sales.new)\n```", "```py\n# --- looping through the data and counting quantities  \n# --- type \nfor(i in 1:nrow(data.df)) \n{ \nif (data.df[i,2] == 'Online') \n   {Online <- Online + data.df[i,1]  \n          OnlineC <- OnlineC +1}  \nif (data.df[i,2] == 'Television')       \n   {Television <- Television + data.df[i,1] \n   TelevisionC <- TelevisionC +1}  \nif (data.df[i,2] == 'New Customer')     \n   {NewCustomer <- NewCustomer + data.df[i,1] \n   NewCustomerC <- NewCustomerC +1}  \nif (data.df[i,2] == 'Retailer')   \n   {Retailer <- Retailer + data.df[i,1] \n   RetailerC <- RetailerC +1}  \nif (data.df[i,2] == 'Club')             \n   {Club <- Club + data.df[i,1] \n   ClubC <- ClubC +1}  \nif (data.df[i,2] == 'Discounted')       \n   {Discounted <- Discounted + data.df[i,1] \n   DiscountedC <- DiscountedC +1}  \nif (data.df[i,2] == 'Repeat')           \n   {Repeat <- Repeat + data.df[i,1] \n   RepeatC <- RepeatC +1}  \nif (data.df[i,2] == 'Vendor') \n   {Vendor <- Vendor + data.df[i,1] \n   VendorC <- VendorC +1}  \n} \n```", "```py\n# --- create average or mean for all Online sales quantities \n# --- by first creating a subset of only quanities of that sale  \n# --- type \nOnlineSales.new <-data.df[data.df$sale_type == \"Online\",] \nOnlineSalesMean <-mean(OnlineSales.new$quantity) \n# --- using the summary totals, you could do the math to calculate # --- the average or mean: \nOnlineMean <- Online/OnlineC\n```", "```py\n# --- calculate the mean for all sale types: \nMeanAll <-mean(data.df [[\"quantity\"]]) \n# --- calculate the standard deviation for all sales types: \nStdDAll<-sd(data.df[[\"quantity\"]]) \n# --- calculate the median for all sales types: \nMeanAll <-mean(data.df [[\"quantity\"]]) \n```", "```py\n# --- using the calculated average/mean for each sale type \ntemp<-c(Online, Television, NewCustomer, Retailer, Club, Discounted, Repeat, Vendor) \n\n# --- create the histogram \nhist(temp, breaks=8, freq=TRUE, main=\"Quantity by Sales Type\", border=\"black\", col = \"gray\", xlab=\"Types: Online, Televsion, New Customer, Retailer, Club, Discounted, Repeat, Vendor\") \nabline(v=ref,col=\"red\")\n```", "```py\n# -- calculate standard distribution of all product quantities \nsd(data.df[[\"quantity\"]]) \n```", "```py\n# --- create a subset of only online sale type quantities \nquantity.new <- data.df[data.df$sale_type == \"Online\",] \n\n# --- calculate this subsets standard distribution \nStdDOnline<-sd(quantity.new$quantity) \n# --- repeated for each sales type group!\n```", "```py\n# --- after computing each type, calculate the standard  \n# --- distribution for all sales quantities: \nStdDVendor<-sd(quantity.new$quantity) \n\n# --- combine the totals into \"Temp\" \nTemp<-c(StdDOnline, StdDTelevision, StdDNewCustomer, StdDRetailer, StdDClub, StdDDiscounted, StdDRepeat, StdDVendor)  \n\n# --- create a simple Line Chart \nplot(Temp, type=\"o\", col=\"blue\",    axes=FALSE, ann=FALSE) \naxis(1, at=1:8, lab=c(\"Online\", \"TV\",\"New\", \"Retail\",\"Club\",\"Disc\",\"Rep\",\"Ven\")) \ntitle(ylab=\"STD DIST\", col.lab=rgb(0,0.5,0)) \nbox() \n```", "```py\nabline(h=sd(data.df[[\"quantity\"]]), col=\"green\")\n```", "```py\n# --- use sample to create a random sampling of data \nmysample.df <- data.df[sample(1:nrow(data.df), 100, replace=FALSE),] \n```", "```py\n# --- original visualization \nplot(Temp, type=\"o\", col=\"blue\",    axes=FALSE, ann=FALSE) \naxis(1, at=1:8, lab=c(\"Online\", \"TV\", \"New\", \"Retail\",\"Club\",\"Disc\",\"Rep\",\"Ven\")) \ntitle(ylab=\"STD DIST\", col.lab=rgb(0,0.5,0)) \nbox() \n\n# --- create a sample population \nmysample.df <- data.df[sample(1:nrow(data.df), 100, replace=FALSE),]  \n\n# --- draw a water mark from the  \n$ --- samples standard distribution \nabline(h=sd(mysample.df[[\"quantity\"]]), col=\"green\")\n```", "```py\n# --- calculate our samples variance \nvar(mysample.df[[\"quantity\"]]) \n\n# --- calculate total variance \nvar(data.df[[\"quantity\"]]) \n```", "```py\n# --- create subset of Online quantities \nquantity.new <- data.df[data.df$sale_type == \"Online\",] \n# --- calculate each comparison point \nmax(quantity.new[[\"quantity\"]]) \nmean(quantity.new[[\"quantity\"]]) \nsd(quantity.new[[\"quantity\"]]) \nmedian(quantity.new[[\"quantity\"]]) \nmin(quantity.new[[\"quantity\"]]) \nsum(quantity.new[[\"quantity\"]]) \n```", "```py\n# --- create a data frame object for summarization \ndf<-data.frame(8,7) \n# --- create our subset of data - this is online sales \nquantity.new <- data.df[data.df$sale_type == \"Online\",] \n# --- calculate comparison points based upon \n# --- our current subset dropping each in a temp \n# --- variable for now (a, b, c, d, e and f) \na<-max(quantity.new[[\"quantity\"]]) \nb<-mean(quantity.new[[\"quantity\"]]) \nc<-sd(quantity.new[[\"quantity\"]]) \nd<-median(quantity.new[[\"quantity\"]]) \ne<-min(quantity.new[[\"quantity\"]]) \nf<-sum(quantity.new[[\"quantity\"]]) \n# --- load our calculations into the data frame object \n# --- just using \"i\" as an index to the data frame \ni<-1 \ndf[i,1]<-\"Online\" \ndf[i,2]<-a \ndf[i,3]<-b \ndf[i,4]<-c \ndf[i,5]<-d \ndf[i,6]<-e \ndf[i,7]<-f \n# --- add headings/column names to our data frame object \nnames(df)<-c(\"group\", \"max\", \"mean\", \"sd\", \"median\", \"min\", \"sum\") \n# --- note: repeat the section of code here that creates a  \n# --- subset and calculates its points for all sale types \n# --- display out finished summation model \ndf \n```", "```py\n# --- load our data into a data frame object \ndata.df<-data.frame(x) \n# --- initialize some counters one for each sales region ID \nR1<-0 \nR2<-0 \nR3<-0 \nR4<-0 \nR5<-0 \n# --- loop through the data and accumulate sale quantities  \n# --- for each sales region \nfor(i in 1:nrow(data.df)) \n{ \n    MonthInData <-data.df[i,6] \nif (MonthInData == '1') {R1 <- R1 + data.df[i,3]} \nif (MonthInData == '2') {R2 <- R2 + data.df[i,3]} \nif (MonthInData == '3') {R3 <- R3 + data.df[i,3]} \nif (MonthInData == '4') {R4 <- R4 + data.df[i,3]} \nif (MonthInData == '5') {R5 <- R5 + data.df[i,3]} \n} \n# --- generate our barplot from accumulated data  \n# --- in R1 through R5 \nbarplot(c(R1, R2, R3, R4, R5), main=\"Sales Qty by Region\", border = \"dark blue\", legend.text = c(\"1\",\"2\",\"3\", \"4\", \"5\"), col = c(\"lightblue\", \"mistyrose\",\"lightcyan\", \"Green\", \"grey\")) \n```"]