["```py\n<div id=\"content\">\n<h2>Sep 13, 2014</h2>\n\n<a href=\"/2014/sep/14/\">← next day</a> Sep 13, 2014  <a href=\"/2014/sep/12/\">previous day →</a>\n\n<ul id=\"ll\">\n<li class=\"le\" rel=\"petisnnake\"><a href=\"#1574618\" name=\"1574618\">#</a> <span style=\"color:#b78a0f;8\" class=\"username\" rel=\"petisnnake\">&lt;petisnnake&gt;</span> i didnt know that </li>\n...\n</ul>\n...\n</div>\n```", "```py\nimport re\nimport io\n\nrow = []\n\ninfile  = io.open('django13-sept-2014.html', 'r', encoding='utf8')\noutfile = io.open('django13-sept-2014.csv', 'a+', encoding='utf8')\nfor line in infile:\n    pattern = re.compile(ur'<li class=\\\"le\\\" rel=\\\"(.+?)\\\"><a href=\\\"#(.+?)\\\" name=\\\"(.+?)<\\/span> (.+?)</li>', re.UNICODE)\n    if pattern.search(line):\n        username = pattern.search(line).group(1)\n        linenum = pattern.search(line).group(2)\n        message = pattern.search(line).group(4)\n        row.append(linenum)\n        row.append(username)\n        row.append(message)\n        outfile.write(', '.join(row))\n        outfile.write(u'\\n')\n        row = []\ninfile.close()\n```", "```py\n1574618, petisnnake, i didnt know that \n1574619, dshap, FunkyBob: ahh, hmm, i wonder if there's a way to do it in my QuerySet subclass so i'm not creating a new manager subclass *only* for get_queryset to do the intiial filtering \n1574620, petisnnake, haven used Django since 1.5\n```", "```py\nfrom bs4 import BeautifulSoup\nimport io\n\ninfile  = io.open('django13-sept-2014.html', 'r', encoding='utf8')\noutfile = io.open('django13-sept-2014.csv', 'a+', encoding='utf8')\nsoup = BeautifulSoup(infile)\n\nrow = []\nallLines = soup.findAll(\"li\",\"le\")\nfor line in allLines:\n    username = line['rel']\n    linenum = line.contents[0]['name']\n    message = line.contents[3].lstrip()\n    row.append(linenum)\n    row.append(username)\n    row.append(message)\n    outfile.write(', '.join(row))\n    outfile.write(u'\\n')\n    row = []\ninfile.close()\n```", "```py\n1574618, petisnnake, i didnt know that \n1574619, dshap, FunkyBob: ahh, hmm, i wonder if there's a way to do it in my QuerySet subclass so i'm not creating a new manager subclass *only* for get_queryset to do the intiial filtering \n1574620, petisnnake, haven used Django since 1.5\n```", "```py\nimport urllib2\nimport time\n\nwith open('GGurls.txt', 'r') as f:\n    urls = []\n    for url in f:\n        urls.append(url.strip())\n\ncurrentFileNum = 1\nfor url in urls:\n    print(\"Downloading: {0} Number: {1}\".format(url, currentFileNum))\n    time.sleep(2)\n    htmlFile = urllib2.urlopen(url)\n    urlFile = open(\"msg%d.txt\" %currentFileNum,'wb')\n    urlFile.write(htmlFile.read())\n    urlFile.close()\n    currentFileNum = currentFileNum +1\n```", "```py\nIn-Reply-To: <ab71b72a-ef9b-4484-b0cc-a72ecb2a3b85@r9g2000yqd.googlegroups.com>\nDate: Mon, 30 Apr 2012 10:33:18 -0700\nMessage-ID: <CA+qSDkQ4JB+Cn7HNjmtLOqqkbJnyBu=Z1Ocs5-dTe5cN9UEPyA@mail.gmail.com>\n```", "```py\nimport os\nimport re\nimport email.utils\nimport time\nimport datetime\nimport numpy\n\noriginals = {}\nreplies = {}\ntimelist = []\n\nfor filename in os.listdir(os.getcwd()):\n    if filename.endswith(\".txt\"):\n        f=open(filename, 'r')\n        i=''\n        m=''\n        d=''\n        for line in f:\n            irt = re.search('(In\\-Reply\\-To: <)(.+?)@', line)    \n            mid = re.search('(Message\\-ID: <)(.+?)@', line)\n            dt = re.search('(Date: )(.+?)\\r', line)\n            if irt: \n                i= irt.group(2) \n            if mid:\n                m= mid.group(2)\n            if dt:\n                d= dt.group(2)\n        f.close()\n        if i and d:\n            replies[i] = d\n        if m and d:\n            originals[m] = d\n\nfor (messageid, origdate) in originals.items():\n    try:\n        if replies[messageid]:\n            replydate = replies[messageid]                \n            try:\n                parseddate = email.utils.parsedate(origdate)\n                parsedreply = email.utils.parsedate(replydate)\n            except:\n                pass\n            try:\n                # this still creates some malformed (error) times\n                timeddate = time.mktime(parseddate)\n                timedreply = time.mktime(parsedreply)\n            except:\n                pass\n            try:\n                dtdate = datetime.datetime.fromtimestamp(timeddate)\n                dtreply = datetime.datetime.fromtimestamp(timedreply)\n            except:\n                pass\n            try:\n                difference = dtreply - dtdate\n                totalseconds = difference.total_seconds()\n                timeinhours =  (difference.days*86400+difference.seconds)/3600\n                # this is a hack to take care of negative times\n                # I should probably handle this with timezones but alas\n                if timeinhours > 1:\n                    #print timeinhours\n                    timelist.append(timeinhours)\n            except:\n                pass\n    except:\n        pass\n\nprint numpy.mean(timelist)\nprint numpy.std(timelist)\nprint numpy.median(timelist)\n```", "```py\nfor line in f:\n    irt = re.search('(In\\-Reply\\-To: <)(.+?)@', line) \n    mid = re.search('(Message\\-ID: <)(.+?)@', line)\n    dt = re.search('(Date: )(.+?)\\r', line)\n    if irt: \n        i = irt.group(2) \n    if mid:\n        m = mid.group(2)\n    if dt:\n        d = dt.group(2)\n```", "```py\n178.911877395\n876.102630872\n18.0\n```", "```py\n<guid>http://community.docusign.com/t5/Misc-Dev-Archive-READ-ONLY/Re-Custom-CheckBox-Tabs-not-marked-when-setting-value-to-quot-X/m-p/28884#M1674</guid>\n```", "```py\nimport os\nimport re\nimport urllib2\nimport datetime\nimport numpy\n\nalllinks = []\ntimelist = []\nfor filename in os.listdir(os.getcwd()):\n    if filename.endswith('.rss'):\n        f = open(filename, 'r')\n        linktext = ''\n        linkurl = ''\n        for line in f:\n            # find the URLs for discussion threads\n            linktext = re.search('(<guid>)(.+?)(<\\/guid>)', line)    \n\n            if linktext:\n                linkurl= linktext.group(2)\n                alllinks.append(linkurl)\n        f.close()\n\nmainmessage = ''\nreply = ''\nmaindateobj = datetime.datetime.today()\nreplydateobj = datetime.datetime.today()\nfor item in alllinks:\n    print \"===\"\n    print \"working on thread\\n\" + item\n    response = urllib2.urlopen(item)\n    html = response.read() \n    # this is the regex needed to match the timestamp \n    tuples = re.findall('lia-message-posted-on\\\">\\s+<span class=\\\"local-date\\\">\\\\xe2\\\\x80\\\\x8e(.*?)<\\/span>\\s+<span class=\\\"local-time\\\">([\\w:\\sAM|PM]+)<\\/span>', html)\t\n    mainmessage = tuples[0]\n    if len(tuples) > 1:\n        reply = tuples[1]\n    if mainmessage:\n        print \"main: \"\n        maindateasstr = mainmessage[0] + \" \" + mainmessage[1]\n        print maindateasstr\n        maindateobj = datetime.datetime.strptime(maindateasstr, '%m-%d-%Y %I:%M %p')\n    if reply:\n        print \"reply: \"\n        replydateasstr = reply[0] + \" \" + reply[1]\n        print replydateasstr\n        replydateobj = datetime.datetime.strptime(replydateasstr, '%m-%d-%Y %I:%M %p')\n\n        # only calculate difference if there was a reply \n        difference = replydateobj - maindateobj\n        totalseconds = difference.total_seconds()\n        timeinhours =  (difference.days*86400+difference.seconds)/3600\n        if timeinhours > 1:\n            print timeinhours\n            timelist.append(timeinhours)\n\nprint \"when all is said and done, in hours:\"\nprint numpy.mean(timelist)\nprint numpy.std(timelist)\nprint numpy.median(timelist)\n```", "```py\n===\nworking on thread\nhttp://community.docusign.com/t5/Misc-Dev-Archive-READ-ONLY/Can-you-disable-the-Echosign-notification-in-Adobe-Reader/m-p/21473#M1156\nmain: \n06-21-2013 08:09 AM\nreply: \n06-24-2013 10:34 AM\n74\n```", "```py\nwhen all is said and done, in hours:\n695.009009009\n2506.66701108\n20.0\n```", "```py\ntuples = re.findall('lia-message-posted-on\\\">\\s+<span class=\\\"local-date\\\">\\\\xe2\\\\x80\\\\x8e(.*?)<\\/span>\\s+<span class=\\\"local-time\\\">([\\w:\\sAM|PM]+)<\\/span>', html)\n```", "```py\n<p class=\"lia-message-dates lia-message-post-date lia-component-post-date-last-edited\" class=\"lia-message-dates lia-message-post-date\">\n<span class=\"DateTime lia-message-posted-on lia-component-common-widget-date\" class=\"DateTime lia-message-posted-on\">\n<span class=\"local-date\">‎06-18-2013</span>\n<span class=\"local-time\">08:21 AM</span>\n\n<p class=\"lia-message-dates lia-message-post-date lia-component-post-date-last-edited\" class=\"lia-message-dates lia-message-post-date\">\n<span class=\"DateTime lia-message-posted-on lia-component-common-widget-date\" class=\"DateTime lia-message-posted-on\">\n<span class=\"local-date\">‎06-25-2013</span>\n<span class=\"local-time\">12:11 AM</span>\n```", "```py\nmainmessage = tuples[0]\nif len(tuples) > 1:\n    reply = tuples[1]\n```"]