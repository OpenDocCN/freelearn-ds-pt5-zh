["```py\n    import numpy as np\n    x = np.linspace(0, 10, 20)\n    ```", "```py\n    y = x**3\n    ```", "```py\n    import matplotlib.pyplot as plt\n    plt.plot(x, y)\n    plt.show()\n    ```", "```py\n    plt.xlabel('Linearly Spaced Numbers')\n    ```", "```py\n    plt.ylabel('y Value')\n    ```", "```py\n    plt.title('x by x Cubed')\n    ```", "```py\n    plt.plot(x, y, 'k')\n    ```", "```py\n    plt.plot(x, y, 'Dk')\n    ```", "```py\n    plt.plot(x, y, 'D-k')\n    ```", "```py\n    plt.title('x by x Cubed', fontsize=22)\n    ```", "```py\n    plt.show()\n    ```", "```py\n    y2 = x**2\n    ```", "```py\n    plt.plot(x, y2, '--r')\n    ```", "```py\n    plt.plot(x, y, 'D-k', label='x cubed') \n    ```", "```py\n    plt.plot(x, y2, '--r', label='x squared')\n    ```", "```py\n    plt.title('As x increases, \\nx Cubed (black) increases \\nat a Greater Rate than \\nx Squared (red)', fontsize=22)\n    ```", "```py\n    x = ['Shirts', 'Pants','Shorts','Shoes']\n    ```", "```py\n    y = [1000, 1200, 800, 1800]\n    ```", "```py\n    import matplotlib.pyplot as plt\n    plt.bar(x, y)\n    plt.show()\n    ```", "```py\n    plt.title('Sales Revenue by Item Type')\n    ```", "```py\n    plt.xlabel('Item Type')\n    ```", "```py\n    plt.ylabel('Sales Revenue ($)')\n    ```", "```py\n    index_of_max_y = y.index(max(y))\n    ```", "```py\n    most_sold_item = x[index_of_max_y]\n    ```", "```py\n    plt.title('{} Produce the Most Sales Revenue'.format(most_sold_item))\n    ```", "```py\n    import numpy as np\n    y = np.random.normal(loc=0, scale=0.1, size=100)\n    ```", "```py\n    plt.hist(y, bins=20)\n    ```", "```py\n    plt.xlabel('y Value')\n    ```", "```py\n    plt.ylabel('Frequency')\n    ```", "```py\n    from scipy.stats import shapiro\n    shap_w, shap_p = shapiro(y)\n    ```", "```py\n    if shap_p > 0.05:\n        normal_YN = 'Fail to reject the null hypothesis. Data is normally distributed.'\n    else:\n        normal_YN = 'Null hypothesis is rejected. Data is not normally distributed.'\n    ```", "```py\n    import numpy as np\n    y = np.random.normal(loc=0, scale=0.1, size=100)\n    ```", "```py\n    import matplotlib.pyplot as plt\n    plt.boxplot(y) \n    plt.show() \n    ```", "```py\n    from scipy.stats import shapiro\n    shap_w, shap_p = shapiro(y)\n    ```", "```py\n    from scipy.stats import zscore\n    y_z_scores = zscore(y)\n    ```", "```py\n    total_outliers = 0 \n    for i in range(len(y_z_scores)): \n        if abs(y_z_scores[i]) >= 3:\n            total_outliers += 1\n    ```", "```py\n    if shap_p > 0.05:\n        title = 'Normally distributed with {} outlier(s).'.format(total_outliers)\n    else:\n        title = 'Not normally distributed with {} outlier(s).'.format(total_outliers)\n    ```", "```py\n    plt.show()\n    ```", "```py\n    y = [5, 5.5, 5, 5.5, 6, 6.5, 6, 6.5, 7, 5.5, 5.25, 6, 5.25]\n    ```", "```py\n    x = [100, 150, 110, 140, 140, 170, 168, 165, 180, 125, 115, 155, 135]\n    ```", "```py\n    import matplotlib.pyplot as plt\n    plt.scatter(x, y)\n    ```", "```py\n    plt.xlabel('Weight')\n    ```", "```py\n    plt.ylabel('Height')\n    ```", "```py\n    from scipy.stats import pearsonr\n    correlation_coeff, p_value = pearsonr(x, y)\n    ```", "```py\n    if correlation_coeff == 1.00:\n        title = 'There is a perfect positive linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff >= 0.8:\n        title = 'There is a very strong, positive linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff >= 0.6:\n        title = 'There is a strong, positive linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff >= 0.4:\n        title = 'There is a moderate, positive linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff >= 0.2:\n        title = 'There is a weak, positive linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff > 0:\n        title = 'There is a very weak, positive linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff == 0:\n        title = 'There is no linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff <= -0.8:\n        title = 'There is a very strong, negative linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff <= -0.6:\n        title = 'There is a strong, negative linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff <= -0.4:\n        title = 'There is a moderate, negative linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    elif correlation_coeff <= -0.2:\n        title = 'There is a weak, negative linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    else: \n        title = 'There is a very weak, negative linear relationship (r = {0:0.2f}).'.format(correlation_coeff)\n    print(title)\n    ```", "```py\n    import numpy as np\n    x = np.linspace(0, 10, 20)\n    ```", "```py\n    y = x**3\n    ```", "```py\n    import matplotlib.pyplot as plt \n    fig, axes = plt.subplots() \n    plt.show() \n    ```", "```py\n    axes.plot(x, y)\n    ```", "```py\n    axes.plot(x, y, 'D-k')\n    ```", "```py\n    axes.set_xlabel('Linearly Spaced Numbers')\n    ```", "```py\n    axes.set_ylabel('y Value')\n    ```", "```py\n    axes.set_title('As x increases, y increases by x cubed')\n    ```", "```py\n    import numpy as np\n    x = np.linspace(0, 10, 20)\n    y = x**3\n    y2 = x**2\n    ```", "```py\n    import matplotlib.pyplot as plt\n    fig, axes = plt.subplots(nrows=1, ncols=2)\n    ```", "```py\n    axes[0].plot(x, y)\n    ```", "```py\n    axes[0].set_title('x by x Cubed')\n    ```", "```py\n    axes[0].set_xlabel('Linearly Spaced Numbers')\n    ```", "```py\n    axes[0].set_ylabel('y Value')\n    ```", "```py\n    axes[1].plot(x, y2)\n    ```", "```py\n    axes[1].set_title('x by x Squared')\n    ```", "```py\n    axes[1].set_xlabel('Linearly Spaced Numbers')\n    ```", "```py\n    axes[1].set_ylabel('y Value')\n    ```"]