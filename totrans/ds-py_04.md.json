["```py\nkubectl [command] [TYPE] [NAME] [flags]\n\n```", "```py\nconda env list\n\n```", "```py\nsource activate <<my_env>>\n\n```", "```py\npip install pixiegateway\n\n```", "```py\njupyter pixiegateway --port=8899\n\n```", "```py\n(dashboard) davids-mbp-8:pixiegateway dtaieb$ jupyter pixiegateway --port=8899\nPixiedust database opened successfully\nPixiedust version 1.1.10\n[PixieGatewayApp] Jupyter Kernel Gateway at http://127.0.0.1:8899\n\n```", "```py\n    bx login -a https://api.ng.bluemix.net\n    bx target -o <YOUR_ORG> -s <YOUR_SPACE></YOUR_SPACE>\n    bx plugin install container-service -r Bluemix\n    bx cs init\n\n    ```", "```py\n    bx cs clusters\n    bx cs cluster-create --name my-cluster\n\n    ```", "```py\n    bx cs cluster-config my-cluster\n\n    ```", "```py\n     export KUBECONFIG=/Users/dtaieb/.bluemix/plugins/container-\n     service/clusters/davidcluster/kube-config-hou02-davidcluster.yml\n\n    ```", "```py\n    kubectl create -f https://github.com/ibm-watson-data-lab/pixiegateway/raw/master/etc/deployment.yml\n    kubectl create -f https://github.com/ibm-watson-data-lab/pixiegateway/raw/master/etc/service.yml\n\n    ```", "```py\n    kubectl get pods\n    kubectl get nodes\n    kubectl get services\n\n    ```", "```py\n    bx cs workers my-cluster\n\n    ```", "```py\ndocker run -p 9999:8888 dtaieb/pixiegateway-python35\n\n```", "```py\njupyter kernelgateway --generate-config\n\n```", "```py\n    c.ManagedClientPool.remote_gateway_config={\n        'protocol': 'http',\n        'host': 'localhost',\n        'port': 9000,\n        'auth_token':'XXXXXXXXXX'\n    }\n\n    c.ManagedClientPool.remote_gateway_config={\n        'notebook_gateway': 'https://YYYYY.us-south.bluemix.net:8443/gateway/default/jkg/',\n        'user': 'clsadmin',\n        'password': 'XXXXXXXXXXX'\n    }\n    ```", "```py\n    c.PixieGatewayApp.admin_password = \"password\"\n\n    c.SingletonChartStorage.chart_storage_class = \"pixiegateway.chartsManager.CloudantChartStorage\"\n    c.CloudantConfig.host=\"localhost\"\n    c.CloudantConfig.port=5984\n    c.CloudantConfig.protocol=\"http\"\n    c.CloudantConfig.username=\"admin\"\n    c.CloudantConfig.password=\"password\"\n\n    c.ManagedClientPool.remote_gateway_config={\n        'protocol': 'http',\n        'host': 'localhost',\n        'port': 9000,\n        'auth_token':'XXXXXXXXXX'\n    }\n    ```", "```py\n    apiVersion: extensions/v1beta1\n    kind: Deployment \n    metadata:\n      name: pixiegateway-deployment\n    spec:\n      replicas: 1\n      template:\n        metadata:\n          labels:\n            app: pixiegateway\n        spec:\n          containers:\n            - name: pixiegateway\n              image: dtaieb/pixiegateway-python35\n              imagePullPolicy: Always\n              env:\n                - name: ADMIN_USERID\n                  value: admin\n                - name: ADMIN_PASSWORD\n                  value: changeme\n                - name: PG_CHART_STORAGE\n                  value: pixiegateway.chartsManager.CloudantChartStorage\n                - name: PG_CLOUDANT_HOST\n                  value: XXXXXXXX-bluemix.cloudant.com\n                - name: PG_CLOUDANT_PORT\n                  value: \"443\"\n                - name: PG_CLOUDANT_PROTOCOL\n                  value: https\n                - name: PG_CLOUDANT_USERNAME\n                  value: YYYYYYYYYYY-bluemix\n                - name: PG_CLOUDANT_PASSWORD\n                  value: ZZZZZZZZZZZZZ\n    ```", "```py\n        @PixieApp\n        class MyApp():\n            @route()\n            def main_screen(self):\n            return \"<div>Hello World</div>\"\n\n        app = MyApp()\n        app.run()\n        ```", "```py\nfrom awesome import AwesomePixieApp\n@PixieApp\nclass WrapperAwesome(AwesomePixieApp):\n    pass\napp = WrapperAwesome()\napp.run()\n```", "```py\n    app = GitHubTracking()\n    app.run()\n    ```", "```py\n    GitHubTracking().run()\n    ```", "```py\n    @PixieApp\n    class GitHubTracking(RepoAnalysis):\n        \"\"\"\n        GitHub Tracking Sample Application\n        \"\"\"\n        @route()\n        def main_screen(self):\n            return \"\"\"\n        ...\n    ```", "```py\n@route(query=\"*\", persist_args='true')\n@templateArgs\ndef do_search(self, query):\n    self.first_url = \"https://api.github.com/search/repositories?q={}\".format(query)\n    self.prev_url = None\n    self.next_url = None\n    self.last_url = None\n    ...\n```", "```py\n@route(query=\"*\", persist_args='web')\nâ€¦\n```", "```py\nimport pixiedust\ncars = pixiedust.sampleData(1, forcePandas=True) #car performance data\ndisplay(cars)\n```", "```py\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Example page with embedded chart</title>\n    </head>\n    <body>\n        <h1> Embedded a PixieDust Chart in a custom HTML Page</h1>\n        <div>\n            <object type=\"text/html\" width=\"600\" height=\"400\"\n                data=\"http://localhost:8899/embed/04089782-7543-42a6-8dd1-e4d1cb06596a/600/400\"> \n                <a href=\"http://localhost:8899/embed/04089782-7543-42a6-8dd1-e4d1cb06596a\">View Chart</a>\n            </object>\n        </div>\n    </body>\n</html>\n```"]