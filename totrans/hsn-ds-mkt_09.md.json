["```py\nimport pandas as pd\n\ndf = pd.read_excel(io='../data/Online Retail.xlsx', sheet_name='Online Retail')\n```", "```py\ndf = df.loc[df['Quantity'] > 0]\n```", "```py\ndf['CustomerID'].isna().sum()\n```", "```py\ndf = df.dropna(subset=['CustomerID'])\n```", "```py\ncustomer_item_matrix = df.pivot_table(\n    index='CustomerID', \n    columns='StockCode', \n    values='Quantity',\n    aggfunc='sum'\n)\n```", "```py\ncustomer_item_matrix = customer_item_matrix.applymap(lambda x: 1 if x > 0 else 0)\n```", "```py\nfrom sklearn.metrics.pairwise import cosine_similarity\n```", "```py\nuser_user_sim_matrix = pd.DataFrame(\n    cosine_similarity(customer_item_matrix)\n)\n```", "```py\nuser_user_sim_matrix.columns = customer_item_matrix.index\n\nuser_user_sim_matrix['CustomerID'] = customer_item_matrix.index\nuser_user_sim_matrix = user_user_sim_matrix.set_index('CustomerID')\n```", "```py\nuser_user_sim_matrix.loc[12350.0].sort_values(ascending=False)\n```", "```py\nitems_bought_by_A = set(customer_item_matrix.loc[12350.0].iloc[\n    customer_item_matrix.loc[12350.0].nonzero()\n].index)\n```", "```py\nitems_bought_by_B = set(customer_item_matrix.loc[17935.0].iloc[\n    customer_item_matrix.loc[17935.0].nonzero()\n].index)\n```", "```py\nitems_to_recommend_to_B = items_bought_by_A - items_bought_by_B\n```", "```py\ndf.loc[\n    df['StockCode'].isin(items_to_recommend_to_B), \n    ['StockCode', 'Description']\n].drop_duplicates().set_index('StockCode')\n```", "```py\nitem_item_sim_matrix = pd.DataFrame(\n    cosine_similarity(customer_item_matrix.T)\n)\n```", "```py\nitem_item_sim_matrix.columns = customer_item_matrix.T.index\n\nitem_item_sim_matrix['StockCode'] = customer_item_matrix.T.index\nitem_item_sim_matrix = item_item_sim_matrix.set_index('StockCode')\n```", "```py\ntop_10_similar_items = list(\n   item_item_sim_matrix\\\n        .loc[23166]\\\n        .sort_values(ascending=False)\\\n        .iloc[:10]\\\n    .index\n)\n```", "```py\ndf.loc[\n    df['StockCode'].isin(top_10_similar_items), \n    ['StockCode', 'Description']\n].drop_duplicates().set_index('StockCode').loc[top_10_similar_items]\n```", "```py\nlibrary(dplyr)\nlibrary(readxl)\n\ndf <- read_excel(\n  path=\"~/Documents/research/data-science-marketing/ch.6/data/Online Retail.xlsx\", \n  sheet=\"Online Retail\"\n)\n```", "```py\n# ignore cancel orders\ndf <- df[which(df$Quantity > 0),]\n```", "```py\n# there are 133,361 records with no CustomerID\nsum(is.na(df$CustomerID))\n```", "```py\n# sneak peek at records with no CustomerID\nhead(df[which(is.na(df$CustomerID)),])\n```", "```py\n# remove records with NA\ndf <- na.omit(df)\n```", "```py\ninstall.packages(\"reshape2\")\n\nlibrary(reshape2)\n```", "```py\ncustomerItemMatrix <- dcast(\n  df, CustomerID ~ StockCode, value.var=\"Quantity\"\n)\n```", "```py\n# 0-1 encode \nencode_fn <- function(x) {as.integer(x > 0)}\n\ncustomerItemMatrix <- customerItemMatrix %>% \n  mutate_at(vars(-CustomerID), funs(encode_fn))\n```", "```py\ninstall.packages(\"coop\")\n\nlibrary(coop)\n```", "```py\n# User-to-User Similarity Matrix\nuserToUserSimMatrix <- cosine(\n  as.matrix(\n    # excluding CustomerID column\n    t(customerItemMatrix[, 2:dim(customerItemMatrix)[2]])\n  )\n)\ncolnames(userToUserSimMatrix) <- customerItemMatrix$CustomerID\n```", "```py\ntop10SimilarCustomersTo12350 <- customerItemMatrix$CustomerID[\n order(userToUserSimMatrix[,\"12350\"], decreasing = TRUE)[1:11]\n]\n```", "```py\nitemsBoughtByA <- customerItemMatrix[\n  which(customerItemMatrix$CustomerID == \"12350\"),\n]\n\nitemsBoughtByA <- colnames(customerItemMatrix)[which(itemsBoughtByA != 0)]\n```", "```py\nitemsBoughtByB <- customerItemMatrix[\n  which(customerItemMatrix$CustomerID == \"17935\"),\n]\n\nitemsBoughtByB <- colnames(customerItemMatrix)[which(itemsBoughtByB != 0)]\n```", "```py\nitemsToRecommendToB <- setdiff(itemsBoughtByA, itemsBoughtByB)\n```", "```py\nitemsToRecommendToBDescriptions <- unique(\n  df[\n    which(df$StockCode %in% itemsToRecommendToB), \n    c(\"StockCode\", \"Description\")\n    ]\n)\nitemsToRecommendToBDescriptions <- itemsToRecommendToBDescriptions[\n  match(itemsToRecommendToB, itemsToRecommendToBDescriptions$StockCode),\n]\n```", "```py\n# Item-to-Item Similarity Matrix\nitemToItemSimMatrix <- cosine(\n  as.matrix(\n    # excluding CustomerID column\n    customerItemMatrix[, 2:dim(customerItemMatrix)[2]]\n  )\n)\n```", "```py\ntop10SimilarItemsTo23166 <- colnames(itemToItemSimMatrix)[\n  order(itemToItemSimMatrix[,\"23166\"], decreasing = TRUE)[1:11]\n]\n```", "```py\ntop10SimilarItemDescriptions <- unique(\n  df[\n    which(df$StockCode %in% top10SimilarItemsTo23166), \n    c(\"StockCode\", \"Description\")\n  ]\n)\ntop10SimilarItemDescriptions <- top10SimilarItemDescriptions[\n  match(top10SimilarItemsTo23166, top10SimilarItemDescriptions$StockCode),\n]\n```"]