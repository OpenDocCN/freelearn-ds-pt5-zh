- en: Statistical Analysis for the Database Developer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter introduces the data developer to the practice of statistical analysis.
  prefs: []
  type: TYPE_NORMAL
- en: As a data developer, the concept or process of data analysis may be clear to
    your mind. However, although there happen to be similarities between the art of
    data analysis and that of statistical analysis, there are important differences
    to be understood as well.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we aim to point to both the similarities and differences between
    the types of analysis, helping the reader understand the fundamental principles
    of the processes of data, summarization, and statistical analysis that describe
    the key factors or characteristics found in a successful statistical analysis
    effort, and provide working examples of each step required in successful statistical
    analysis of data.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ve broken things into the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What are data analysis, statistical analysis, and summarization?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The steps in successful statistical analysis of data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using R for statistical analysis of data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples--a summarization model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's start by looking at what is known as **data analysis**. This is defined
    as a structured process undertaken to evaluate data using analytical and logical
    reasoning. One performs data analysis by taking the time to gather up all the
    data to be analyzed, breaking that data (now viewed as a data source) into chunks
    or components (that can be reviewed), and then drawing a conclusion based upon
    what is seen or found within the data. Typically, this is done in an effort to
    determine that a data source is useable for meeting a declared project deliverable.
  prefs: []
  type: TYPE_NORMAL
- en: There are a variety of specific data analysis approaches, some of which include
    data mining (discussed in [Chapter 4](641cedd6-57a0-40e8-ac63-29691036e8d7.xhtml),
    *Data Mining and the Database Developer*), text analytics, business intelligence,
    and data visualizations (just to name a few of them).
  prefs: []
  type: TYPE_NORMAL
- en: To a data developer, data analysis involves inspecting the individual parts
    of a data source with an intention in mind.
  prefs: []
  type: TYPE_NORMAL
- en: For example, suppose we have some transactional data collected from a bicycle
    manufacturing organization, that we want to potentially use for a sales performance
    reporting deliverable. Typical of these types of projects, let us say that we've
    been supplied data extracted from a database in CSV format.
  prefs: []
  type: TYPE_NORMAL
- en: Now, using R commands, we can identify the fields or columns in the data as
    well as view a summarization. The following R code uses `read.csv` to load our
    data file into an R data frame object, and then the command `colnames` to list
    the field or column names found within our file; then, we finally use the R command
    summary to instruct R to provide us with some statistics on our data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the output of running the R commands (`colnames`
    and `summary`):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/17964b1b-f6e0-4c31-847a-7f5e92e829fd.png)'
  prefs: []
  type: TYPE_IMG
- en: Looking closer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once we''ve established that our data includes product identifiers (numbers
    and names), a transactional quantity, a sales date, a return date, sales region
    information, and so on, we will want to do some explorations (analysis) of the
    components found in the data. Perhaps, we can start this effort by establishing
    the total number of records in our file, using the R command `nrow`, then list
    the unique part or product numbers present within our data, using the R commands
    `list` and `unique,` as shown in the following code and partial output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3414d4b8-5bfd-4b16-8de7-33f026c1375c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Further data analysis tasks would include examining each of the components
    found in the data, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: What is the format of the date values found in the `sales_date` and `return_date`
    (components) fields?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the range of dates within these fields?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How many unique products and sales regions are included in our data file?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep in mind that dates are always tricky, so determining the format and range
    is always a valuable analysis exercise to perform in any data analysis that contains
    date or time values.
  prefs: []
  type: TYPE_NORMAL
- en: To illustrate, let us use a few simple R commands to create a list of the years
    and the months found in our data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the R code used to accomplish this statistical analysis task:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the output from running the previous commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9adb44ec-a717-413e-810c-b6a382ea318a.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that our data contains information only for the first quarter, months
    `1`, `2`, and `3` of the calendar year `2013`. Now we have established our data's
    time series. There's still plenty of data analysis work that can be done, but
    the point is that we're performing analysis exercises aimed at establishing structure
    so that we can meet our original objective of sales performance reporting, rather
    than any machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: 'With this in mind, let us suppose we want to examine what the transaction volumes
    are by month. To do that, we can use R to calculate these monthly totals using
    the following R code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once we have our monthly transaction totals calculated (using the preceding
    commands), we can then report those results. This can be done by creating a simple
    bar chart visualization.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use the R `barplot` function in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command generates the following visualization:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/db28d729-e2c8-4924-a1a7-d07cd432c194.png)'
  prefs: []
  type: TYPE_IMG
- en: These described examples of data analysis tasks are just a few of the many steps
    that are typically completed when conducting data analysis work focused on a particular
    objective, such as delivering performance reports.
  prefs: []
  type: TYPE_NORMAL
- en: To sum up, data analysis is about reviewing data to determine if it can be a
    valid source for creating a selected result, and, if so, how it can be used.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's move on to statistical analysis in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Statistical analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Some in the study of statistics sometimes describe statistical analysis as part
    of statistical projects that involves the collection and scrutiny of a data source
    in an effort to identify trends within the data.
  prefs: []
  type: TYPE_NORMAL
- en: With data analysis, the goal is to validate that the data is appropriate for
    a need, and with statistical analysis, the goal is to make sense of, and draw
    some inferences from, the data.
  prefs: []
  type: TYPE_NORMAL
- en: There is a wide range of possible statistical analysis techniques or approaches
    that can be considered.
  prefs: []
  type: TYPE_NORMAL
- en: Summarization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's return to our bicycle parts manufacturing organization example. Suppose
    we have a new file of transactions and this time we have more data and our efforts
    are going to be focused on performing a statistical analysis with the intention
    of identifying specifics that may be contributing to the sales performance reported
    as part of the preceding activities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Step one a summarization of the data. The previous section already presented
    some groupings: products and periods. Using those components, we were able to
    be telling the story of the organization''s sales performance.'
  prefs: []
  type: TYPE_NORMAL
- en: What other groupings or categories might be within the data?
  prefs: []
  type: TYPE_NORMAL
- en: For example, if we theorize that sales performance is dependent upon a period
    of time, the first thing to do is probably to group the data into time periods.
    Standard time periods are, of course, month, quarter, and year (and we already
    did that in a prior section), but statistically speaking, the more data the better,
    so a better time grouping might be ten or five-year chunks.
  prefs: []
  type: TYPE_NORMAL
- en: A common practice used during summarization is visualization, typically with
    bar charts, which show every data point in order, or histograms, which are bar
    charts grouped into broader categories. In this section, we'll keep this in mind
    and use R to create various visualizations to illustrate the results of our data
    summarizations.
  prefs: []
  type: TYPE_NORMAL
- en: Comparing groups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s go ahead and (like we did previously in this chapter) use the R commands
    `colnames` and `summary`; this time on our new data file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/06fbe3c4-7c81-4e00-ae24-db5727c76b2b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As can be seen, there is an additional field (or component) present in our
    file, `sale_type`, and executing the summary command yields the following statistics,
    including a breakdown of the sale types:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/58e706d2-16d3-43aa-a6f6-a45c50f619e7.png)'
  prefs: []
  type: TYPE_IMG
- en: The next step will depend on your hypothesis. If, for example, you have some
    idea that the type of sale (`sale_type`) has some effect on the overall sales
    performance, you then need to produce the `summary` data for each (sales type)
    group, usually mean, median, and/or standard deviation (the preceding `summary`
    command was a good start). Let's see some examples of using R to create this `summary`
    information.
  prefs: []
  type: TYPE_NORMAL
- en: 'As always, we can first readout data into R and then explicitly move it into
    an R data frame object. The following code works for this step:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: There are many different ways or approaches to accomplish the same things when
    using the R language but, in this example, we'll use the most straightforward,
    simplest approach of looping through the data, creating summary totals of each
    sale type.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is the looping code we use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'A more efficient way, perhaps, is to create subsets of our data, in this case,
    by `sale_type`. This can be accomplished by using the following R commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'In addition, we can use the R functions mean, median and standard distribution
    to calculate statistical `summary` information on our data, shown in the R command
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The following image shows the results of running the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cbc23822-f5be-4295-a201-ffe7dc973be0.png)'
  prefs: []
  type: TYPE_IMG
- en: Once we have some `summary` information calculated, the next step is to create
    one or more visualizations using that information, so that we can observe and
    study it more easily.
  prefs: []
  type: TYPE_NORMAL
- en: 'A histogram is a nice visualization option for accomplishing this goal. We
    can use the R function `hist` once we perform a few more data manipulations, as
    noted in the following lines of R code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The following diagram shows the histogram visualization created by the preceding
    R commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/08a77891-7ec5-4fd5-8141-387ba6fa5740.png)'
  prefs: []
  type: TYPE_IMG
- en: In order to decide whether there is a genuine difference between any of the
    observation groups, most times you would first establish a reference or a reference
    distribution against which to measure the values from each of the groups (in this
    case each `sales type` group).
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common reference is standard distribution. Standard distribution measures
    variation, or how different and/or spread-out a set of values are; in this example,
    our `sales quantities`. As we did earlier in this section, we can use the R command
    `sd` to establish the standard distribution of all the products in our data source
    using the following R command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: We can then do a quick visual to compare the `summary` data from each `sales
    type` group to our standard distribution.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following R commands can be used to compute each group''s standard distribution
    total:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we can plot the standard distribution totals for a visual comparison
    using the following R commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The following line chart visualization, showing plotted standard distributions
    for each `sales type`, is then generated from the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f82f0536-f1bf-4740-b87b-002f28d5da44.png)'
  prefs: []
  type: TYPE_IMG
- en: 'One thing we forgot to plot in this visualization is the standard distribution
    for all `sales types`. Using the previous calculation and the R `abline` function,
    we can update our visualization with the following R command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is our visualization updated with a horizontal line (green horizontal
    line) or watermark, depicting the standard distribution for all `sales types`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/29e76bd3-5580-457d-933b-4c5fbd5cb15b.png)'
  prefs: []
  type: TYPE_IMG
- en: The preceding figure now gives us an idea of how each sales type compares to
    a standard distribution total.
  prefs: []
  type: TYPE_NORMAL
- en: Samples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Typically, you''d want to compare distributions to a sample (rather than a
    total of all the quantities), so we can use the R sample function to create a
    sample (sourced from our data):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we can recreate the previous visualization (using `plot`, `axis`, `title`,
    and `box`), with the horizontal line or watermark representing the (random) sample''s
    standard distribution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Running the preceding R code creates the following visualization:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/240dd6f1-55a3-430f-b194-98e018d2185a.png)'
  prefs: []
  type: TYPE_IMG
- en: Other methods of comparing groups during statistical analysis include averaging,
    specifically mean, median, and mode.
  prefs: []
  type: TYPE_NORMAL
- en: Another key comparison is the measurement of spread, that is, how widely the
    data is spread across the whole possible measurement scale. Typically, we perform
    this analysis by calculating variances. Again, R makes this a straightforward
    task by using the `var` function.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following commands calculate the variance for our sample, as well as for
    the entire population:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Group comparison conclusions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before moving on, let''s point out that you need to be careful of what conclusions
    you draw from your statistical analysis of groups. In the preceding example, we
    focused on comparing distributions. Using a single comparison point may cause
    you to make inaccurate assumptions, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: The groups are different, but you conclude that they are not
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The groups are the same or very similar, but you conclude that they are different
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To avoid these errors, it is wise to calculate and observe many summarization
    points within your data. To do this, you can create a summarization model, which
    is the topic covered in our next section.
  prefs: []
  type: TYPE_NORMAL
- en: Summarization modeling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The common practice of establishing multiple summarization points is through
    the development of a summation model. Simply put, to create a summarization model
    from the data is to create a table or data frame with the rows being mean, standard
    distribution, median, min, max, and a total for each component in the data (or
    at least each component in the data that you are interested in).
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use our previous data example, where we examined sales quantities by
    individual `sales type` group. Fortunately, R gives us simple functions to calculate
    our comparison points: max, mean, standard distribution, median, min, and sum.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use them to calculate each group''s comparison points individually,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'We next create an R `data frame` (`df`) object to hold our summarizations and
    then load all our comparison points into the data frame. This is done with the
    following lines of R code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Following is our summarization model data frame object example:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b15930d9-1f81-49b0-a14d-0dbd842c1da9.png)'
  prefs: []
  type: TYPE_IMG
- en: A *summary* table, such as the one we created previously, typically does not
    answer all of your questions about the data, but in fact, as it should, generates
    more questions and hypothesis for you to explore. Statistical analysis is about
    coming up with the next question to ask for the data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Summary tables help us to determine:'
  prefs: []
  type: TYPE_NORMAL
- en: Is there really any significant message to be found within this data?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is this data source reliable?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If this data appears to support my hypothesis, how strong is the evidence overall?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does this information (as summarized) really matter (to my current hypothesis)?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What do these numbers mean (implying more analysis and summation may be needed)?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What can next actions be taken from here?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the nature of the data? (Discussed in the next section.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are various R packages (such as the `gridExtra` package) available that
    can be downloaded and installed to print nicely formatted data frames to paper.
    It's worthy of the reader's time to explore some of these options.
  prefs: []
  type: TYPE_NORMAL
- en: Establishing the nature of data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When asked about the objectives of statistical analysis, one often refers to
    the process of describing or establishing the nature of a data source.
  prefs: []
  type: TYPE_NORMAL
- en: Establishing the nature of something implies gaining an understanding of it.
    This understanding can be found to be both simple as well as complex. For example,
    can we determine the types of each of the variables or components found within
    our data source; are they quantitative, comparative, or qualitative?
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the example transactional data source used earlier in this chapter, we
    can identify some variables by types, as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Quantitative: quantity'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Comparative: `sale_type`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Qualitative: `sales_region`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Categorical: `product_name`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A more advanced statistical analysis aims to identify patterns in data; for
    example, whether there is a relationship between the variables or whether certain
    groups are more likely to show certain attributes than others.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the relationships presented in data may appear to be similar to the
    idea of identifying a foreign key in a relational database, but in statistics,
    relationships between the components or variables are based upon correlation and
    causation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Further, establishing the nature of a data source is also, really, a process
    of modeling that data source. During modeling, the process always involves asking
    questions such as the following (in an effort establish the nature of the data):'
  prefs: []
  type: TYPE_NORMAL
- en: What? Some common examples of this (what) are revenue, expenses, shipments,
    hospital visits, website clicks, and so on. In the example that we are using in
    this chapter, we are measuring quantities, that is, the amount of product that
    is being moved (sales).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why? This (why) will typically depend upon your project's specific objectives,
    which can vary immensely. For example, we may want to track the growth of a business,
    the activity on a website, or the evolution of a selected product or market interest.
    Again, in our current transactional data example, we may want to identify over-
    and under-performing `sales types`, and determine if, new or repeat customers
    provide more or fewer sales?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How? The how will most likely be over a period of time (perhaps a year, month,
    week, and so on) and then by some other related measure, such as a product, state,
    region, reseller, and so on. Within our transactional data example, we've focused
    on the observation of quantities by sale type.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'At the start of our discussion on data analysis in this chapter, we created
    a visualization showing the previously stated model, that is, quantities by month.
    Following is that visualization:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d16be47f-8ff1-4cfb-abe4-c9a108685c19.png)'
  prefs: []
  type: TYPE_IMG
- en: Typically, the modeling process will include multiple iterations of observing,
    asking new questions, manipulating the data, creating new visualizations, and
    observing those visualizations, with each iteration driven by the outcome(s) of
    the one before.
  prefs: []
  type: TYPE_NORMAL
- en: For example, after viewing the preceding visualization (sales quantities by
    month), a new question may occur to us, such as what the total sales quantities
    are by sales regions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar R command logic (such as the `barplot` function) can be used to manipulate
    our data and present this information, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The generated visualization is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b6c0439d-4a58-43d1-b895-9bf195605a1c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'From the previous visualization, of course, further questions can be asked
    and visualized:'
  prefs: []
  type: TYPE_NORMAL
- en: What is the breakdown of quantities by sales region by month or by quarter?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the quantity totals by product?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the total quantity returned by month, quarter, product, and so on?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And on and on!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another way to describe establishing the nature of your data is adding context
    to it or profiling it. In any case, the objective is to allow the data consumer
    to better understand the data through visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Another motive for adding context or establishing the nature of your data can
    be to gain a new perspective on the data. An example of this can be adding comparisons,
    such as our preceding `sales type` example.
  prefs: []
  type: TYPE_NORMAL
- en: Successful statistical analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is worthwhile to mention some key points in this section, dealing with ensuring
    a successful (or at least productive) statistical analysis effort.
  prefs: []
  type: TYPE_NORMAL
- en: You may find that most of these are perhaps common sense notions, but some may
    not be.
  prefs: []
  type: TYPE_NORMAL
- en: As soon as you can, decide on your goal or objective. You need to know what
    the win is, that is, what the problem or idea is that is driving the analysis
    effort. In addition, you need to make sure that, whatever is driving the analysis,
    the result obtained must be measurable in some way. This metric or performance
    indicator must be identified early.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Identify key levers. This means that once you have established your goals and
    a way to measure performance towards obtaining those goals, you also need to find
    out what has an effect on the performance towards obtaining each goal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Conduct a thorough data collection. Typically, the more data the better, but
    in the absence of quantity, always go with quality.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clean your data. Make sure your data has been cleaned in a consistent way so
    that data issues would not impact your conclusions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Model, model, and model your data. As we mentioned in a prior section, modeling
    drives modeling. The more you model your data, the more questions you'll have
    asked and answered, and the better results you'll have.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Take time to grow in your statistical analysis skills. It's always a good idea
    to continue to evolve your experiences and style of statistical analysis. The
    way to improve is to do it. Another approach is to remodel the data you may have
    on hand for other projects to hone your skills.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Optimize and repeat. As always, you need to take the time for standardizing,
    following proven practices, using templates, and testing and documenting your
    scripts and models, so that you can re-use your best efforts over and over again.
    You will find that this time will be well spent and even your better efforts will
    improve with use. Finally, share your work with others! The more eyes, the better
    the product.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Some interesting advice on ensuring success with statistical projects includes
    the following quote:'
  prefs: []
  type: TYPE_NORMAL
- en: '*It''s a good idea to build a team that allows those with an advanced degree
    in statistics to focus on data modeling and predictions, while others in the team-qualified
    infrastructure engineers, software developers and ETL experts-build the necessary
    data collection infrastructure, data pipeline and data products that enable streaming
    the data through the models and displaying the results to the business in the
    form of reports and dashboards.* *                                           
                                                                   - G Shapira, 2017*'
  prefs: []
  type: TYPE_NORMAL
- en: R and statistical analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just a note here on the use of R for statistical analysis, data profiling exercises
    as well as adding perspectives (establish context) to data to be used in visualizations.
  prefs: []
  type: TYPE_NORMAL
- en: R is a language and environment that is easy to learn, very flexible in nature,
    and also very focused on statistical computing, making it great for manipulating,
    cleaning, summarizing, producing probability statistics (as well as, actually
    creating visualizations with your data), so it's a great choice for the exercises
    required for profiling, establishing context, and identifying additional perspectives.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, here are a few more reasons to use R when performing any kind
    of data or statistical analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: R is used by a large number of academic statisticians, so it's a tool that is
    not going away.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: R is pretty much platform independent; what you develop will run almost anywhere.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: R has awesome help resources. Just Google it and you'll see!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored the purpose and process of statistical analysis
    in detail (the differences in data analysis), created a summarization model, and
    listed the steps involved in a successful statistical analysis. Finally, we underscored
    the choice of using R as the statistical analysis tool of choice.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will be targeted at explaining statistical regression and why
    it is important to data science. We will walk through the use of various statistical
    regression methods in everyday data projects and outline how a developer might
    use regression for simple forecasting and prediction within a typical data development
    project.
  prefs: []
  type: TYPE_NORMAL
