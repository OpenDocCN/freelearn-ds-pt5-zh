["```py\nimport pandas as pd\n\ndf = pd.read_csv('../data/bank-additional-full.csv', sep=';')\n```", "```py\ndf['conversion'] = df['y'].apply(lambda x: 1 if x == 'yes' else 0)\n```", "```py\n# total number of conversions\ndf.conversion.sum()\n# total number of clients in the data (= number of rows in the data)\ndf.shape[0]\n```", "```py\nconversions_by_age = df.groupby(\n    by='age'\n)['conversion'].sum() / df.groupby(\n    by='age'\n)['conversion'].count() * 100.0\n```", "```py\nax = conversions_by_age.plot(\n    grid=True,\n    figsize=(10, 7),\n    title='Conversion Rates by Age'\n)\n\nax.set_xlabel('age')\nax.set_ylabel('conversion rate (%)')\n\nplt.show()\n```", "```py\ndf['age_group'] = df['age'].apply(\n    lambda x: '[18, 30)' if x < 30 else '[30, 40)' if x < 40 \\\n        else '[40, 50)' if x < 50 else '[50, 60)' if x < 60 \\\n        else '[60, 70)' if x < 70 else '70+'\n)\n```", "```py\nconversions_by_age_group = df.groupby(\n    by='age_group'\n)['conversion'].sum() / df.groupby(\n    by='age_group'\n)['conversion'].count() * 100.0\n```", "```py\nax = conversions_by_age_group.loc[\n    ['[18, 30)', '[30, 40)', '[40, 50)', '[50, 60)', '[60, 70)', '70+']\n].plot(\n    kind='bar',\n    color='skyblue',\n    grid=True,\n    figsize=(10, 7),\n    title='Conversion Rates by Age Groups'\n)\n\nax.set_xlabel('age')\nax.set_ylabel('conversion rate (%)')\n\nplt.show()\n```", "```py\npd.pivot_table(df, values='y', index='marital', columns='conversion', aggfunc=len)\n```", "```py\nconversions_by_marital_status_df.plot(\n    kind='pie',\n    figsize=(15, 7),\n    startangle=90,\n    subplots=True,\n    autopct=lambda x: '%0.1f%%' % x\n)\n\nplt.show()\n```", "```py\nage_marital_df = df.groupby(['age_group', 'marital'])['conversion'].sum().unstack('marital').fillna(0)\n\nage_marital_df = age_marital_df.divide(\n    df.groupby(\n        by='age_group'\n    )['conversion'].count(), \n    axis=0\n)\n```", "```py\nax = age_marital_df.loc[\n    ['[18, 30)', '[30, 40)', '[40, 50)', '[50, 60)', '[60, 70)', '70+']\n].plot(\n    kind='bar', \n    grid=True,\n    figsize=(10,7)\n)\n\nax.set_title('Conversion rates by Age & Marital Status')\nax.set_xlabel('age group')\nax.set_ylabel('conversion rate (%)')\n\nplt.show()\n```", "```py\nax = age_marital_df.loc[\n    ['[18, 30)', '[30, 40)', '[40, 50)', '[50, 60)', '[60, 70)', '70+']\n].plot(\n    kind='bar', \n    stacked=True,\n    grid=True,\n    figsize=(10,7)\n)\n\nax.set_title('Conversion rates by Age & Marital Status')\nax.set_xlabel('age group')\nax.set_ylabel('conversion rate (%)')\n\nplt.show()\n```", "```py\nconversionsDF <- read.csv(\n  file=\"~/Documents/data-science-for-marketing/ch.2/data/bank-additional-full.csv\", \n  header=TRUE, \n  sep=\";\"\n)\n```", "```py\n# Encode conversions as 0s and 1s\nconversionsDF$conversion <- as.integer(conversionsDF$y) - 1\n```", "```py\n# total number of conversions\nsum(conversionsDF$conversion)\n\n# total number of clients in the data (= number of records in the data)\nnrow(conversionsDF)\n```", "```py\nconversionsByAge <- conversionsDF %>% \n  group_by(Age=age) %>% \n  summarise(TotalCount=n(), NumConversions=sum(conversion)) %>%\n  mutate(ConversionRate=NumConversions/TotalCount*100.0)\n```", "```py\n# line chart\nggplot(data=conversionsByAge, aes(x=Age, y=ConversionRate)) +\n  geom_line() +\n  ggtitle('Conversion Rates by Age') +\n  xlab(\"Age\") +\n  ylab(\"Conversion Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5))\n```", "```py\n# b. by age groups\nconversionsByAgeGroup <- conversionsDF %>% \n  group_by(AgeGroup=cut(age, breaks=seq(20, 70, by = 10)) ) %>% \n  summarise(TotalCount=n(), NumConversions=sum(conversion)) %>%\n  mutate(ConversionRate=NumConversions/TotalCount*100.0)\n\nconversionsByAgeGroup$AgeGroup <- as.character(conversionsByAgeGroup$AgeGroup)\nconversionsByAgeGroup$AgeGroup[6] <- \"70+\"\n```", "```py\n# bar chart\nggplot(conversionsByAgeGroup, aes(x=AgeGroup, y=ConversionRate)) +\n  geom_bar(width=0.5, stat=\"identity\") +\n  ggtitle('Conversion Rates by Age Groups') +\n  xlab(\"Age\") +\n  ylab(\"Conversion Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\nconversionsByMaritalStatus <- conversionsDF %>% \n group_by(Marital=marital, Conversion=conversion) %>% \n summarise(Count=n())\n```", "```py\n# pie chart\nggplot(conversionsByMaritalStatus, aes(x=\"\", y=Count, fill=Marital)) + \n  geom_bar(width=1, stat = \"identity\", position=position_fill()) +\n  geom_text(aes(x=1.25, label=Count), position=position_fill(vjust = 0.5)) +\n  coord_polar(\"y\") +\n  facet_wrap(~Conversion) +\n  ggtitle('Marital Status (0: Non Conversions, 1: Conversions)') +\n  theme(\n    axis.title.x=element_blank(),\n    axis.title.y=element_blank(),\n    plot.title=element_text(hjust=0.5),\n    legend.position='bottom'\n  )\n```", "```py\n#### 5\\. Conversions by Age Groups & Marital Status ####\nconversionsByAgeMarital <- conversionsDF %>% \n  group_by(AgeGroup=cut(age, breaks= seq(20, 70, by = 10)), Marital=marital) %>% \n  summarise(Count=n(), NumConversions=sum(conversion)) %>%\n  mutate(TotalCount=sum(Count)) %>%\n  mutate(ConversionRate=NumConversions/TotalCount)\n\nconversionsByAgeMarital$AgeGroup <- as.character(conversionsByAgeMarital$AgeGroup)\nconversionsByAgeMarital$AgeGroup[is.na(conversionsByAgeMarital$AgeGroup)] <- \"70+\"\n```", "```py\n# bar chart\nggplot(conversionsByAgeMarital, aes(x=AgeGroup, y=ConversionRate, fill=Marital)) + \n  geom_bar(width=0.5, stat=\"identity\", position=\"dodge\") +\n  ylab(\"Conversion Rate (%)\") +\n  xlab(\"Age\") +\n  ggtitle(\"Conversion Rates by Age and Marital Status\") +\n  theme(plot.title=element_text(hjust=0.5))\n```", "```py\n# stacked bar chart\nggplot(conversionsByAgeMarital, aes(x=AgeGroup, y=ConversionRate, fill=Marital)) + \n  geom_bar(width=0.5, stat=\"identity\", position=\"stack\") +\n  ylab(\"Conversion Rate (%)\") +\n  xlab(\"Age\") +\n  ggtitle(\"Conversion Rates by Age and Marital Status\") +\n  theme(plot.title=element_text(hjust=0.5))\n```"]