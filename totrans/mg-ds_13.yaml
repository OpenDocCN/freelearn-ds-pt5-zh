- en: Creating Products and Improving Reusability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will conclude the *Managing Data Science Projects* section
    by looking at how we can help products grow and improve reusability. This chapter
    focuses on teams who work to deliver custom solutions for customers. You will
    find the content in this chapter helpful if your team helps internal business
    stakeholders at the company or external customers who want to buy expertise, services,
    and software solutions. The benefits of product thinking and reusability are underappreciated
    when it comes to the consultation stage, whereas they become more obvious if your
    team is developing a product that is focused on a market niche.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Thinking of projects as products
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determining the stage of your project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improving reusability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seeking and building products
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Thinking of projects as products
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To benefit from the ideas in this chapter, you must think about your work as
    product development. While many companies deliver software products to the market,
    you deliver services. We can perceive services as a product; they also obey the
    laws of supply and demand, and there are markets for different types of services.
  prefs: []
  type: TYPE_NORMAL
- en: 'Like software products, you can decompose your activity into service features.
    Some of the aspects of your service that your team is good at will separate your
    department or company from your competitors, but you will likely find some of
    these aspects lagging behind other organizations that focus on this particular
    type of service. For example, a data science consulting company may shine in creating
    custom models. However, their **user interfaces** (**UIs**) will be worse than
    that of a specialized UI development company. These tradeoffs are justified by
    market demands: companies who want to buy services on a custom model development
    rarely need the same team to deliver a high-end UI.'
  prefs: []
  type: TYPE_NORMAL
- en: Thinking about services as products opens up new possibilities for improvement.
    You can analyze your best service feature and think about the improvements that
    you can introduce to make your service better and more profitable, thereby opening
    up new possibilities for continuous service quality improvement.
  prefs: []
  type: TYPE_NORMAL
- en: 'In most cases, the best team delivers more functionality in less time and at
    a lower cost while being more customizable and better in quality than products
    that are optimized toward a broader market. As a service provider, you can do
    one thing that no product is capable of: creating solutions that are highly specialized
    for solving a specific problem for your customer. The question is, how can we
    make custom solutions easier to implement while not losing the key benefit of
    providing a custom solution to a customer''s problem?'
  prefs: []
  type: TYPE_NORMAL
- en: The first step of thinking about projects in terms of products is to consider
    the project's stage. In the next section, we will consider the concept of reusability
    in relation to different project types and stages.
  prefs: []
  type: TYPE_NORMAL
- en: Determining the stage of your project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To develop the action plan of service improvement, you need to determine the
    type and stage of the project you are working on. We can divide projects into
    two major categories:'
  prefs: []
  type: TYPE_NORMAL
- en: Products
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'While products are reusable by nature, often, custom solutions aren''t. However,
    custom solutions can be built from reusable components while not losing the qualities
    of made-to-order software. To grow these internal components and improve reusability,
    you should care about them through each stage of the project:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Minimum viable product** (**MVP**): Think about the results of your previous
    projects that you can reuse while having a minimal investment of time. Even if
    it looks like building this functionality from scratch will be easier, creating
    a reusable component can save you a lot more time over a longer time span.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Development**: Think about what reusable components you can include in the
    system that you are building. Decide if any new functionality that you are building
    can be transformed into a reusable component.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Production**: Stabilize and integrate any existing technology.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next big step in improving reusability is managing research. The question
    that arises is: how do we decide when a project needs a research phase? First,
    let''s look at what kinds of research we can do in data science projects:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data**: Improving your understanding of customer''s data by performing **exploratory
    data analysis** (**EDA**) and searching for insights in data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Models and algorithms**: Improving your models and searching for new approaches
    to solving a problem.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Technology**: Researching new technologies to improve your solution. Technology
    can be directly applicable to your project or supplement the development process
    by improving operations, requirement management, code or data versioning, and
    so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Research is hard to plan and estimate, but it is necessary for finishing data
    science projects successfully. It opens up new opportunities, provides insights,
    and changes processes. Finding the right balance between research and implementation
    is crucial for the project''s success. To manage research efficiently, you can
    split your project into two logical subprojects: research and solution development.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can integrate research phases into the solution development project in
    several ways, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**In parallel with solution development**: This approach requires a separate
    research team working full time. It is useful because the research process provides
    results in the background of the main project. Items from the research backlog
    that yielded good results are converted into research integration tasks in the
    main project backlog. This way of managing research is useful for data and model
    research because those activities can take a long time to finish and are straightforward
    to integrate into the main code base most of the time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Before or after each development iteration**: This approach requires your
    team to switch focus from solution development to research and is most effective
    when the results of the research can influence the long-term method of building
    the system. Technology research is the best candidate for this form of integration.
    You can tie technology research into software design stages so that your team
    can integrate new technologies into a project in a controlled manner.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To conclude, let's look at a way in which we can integrate research with implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Case study – building a service desk routing system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Lucas works as a data science team leader in a large retail company. He was
    asked to build a system that will help bring down the load on the support department,
    thereby solving the issues of 10,000 retail stores on a daily basis. The issue
    creation process in the department support portal is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose an issue category.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill in the template form.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait for the solution or information inquiry.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you do not know the issue category, select No category in the form and describe
    the issue in the free-form text box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The team has noticed that No category issues are the most difficult and time-consuming
    for the support team to fix. This is because the free-form description often lacked
    the information that was requested by the templates, and so the support engineer
    needed to ask for a lot of additional information to determine the issue category
    and fill in the template form by himself. The idea was to use historical data
    to classify the incoming No category issues and ask the user to fill in the information
    that's required by the template before sending the issue to the support department.
  prefs: []
  type: TYPE_NORMAL
- en: 'The project had two major challenges:'
  prefs: []
  type: TYPE_NORMAL
- en: Building a text classifier that was capable of handling an extensive list of
    issue categories (more than 1,000)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an issue classification system that would reliably operate on a 24/7
    schedule and integrate this system with the company's support portal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lucas thought that the project actually consisted of two subprojects: research
    and system implementation. The research project had an unbounded time span and
    required the data scientists on the team to build various text classifiers and
    assess their quality. The main goal of the system implementation project was to
    build a highly available model server and change the company''s support portal
    code so that they could integrate the model into the issue creation workflow.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Lucas has created two project teams for each project and created separate task
    backlogs for them:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The research team**: The text classification task was not standard and did
    not have a direct solution because most pre-built text classification models can
    only handle a very limited number of classes and this project required the model
    to be stable with 1,000 classes. The research team had a team leader who managed
    and prioritized the research backlog so that the team would focus only on the
    most cost-effective and promising ideas. Everyone understood that this research
    could not have clear deadlines, so the team decided to use the artificial constraint
    of the general project deadline. The goal was to train the best possible text
    classifier, given the time constraints and the company''s data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The implementation team**: They were focused on building a software solution.
    It consisted of a machine learning engineer, backend software developer, UI software
    developer, a system analyst, and a team leader. Lucas decided that it would be
    best to use Scrum for this part of the project. The team discussed the deadlines,
    set up a fixed number of sprints, and made sure that they will be able to complete
    all the work during the time frame. The task was clear from a technical standpoint
    and didn''t require extensive research or prototyping. The team had previously
    built model servers, so they decided to reuse their existing technology and add
    a few missing features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The last question that remained was how they could integrate new research results
    into the system without breaking the system. This integration could easily become
    the project's bottleneck because the research team constantly switched data preprocessing
    methods and machine learning frameworks in search of the best result for the project.
    Lucas decided that the research team will need to provide their models as a software
    library with a fixed interface that's been designed and documented with the implementation
    team. This interface will establish the communications contract between the research
    and implementation teams so that new model versions can be changed by simply updating
    the research team's library version.
  prefs: []
  type: TYPE_NORMAL
- en: After you have decided on the best approach for integrating research, along
    with the solution development process, and thought about which reusable components
    you can benefit from, you can move on and see how your team can gradually improve
    the reusability of the technology that you deliver.
  prefs: []
  type: TYPE_NORMAL
- en: Improving reusability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Improving reusability is a custom project development setting where you develop
    and reuse internal components to build better solutions faster. Look at what parts
    of your work are repeated in all of your projects. For many companies, it's the
    model deployment and serving. For others, it is building the dashboards on top
    of the model.
  prefs: []
  type: TYPE_NORMAL
- en: Use open source projects as a starting point. In many fields, the best tools
    are provided by commercial companies. Thankfully, the data science community is
    a very open-minded group, and the best tools you can find are open source. Of
    course, there are great commercial products too, but you can build production-grade
    systems with state-of-the-art models using open solutions. They will give you
    a very solid foundation to build upon.
  prefs: []
  type: TYPE_NORMAL
- en: 'See if you can use those tools to decrease the total amount of time your team
    spends on similar repetitive activities over different projects. If you find that
    no open source solution solves your problem, then you have two options: build
    a reusable software component from scratch or buy a product. But how can you choose
    between buying a rebuilt solution versus building one for yourself? Prebuilt products
    are best suited for solving the common problems of data science teams. On the
    contrary, building custom internal reusable solutions should be left for the parts
    of the process that are unique to your team and company. To find a solution to
    your problem, you should look to open source solutions first, then to the product
    market, and lastly consider building a new technology internally.'
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that reusable components require special care. As your toolchain
    grows, your team will need to spend more time supporting it. Reusable tools necessitate
    designing APIs and workflows that will stand the test of time. Maintaining reusable
    tools that are used in multiple projects is not an easy task, but it will allow
    your team to build upon itself, making each successive project more efficient
    than its predecessor.
  prefs: []
  type: TYPE_NORMAL
- en: '**To build or to buy?** Often, your team will have this dilemma. You can build
    something yourself, use an open source solution, or buy a commercial product.
    This decision is never easy and has lasting consequences. Building something by
    yourself from scratch will require significant investment. You can cut corners
    by using an open source solution, but you may easily run into constraints or bugs
    that will force your team to dive into the development of this open source component.
    Trying to fix bugs or add features to large amounts of existing code that''s been
    written by people from all around the world will require significant engineering
    efforts and will make switching to a different technology harder. Commercial products
    are the least customizable of the three, so your team must devote time to deciding
    which product matches your needs best.'
  prefs: []
  type: TYPE_NORMAL
- en: Things will be easier if you approach this decision analytically. Define success
    criteria and think about the strategic importance of the component or technology
    that you are planning to build, use, or buy. Define, document, and weigh all the
    pros and cons of having a complete picture. Finally, discuss the matter with as
    many stakeholders as you can, including your team members and management.
  prefs: []
  type: TYPE_NORMAL
- en: Reusable components can make your team a lot more efficient, without making
    your solutions generic, so that each client will have a customized service. Sometimes,
    you will spot an opportunity that will allow your team to make a jump into a totally
    different business model by turning the highly demanded custom solution into a
    product. In the next section, we will see how we can seek and build products.
  prefs: []
  type: TYPE_NORMAL
- en: Seeking and building products
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over time, it is natural to have teams that are dedicated to the development
    of the most complex and popular parts of your reusable toolchain. If you have
    a reusable component that has stood the test of time in multiple projects and
    is backed up by an experienced team, it is worth considering turning it into a
    product.
  prefs: []
  type: TYPE_NORMAL
- en: Another sign that you should make products out of your projects is a high demand
    for some type of custom solution that you built. If every client asks you to build
    a customer support chatbot and you have already built tens of them, why not make
    a product to make everyone's lives easier?
  prefs: []
  type: TYPE_NORMAL
- en: If your company has no prior experience of delivering new products to the market,
    take this task seriously and be ready to transition into a new world. If you want
    to avoid mistakes, take the time to read the literature related to product management
    and consider hiring or consulting product managers that have the relevant experience.
    Product development differs from making a custom solution. In fact, it is an entirely
    different business, with processes and values that may seem bizarre to a consulting
    project manager.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, remember that building products is risky and expensive. The product
    team will need to spend a substantial amount of effort converting any internal
    code base into a market-ready product. It the idea has no real market demand,
    this job will be a wasted effort.
  prefs: []
  type: TYPE_NORMAL
- en: Good product ideas are very attractive from a business perspective. However,
    if you provide services for different customers, you should always think about
    privacy before turning your projects into products for wide markets.
  prefs: []
  type: TYPE_NORMAL
- en: Privacy concerns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Privacy is of paramount importance for every data science team, especially for
    teams that are trusted by other businesses. When you're considering building a
    new product based on your internal code base or data, always check that everything
    you plan to use can be sold to other customers. If this is not the case, you may
    end up building the product from scratch, which will greatly increase the development
    costs. Ask your company's legal team if all the related NDAs and contracts allow
    for planned use cases.
  prefs: []
  type: TYPE_NORMAL
- en: You also need to consider licensing your internal reusable components so that
    you can legally reuse them across different projects. This book is not a legal
    consultant, so do not hesitate to consult with one if you plan to reuse software
    components and build products.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have looked at the benefits of product thinking in a custom
    project development environment. We studied why reusability matters and how we
    can build and integrate reusable software components at each stage of the data
    science project. We also went over the topic of finding the right balance between
    research and implementation. Finally, we looked at strategies for improving the
    reusability of our projects and explored the conditions that allow us to build
    standalone products based on our experience.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section of this book, we will look at how we can build a development
    infrastructure and choose a technology stack that will ease the development and
    delivery of data science projects. We will start by looking at ModelOps, which
    is a set of practices for automating model delivery pipelines.
  prefs: []
  type: TYPE_NORMAL
