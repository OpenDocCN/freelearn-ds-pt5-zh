["```py\nimport pandas as pd\n\ndf = pd.read_excel('../data/WA_Fn-UseC_-Marketing-Campaign-Eff-UseC_-FastF.xlsx')\n```", "```py\nax = df.groupby(\n    'Promotion'\n).sum()[\n    'SalesInThousands'\n].plot.pie(\n    figsize=(7, 7),\n    autopct='%1.0f%%'\n)\n\nax.set_ylabel('')\nax.set_title('sales distribution across different promotions')\n\nplt.show()\n```", "```py\nax = df.groupby([\n    'Promotion', 'MarketSize'\n]).count()[\n    'MarketID'\n].unstack(\n    'MarketSize'\n).plot(\n    kind='bar',\n    figsize=(12,10),\n    grid=True,\n)\n\nax.set_ylabel('count')\nax.set_title('breakdowns of market sizes across different promotions')\n\nplt.show()\n```", "```py\nax = df.groupby([\n    'Promotion', 'MarketSize'\n]).sum()[\n    'SalesInThousands'\n].unstack(\n    'MarketSize'\n).plot(\n    kind='bar',\n    figsize=(12,10),\n    grid=True,\n    stacked=True\n)\n\nax.set_ylabel('Sales (in Thousands)')\nax.set_title('breakdowns of market sizes across different promotions')\n\nplt.show()\n```", "```py\nax = df.groupby(\n    'AgeOfStore'\n).count()[\n    'MarketID'\n].plot(\n    kind='bar', \n    color='skyblue',\n    figsize=(10,7),\n    grid=True\n)\n\nax.set_xlabel('age')\nax.set_ylabel('count')\nax.set_title('overall distributions of age of store')\n\nplt.show()\n```", "```py\nax = df.groupby(\n    ['AgeOfStore', 'Promotion']\n).count()[\n    'MarketID'\n].unstack(\n    'Promotion'\n).iloc[::-1].plot(\n    kind='barh', \n    figsize=(12,15),\n    grid=True\n)\n\nax.set_ylabel('age')\nax.set_xlabel('count')\nax.set_title('overall distributions of age of store')\n\nplt.show()\n```", "```py\ndf.groupby('Promotion').describe()['AgeOfStore']\n```", "```py\n        means = df.groupby('Promotion').mean()['SalesInThousands']\n        stds = df.groupby('Promotion').std()['SalesInThousands']\n        ns = df.groupby('Promotion').count()['SalesInThousands']\n```", "```py\n      import numpy as np\n\n        t_1_vs_2 = (\n            means.iloc[0] - means.iloc[1]\n        )/ np.sqrt(\n            (stds.iloc[0]**2/ns.iloc[0]) + (stds.iloc[1]**2/ns.iloc[1])\n        )\n```", "```py\n        from scipy import stats\n\n        df_1_vs_1 = ns.iloc[0] + ns.iloc[1] - 2\n\n        p_1_vs_2 = (1 - stats.t.cdf(t_1_vs_2, df=df_1_vs_1))*2\n```", "```py\n        t, p = stats.ttest_ind(\n            df.loc[df['Promotion'] == 1, 'SalesInThousands'].values, \n            df.loc[df['Promotion'] == 2, 'SalesInThousands'].values, \n            equal_var=False\n         )\n```", "```py\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(ggplot2)\n\n#### 1\\. Load Data ####\ndf <- read_excel(\n  path=\"~/Documents/data-science-for-marketing/ch.12/data/WA_Fn-UseC_-Marketing-Campaign-Eff-UseC_-FastF.xlsx\"\n)\n```", "```py\nsalesPerPromo <- df %>% \n  group_by(Promotion) %>%\n  summarise(Sales=sum(SalesInThousands))\n\nggplot(salesPerPromo, aes(x=\"\", y=Sales, fill=Promotion)) + \n  geom_bar(width=1, stat = \"identity\", position=position_fill()) +\n  geom_text(aes(x=1.25, label=Sales), position=position_fill(vjust = 0.5), color='white') +\n  coord_polar(\"y\") +\n  ggtitle('sales distribution across different promotions')\n```", "```py\nmarketSizePerPromo <- df %>% \n  group_by(Promotion, MarketSize) %>%\n  summarise(Count=n())\n\nggplot(marketSizePerPromo, aes(x=Promotion, y=Count, fill=MarketSize)) + \n  geom_bar(width=0.5, stat=\"identity\", position=\"dodge\") +\n  ylab(\"Count\") +\n  xlab(\"Promotion\") +\n  ggtitle(\"breakdowns of market sizes across different promotions\") +\n  theme(plot.title=element_text(hjust=0.5))\n```", "```py\nggplot(marketSizePerPromo, aes(x=Promotion, y=Count, fill=MarketSize)) + \n  geom_bar(width=0.5, stat=\"identity\", position=\"stack\") +\n  ylab(\"Count\") +\n  xlab(\"Promotion\") +\n  ggtitle(\"breakdowns of market sizes across different promotions\") +\n  theme(plot.title=element_text(hjust=0.5))\n```", "```py\noverallAge <- df %>%\n  group_by(AgeOfStore) %>%\n  summarise(Count=n())\n\nggplot(overallAge, aes(x=AgeOfStore, y=Count)) + \n  geom_bar(width=0.5, stat=\"identity\") +\n  ylab(\"Count\") +\n  xlab(\"Store Age\") +\n  ggtitle(\"overall distributions of age of store\") +\n  theme(plot.title=element_text(hjust=0.5))\n```", "```py\nAgePerPromo <- df %>% \n  group_by(Promotion, AgeOfStore) %>%\n  summarise(Count=n())\n\nggplot(AgePerPromo, aes(x=AgeOfStore, y=Count, fill=Promotion)) + \n  geom_bar(width=0.5, stat=\"identity\", position=\"dodge2\") +\n  ylab(\"Count\") +\n  xlab(\"Store Age\") +\n  ggtitle(\"distributions of age of store\") +\n  theme(plot.title=element_text(hjust=0.5))\n```", "```py\ntapply(df$AgeOfStore, df$Promotion, summary)\n```", "```py\n        promo_1 <- df[which(df$Promotion == 1),]$SalesInThousands\n        promo_2 <- df[which(df$Promotion == 2),]$SalesInThousands\n\n        mean_1 <- mean(promo_1)\n        mean_2 <- mean(promo_2)\n        std_1 <- sd(promo_1)\n        std_2 <- sd(promo_2)\n        n_1 <- length(promo_1)\n        n_2 <- length(promo_2)\n```", "```py\n        t_val <- (\n          mean_1 - mean_2\n        ) / sqrt(\n         (std_1**2/n_1 + std_2**2/n_2)\n        )\n```", "```py\n        df_1_2 <- n_1 + n_2 - 2\n\n        p_val <- 2 * pt(t_val, df_1_2, lower=FALSE)\n```", "```py\n        # using t.test\n        t.test(\n          promo_1, \n          promo_2\n        )\n```"]