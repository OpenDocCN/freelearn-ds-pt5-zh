["```py\nvar = 'Hello, World!'\nprint(var)\n```", "```py\nstring_1 = '1'\nstring_2 = '2'\nstring_sum = string_1 + string_2\nprint(string_sum)\n```", "```py\ntest_string = 'Healthcare'\nprint(test_string[0])\n```", "```py\nH\n```", "```py\nprint(test_string[0:6])\n```", "```py\nHealth\n```", "```py\ntest_split_string = 'Jones,Bill,49,Atlanta,GA,12345'\noutput = test_split_string.split(',')\nprint(output)\n```", "```py\n['Jones', 'Bill', '49', 'Atlanta', 'GA', '12345']\n```", "```py\nrooms = {\n    'Smith': '141-A',\n    'Davis': '142',\n    'Williams': '144',\n    'Johnson': '145-B'\n}\n```", "```py\nfrom math import pow\n\nLB_TO_KG = 0.453592\nIN_TO_M = 0.0254\n\nclass Patient:\n    def __init__(self, name, weight_lbs, height_in):\n        self.name = name\n        self.weight_lbs = weight_lbs\n        self.weight_kg = weight_lbs * LB_TO_KG\n        self.height_in = height_in\n        self.height_m = height_in * IN_TO_M\n\n    def calculate_bmi(self):\n        return self.weight_kg / pow(self.height_m, 2)\n\n    def get_height_m(self):\n        return self.height_m\n\nif __name__ == '__main__':\n    test_patients = [\n        Patient('John Smith', 160, 68),\n        Patient('Patty Johnson', 180, 73)\n    ]\n    heights = [patient.get_height_m() for patient in test_patients]\n    print(\n        \"John's height: \", heights[0], '\\n',\n        \"Patty's height: \", heights[1], '\\n',\n        \"John's BMI: \", test_patients[0].calculate_bmi(), '\\n',\n        \"Patty's BMI: \", test_patients[1].calculate_bmi()\n    )\n```", "```py\nJohn's height:  1.7271999999999998 \n Patty's height:  1.8541999999999998 \n John's BMI:  24.327647271211504 \n Patty's BMI:  23.74787410486812\n```", "```py\nimport pandas as pd\ndata = {\n    'col1': [1, 2, 3],\n    'col2': [4, 5, 6],\n    'col3': ['x', 'y', 'z']\n}\n\ndf = pd.DataFrame(data)\nprint(df)\n```", "```py\n   col1  col2 col3\n0     1     4    x\n1     2     5    y\n2     3     6    z\n```", "```py\npt_data = pd.read_csv(data_full_path,header=0,dtype='str')\n```", "```py\npt_data = pd.read_fwf(source,widths=data_widths,header=None,dtype='str')\n```", "```py\nimport sqlite3\n\nconn = sqlite3.connect(pt_db_full_path)\ntable_name = 'TABLE1'\npt_data = pd.read_sql_query('SELECT * from ' + table_name + ';',conn) \n```", "```py\ndf['new_col1'] = \"\"\ndf['new_col2'] = 0\nprint(df)\n```", "```py\n   col1  col2 col3 new_col1  new_col2\n0     1     4    x                  0\n1     2     5    y                  0\n2     3     6    z                  0\n```", "```py\ndf['new_col3'] = df[[\n    'col1','col2'\n]].sum(axis=1)\n\nprint(df)\n```", "```py\n   col1  col2 col3 new_col1  new_col2  new_col3\n0     1     4    x                  0         5\n1     2     5    y                  0         7\n2     3     6    z                  0         9\n```", "```py\nold_column_list = ['col1','col2']\ndf['new_col4'] = df[old_column_list].apply(sum, axis=1)\nprint(df)\n```", "```py\n   col1  col2 col3 new_col1  new_col2  new_col3  new_col4\n0     1     4    x                  0         5         5\n1     2     5    y                  0         7         7\n2     3     6    z                  0         9         9\n```", "```py\ndf.drop(['col1','col2'], axis=1, inplace=True)\nprint(df)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4\n0    x                  0         5         5\n1    y                  0         7         7\n2    z                  0         9         9\n```", "```py\ndf['new_col5'] = ['7', '8', '9']\ndf['new_col6'] = ['10', '11', '12']\n\nfor str_col in ['new_col5','new_col6']:\n    df[[str_col]] = df[[str_col]].apply(pd.to_numeric)\n\nprint(df)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6\n0    x                  0         5         5         7        10\n1    y                  0         7         7         8        11\n2    z                  0         9         9         9        12\n```", "```py\ndf2 = pd.DataFrame({\n    'col3': ['a', 'b', 'c', 'd'],\n    'new_col1': '',\n    'new_col2': 0,\n    'new_col3': [11, 13, 15, 17],\n    'new_col4': [17, 19, 21, 23],\n    'new_col5': [7.5, 8.5, 9.5, 10.5],\n    'new_col6': [13, 14, 15, 16]\n});\nprint(df2)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6\n0    a                  0        11        17       7.5        13\n1    b                  0        13        19       8.5        14\n2    c                  0        15        21       9.5        15\n3    d                  0        17        23      10.5        16\n```", "```py\ndf3 = pd.concat([df, df2] ignore_index = True)\nprint(df3)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6\n0    x                  0         5         5       7.0        10\n1    y                  0         7         7       8.0        11\n2    z                  0         9         9       9.0        12\n3    a                  0        11        17       7.5        13\n4    b                  0        13        19       8.5        14\n5    c                  0        15        21       9.5        15\n6    d                  0        17        23      10.5        16\n```", "```py\nmy_list = df3['new_col3'].tolist()\nprint(my_list)\n```", "```py\n[5, 7, 9, 11, 13, 15, 17]\n```", "```py\nvalue = df3.loc[0,'new_col5']\nprint(value)\n```", "```py\ndf3.loc[[2,3,4],['new_col4','new_col5']] = 1\nprint(df3)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6\n0    x                  0         5         5       7.0        10\n1    y                  0         7         7       8.0        11\n2    z                  0         9         1       1.0        12\n3    a                  0        11         1       1.0        13\n4    b                  0        13         1       1.0        14\n5    c                  0        15        21       9.5        15\n6    d                  0        17        23      10.5        16\n```", "```py\nvalue2 = df3.iloc[0,5]\nprint(value2)\n```", "```py\npartial_df3 = df3.loc[1:3,'new_col2':'new_col4']\nprint(partial_df3)\n```", "```py\n   new_col2  new_col3  new_col4\n1         0         7         7\n2         0         9         1\n3         0        11         1\n```", "```py\nvalue3 = df3.iat[3,3]\nprint(value3)\n```", "```py\ndf3_filt = df3[df3['new_col3'] > 10]\nprint(df3_filt)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6\n3    a                  0        11         1       1.0        13\n4    b                  0        13         1       1.0        14\n5    c                  0        15        21       9.5        15\n6    d                  0        17        23      10.5        16\n```", "```py\ndf3 = df3.sort_values('new_col4', ascending=True)\nprint(df3)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6\n2    z                  0         9         1       1.0        12\n3    a                  0        11         1       1.0        13\n4    b                  0        13         1       1.0        14\n0    x                  0         5         5       7.0        10\n1    y                  0         7         7       8.0        11\n5    c                  0        15        21       9.5        15\n6    d                  0        17        23      10.5        16\n```", "```py\nSELECT payment, COUNT(*)\nFROM data\nGROUP BY payment;\n```", "```py\ntallies = df3.groupby('new_col4').size()\nprint(tallies)\n```", "```py\nnew_col4\n1     3\n5     1\n7     1\n21    1\n23    1\ndtype: int64\n```", "```py\nSELECT *\nFROM left_table OUTER JOIN right_table\nON left_table.index = right_table.index;\n```", "```py\ndf_join_df2 = df.join(df2, how='outer', rsuffix='r')\nprint(df_join_df2)\n```", "```py\n  col3 new_col1  new_col2  new_col3  new_col4  new_col5  new_col6 col3r  \\\n0    x                0.0       5.0       5.0       7.0      10.0     a   \n1    y                0.0       7.0       7.0       8.0      11.0     b   \n2    z                0.0       9.0       9.0       9.0      12.0     c   \n3  NaN      NaN       NaN       NaN       NaN       NaN       NaN     d   \n\n  new_col1r  new_col2r  new_col3r  new_col4r  new_col5r  new_col6r  \n0                    0         11         17        7.5         13  \n1                    0         13         19        8.5         14  \n2                    0         15         21        9.5         15  \n3                    0         17         23       10.5         16 \n```"]