["```py\nimport pandas as pd\n\ndf = pd.read_csv('../data/WA_Fn-UseC_-Marketing-Customer-Value-Analysis.csv')\n```", "```py\ndf.groupby('Response').count()['Customer']\n```", "```py\nax = df.groupby('Response').count()['Customer'].plot(\n    kind='bar',\n    color='skyblue',\n    grid=True,\n    figsize=(10, 7),\n    title='Marketing Engagment'\n)\n\nax.set_xlabel('Engaged')\nax.set_ylabel('Count')\n\nplt.show()\n```", "```py\ndf.groupby('Response').count()['Customer']/df.shape[0]\n```", "```py\nby_offer_type_df = df.loc[\n    df['Response'] == 'Yes'\n].groupby([\n    'Renew Offer Type'\n]).count()['Customer'] / df.groupby('Renew Offer Type').count()['Customer']\n```", "```py\nax = (by_offer_type_df*100.0).plot(\n    kind='bar',\n    figsize=(7, 7),\n    color='skyblue',\n    grid=True\n)\n\nax.set_ylabel('Engagement Rate (%)')\n\nplt.show()\n```", "```py\nby_offer_type_df = df.loc[\n    df['Response'] == 'Yes'\n].groupby([\n    'Renew Offer Type', 'Vehicle Class'\n]).count()['Customer']/df.groupby('Renew Offer Type').count()['Customer']\n```", "```py\nby_offer_type_df = by_offer_type_df.unstack().fillna(0)\n```", "```py\nax = (by_offer_type_df*100.0).plot(\n    kind='bar',\n    figsize=(10, 7),\n    grid=True\n)\n\nax.set_ylabel('Engagement Rate (%)')\n\nplt.show()\n```", "```py\nby_sales_channel_df = df.loc[\n    df['Response'] == 'Yes'\n].groupby([\n    'Sales Channel'\n]).count()['Customer']/df.groupby('Sales Channel').count()['Customer']\n```", "```py\nax = (by_sales_channel_df*100.0).plot(\n    kind='bar',\n    figsize=(7, 7),\n    color='skyblue',\n    grid=True\n)\n\nax.set_ylabel('Engagement Rate (%)')\n\nplt.show()\n```", "```py\nby_sales_channel_df = df.loc[\n    df['Response'] == 'Yes'\n].groupby([\n    'Sales Channel', 'Vehicle Size'\n]).count()['Customer']/df.groupby('Sales Channel').count()['Customer']\n```", "```py\nby_sales_channel_df = by_sales_channel_df.unstack().fillna(0)\n```", "```py\nax = (by_sales_channel_df*100.0).plot(\n    kind='bar',\n    figsize=(10, 7),\n    grid=True\n)\n\nax.set_ylabel('Engagement Rate (%)')\n\nplt.show()\n```", "```py\ndf['CLV Segment'] = df['Customer Lifetime Value'].apply(\n    lambda x: 'High' if x > df['Customer Lifetime Value'].median() else 'Low'\n)\n```", "```py\ndf['Policy Age Segment'] = df['Months Since Policy Inception'].apply(\n    lambda x: 'High' if x > df['Months Since Policy Inception'].median() else 'Low'\n)\n```", "```py\nax = df.loc[\n    (df['CLV Segment'] == 'High') & (df['Policy Age Segment'] == 'High')\n].plot.scatter(\n    x='Months Since Policy Inception',\n    y='Customer Lifetime Value',\n    logy=True,\n    color='red'\n)\n\ndf.loc[\n    (df['CLV Segment'] == 'Low') & (df['Policy Age Segment'] == 'High')\n].plot.scatter(\n    ax=ax,\n    x='Months Since Policy Inception',\n    y='Customer Lifetime Value',\n    logy=True,\n    color='blue'\n)\n\ndf.loc[\n    (df['CLV Segment'] == 'High') & (df['Policy Age Segment'] == 'Low')\n].plot.scatter(\n    ax=ax,\n    x='Months Since Policy Inception',\n    y='Customer Lifetime Value',\n    logy=True,\n    color='orange'\n)\n\ndf.loc[\n    (df['CLV Segment'] == 'Low') & (df['Policy Age Segment'] == 'Low')\n].plot.scatter(\n    ax=ax,\n    x='Months Since Policy Inception',\n    y='Customer Lifetime Value',\n    logy=True,\n    color='green',\n    grid=True,\n    figsize=(10, 7)\n)\n\nax.set_ylabel('CLV (in log scale)')\nax.set_xlabel('Months Since Policy Inception')\n\nax.set_title('Segments by CLV and Policy Age')\n\nplt.show()\n```", "```py\nengagment_rates_by_segment_df = df.loc[\n    df['Response'] == 'Yes'\n].groupby(\n    ['CLV Segment', 'Policy Age Segment']\n).count()['Customer']/df.groupby(\n    ['CLV Segment', 'Policy Age Segment']\n).count()['Customer']\n```", "```py\nax = (engagment_rates_by_segment_df.unstack()*100.0).plot(\n    kind='bar',\n    figsize=(10, 7),\n    grid=True\n)\n\nax.set_ylabel('Engagement Rate (%)')\nax.set_title('Engagement Rates by Customer Segments')\n\nplt.show()\n```", "```py\nlibrary(dplyr)\nlibrary(ggplot2)\n\n#### 1\\. Load Data ####\ndf <- read.csv(\n  file=\"~/Documents/data-science-for-marketing/ch.7/data/WA_Fn-UseC_-Marketing-Customer-Value-Analysis.csv\", \n  header=TRUE\n)\n```", "```py\n# Encode engaged customers as 0s and 1s\ndf$Engaged <- as.integer(df$Response) - 1\n```", "```py\n## - Overall Engagement Rates ##\nengagementRate <- df %>% group_by(Response) %>%\n  summarise(Count=n()) %>%\n  mutate(EngagementRate=Count/nrow(df)*100.0)\n```", "```py\nggplot(engagementRate, aes(x=Response, y=EngagementRate)) +\n  geom_bar(width=0.5, stat=\"identity\") +\n  ggtitle('Engagement Rate') +\n  xlab(\"Engaged\") +\n  ylab(\"Percentage (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\n## - Engagement Rates by Offer Type ##\nengagementRateByOfferType <- df %>% \n  group_by(Renew.Offer.Type) %>%\n  summarise(Count=n(), NumEngaged=sum(Engaged)) %>%\n  mutate(EngagementRate=NumEngaged/Count*100.0)\n```", "```py\nggplot(engagementRateByOfferType, aes(x=Renew.Offer.Type, y=EngagementRate)) +\n  geom_bar(width=0.5, stat=\"identity\") +\n  ggtitle('Engagement Rates by Offer Type') +\n  xlab(\"Offer Type\") +\n  ylab(\"Engagement Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\n## - Offer Type & Vehicle Class ##\nengagementRateByOfferTypeVehicleClass <- df %>% \n  group_by(Renew.Offer.Type, Vehicle.Class) %>%\n  summarise(NumEngaged=sum(Engaged)) %>%\n  left_join(engagementRateByOfferType[,c(\"Renew.Offer.Type\", \"Count\")], by=\"Renew.Offer.Type\") %>%\n  mutate(EngagementRate=NumEngaged/Count*100.0)\n```", "```py\nggplot(engagementRateByOfferTypeVehicleClass, aes(x=Renew.Offer.Type, y=EngagementRate, fill=Vehicle.Class)) +\n  geom_bar(width=0.5, stat=\"identity\", position = \"dodge\") +\n  ggtitle('Engagement Rates by Offer Type & Vehicle Class') +\n  xlab(\"Offer Type\") +\n  ylab(\"Engagement Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\n## - Engagement Rates by Sales Channel ##\nengagementRateBySalesChannel <- df %>% \n  group_by(Sales.Channel) %>%\n  summarise(Count=n(), NumEngaged=sum(Engaged)) %>%\n  mutate(EngagementRate=NumEngaged/Count*100.0)\n```", "```py\nggplot(engagementRateBySalesChannel, aes(x=Sales.Channel, y=EngagementRate)) +\n  geom_bar(width=0.5, stat=\"identity\") +\n  ggtitle('Engagement Rates by Sales Channel') +\n  xlab(\"Sales Channel\") +\n  ylab(\"Engagement Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\n## - Sales Channel & Vehicle Size ##\nengagementRateBySalesChannelVehicleSize <- df %>% \n  group_by(Sales.Channel, Vehicle.Size) %>%\n  summarise(NumEngaged=sum(Engaged)) %>%\n  left_join(engagementRateBySalesChannel[,c(\"Sales.Channel\", \"Count\")], by=\"Sales.Channel\") %>%\n  mutate(EngagementRate=NumEngaged/Count*100.0)\n```", "```py\nggplot(engagementRateBySalesChannelVehicleSize, aes(x=Sales.Channel, y=EngagementRate, fill=Vehicle.Size)) +\n  geom_bar(width=0.5, stat=\"identity\", position = \"dodge\") +\n  ggtitle('Engagement Rates by Sales Channel & Vehicle Size') +\n  xlab(\"Sales Channel\") +\n  ylab(\"Engagement Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\nclv_encode_fn <- function(x) {if(x > median(df$Customer.Lifetime.Value)) \"High\" else \"Low\"}\ndf$CLV.Segment <- sapply(df$Customer.Lifetime.Value, clv_encode_fn)\n```", "```py\npolicy_age_encode_fn <- function(x) {if(x > median(df$Months.Since.Policy.Inception)) \"High\" else \"Low\"}\ndf$Policy.Age.Segment <- sapply(df$Months.Since.Policy.Inception, policy_age_encode_fn)\n```", "```py\nggplot(\n  df[which(df$CLV.Segment==\"High\" & df$Policy.Age.Segment==\"High\"),], \n  aes(x=Months.Since.Policy.Inception, y=log(Customer.Lifetime.Value))\n) +\n  geom_point(color='red') +\n  geom_point(\n    data=df[which(df$CLV.Segment==\"High\" & df$Policy.Age.Segment==\"Low\"),], \n    color='orange'\n  ) +\n  geom_point(\n    data=df[which(df$CLV.Segment==\"Low\" & df$Policy.Age.Segment==\"Low\"),], \n    color='green'\n  ) +\n  geom_point(\n    data=df[which(df$CLV.Segment==\"Low\" & df$Policy.Age.Segment==\"High\"),], \n    color='blue'\n  ) +\n  ggtitle('Segments by CLV and Policy Age') +\n  xlab(\"Months Since Policy Inception\") +\n  ylab(\"CLV (in log scale)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```", "```py\nengagementRateBySegment <- df %>% \n  group_by(CLV.Segment, Policy.Age.Segment) %>%\n  summarise(Count=n(), NumEngaged=sum(Engaged)) %>%\n  mutate(EngagementRate=NumEngaged/Count*100.0)\n```", "```py\nggplot(engagementRateBySegment, aes(x=CLV.Segment, y=EngagementRate, fill=Policy.Age.Segment)) +\n  geom_bar(width=0.5, stat=\"identity\", position = \"dodge\") +\n  ggtitle('Engagement Rates by Customer Segments') +\n  ylab(\"Engagement Rate (%)\") +\n  theme(plot.title = element_text(hjust = 0.5)) \n```"]