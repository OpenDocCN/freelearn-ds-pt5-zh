- en: Appendix A. PixieApp Quick-Reference
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This appendix is a developer quick-reference guide that provides a summary of
    all the PixieApp attributes.
  prefs: []
  type: TYPE_NORMAL
- en: Annotations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`@PixieApp`: Class annotation that must be added to any class that is a PixieApp.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments: None'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`@route`: Method annotation required to denote that a method—which can have
    any name—is associated with a route.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments: `**kwargs`. Keyword arguments (key-value pairs) representing the
    route definition. The PixieApp dispatcher will match the current kernel request
    with a route according to the following rules:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The route with the highest number of arguments get evaluated first.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: All arguments must match for a route to be selected. Argument values can use
    `*` to denote that any value will match.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If a route is not found, then the default route (the one with no argument) is
    selected.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Each key of the route argument can be either a transient state (defined by the
    `pd_options` attribute) or persisted (field of the PixieApp class that remains
    present until explicitly changed).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The method can have any number of arguments. When invoking the method, the PixieApp
    dispatcher will try to match the method argument with the route arguments with
    the same name.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Return: The method must return an HTML fragment (except if the `@captureOutput`
    annotation is used) that will be injected in the frontend. The method can leverage
    the Jinja2 template syntax to generate the HTML. The HTML template has access
    to a certain number of variables:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**this**: Reference to the PixieApp class (Note that we use `this` instead
    of `self` because `self` is already used by the Jinja2 framework itself)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**prefix**: String ID that is unique to the PixieApp instance'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**entity**: The current data entity for the request'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Method arguments**: All arguments of the method can be accessed as a variable
    in the Jinja2 template'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode25.py](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode25.py)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`@templateArgs`: Annotation that enables any local variable to be used within
    the Jinja2 template. Note that `@templateArgs` cannot be used in combination with
    `@captureOutput`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments: None'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode26.py](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode26.py)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`@captureOutput`: Annotation that changes the contract with the route method,
    so that it doesn’t have to return an HTML fragment anymore. Instead, the method
    body can simply output the results as it would in a Notebook cell. The framework
    will capture the output and return it as HTML. Note that you cannot use Jinja2
    template in this case.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments: None'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode27.py](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode27.py)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`@Logger`: Add logging capabilities by adding logging methods to the class:
    `debug`, `warn`, `info`, `error`, `critical`, `exception`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments: None'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode28.py](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode28.py)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode28.py](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode28.py)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Custom HTML attributes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These can be used with any regular HTML elements to configure kernel requests.
    The PixieApp framework can trigger these requests when the element receives a
    click or change event, or right after the HTML fragment has completed loading.
  prefs: []
  type: TYPE_NORMAL
- en: '`pd_options`: List of key-value pairs that define transient states for the
    kernel request, according to the following format: `pd_options=”key1=value1;key2=value2;...”`.
    When used in combination with the `pd_entity` attribute, the `pd_options` attribute
    invokes the PixieDust `display()` API. In this case, you can get the values from
    the metadata of a separate Notebook cell in which you have used the `display()`
    API. When using `pd_options` in `display()` mode, it is recommended for convenience,
    to use the JSON notation of `pd_options` by creating a child element called `<pd_options>`
    and include the JSON values as text.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example with `pd_options` as child element invoking `display()`:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode29.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode29.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example with `pd_options` as HTML attribute:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode30.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode30.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_entity`: Used only to invoke the `display()` API on specific data. Must
    be used in combination with `pd_options` where key-value pairs will be used as
    arguments to `display()`. If no value is specified for the `pd_entity` attribute,
    then it is assumed to be the entity passed to the `run` method that starts the
    PixieApp. The `pd_entity` value can be either a variable defined in the Notebook
    or a field of the PixieApp (for example, `pd_entity=”df”`), or a field to an object
    using the dot notation (for example, `pd_entity=”obj_instance.df”`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pd_target`: By default, the output of a kernel request is injected in the
    overall output cell or dialog (if you use `runInDialog=”true”` as an argument
    to the `run` method). However, you can use `pd_target=”elementId”` to specify
    a target element that will receive the output. (Note that the `elementId` must
    exist in the current view.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode31.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode31.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_script`: This invokes arbitrary Python code as part of the kernel request.
    This can be used in combination with other attributes like `pd_entity` and `pd_options`.
    It’s important to note that the Python indentation rules ([https://docs.python.org/2.0/ref/indentation.html](https://docs.python.org/2.0/ref/indentation.html))
    must be respected to avoid a runtime error.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the Python code contains multiple lines, it is recommended to use `pd_script`
    as a child element and store the code as text.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode32.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode32.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_app`: This dynamically invokes a separate PixieApp by its fully qualified
    class name. The `pd_options` attribute can be used to pass route arguments to
    invoke a specific route of the PixieApp.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode33.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode33.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_render_onload`: This should be used to trigger a kernel request upon loading,
    as opposed to when a user clicks on an element or when a change event occurs.
    The `pd_render_onload` attribute can be combined with any other attribute that
    defines the request, like `pd_options` or `pd_script`. Note that this attribute
    should only be used with a div element.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode34.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode34.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_refresh`: This is used to force the HTML element to execute a kernel request
    even if no event (click or change event) has occurred. If no value is specified,
    then the current element is refreshed, otherwise, the element with the ID specified
    in the value will be refreshed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode35.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode35.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_event_payload`: This emits a PixieApp event with the specified payload
    content. This attribute follows the same rules as `pd_options`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each key-value pair must be encoded using the `key=value` notation
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The event will be triggered on a click or a change event
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Support for `$val()` directive to dynamically inject user entered input
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use `<pd_event_payload>` child to enter raw JSON.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode36.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode36.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_event_handler`: Subscribers can listen to an event by declaring a `<pd_event_handler>`
    child element which can accept any of the PixieApp kernel execution attributes
    like `pd_options` and `pd_script`. This element must use the `pd_source` attribute
    to filter which events they want to process. The `pd_source` attribute can contain
    one of the following values:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`targetDivId`: Only events originating from the element with the specified
    ID will be accepted'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`type`: Only events with the specified type will be accepted'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode37.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode37.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Note**: Using `*` for `pd_source` denotes that all events will be accepted.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pd_refresh_rate`: This is used to repeat the execution of an element at a
    specified interval expressed in milliseconds. This is useful for when you want
    to poll the state of a particular variable and show the result in the UI.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode38.html](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode38.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`setup`: This is an optional method implemented by the PixieApp to initialize
    its state. Will be automatically invoked before the PixieApp runs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments: None'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can find the code file here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode39.py](https://github.com/DTAIEB/Thoughtful-Data-Science/blob/master/chapter%205/sampleCode39.py)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`run`: This starts the PixieApp.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**entity**: [Optional] Dataset passed as input to the PixieApp. Can be referenced
    with the `pd_entity` attribute or directly as a field called `pixieapp_entity`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '****kwargs**: Keyword arguments to be passed to the PixieApp when it runs.
    For example, using `runInDialog=”true”` will start the PixieApp in a dialog.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`invoke_route`: This is used to programmatically invoke a route.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arguments:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Route method**: Method to be invoked.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '****kwargs**: Keyword arguments to be passed to the route method.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'Example:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`getPixieAppEntity`: This is used to retrieve the current PixieApp entity (which
    can be None) passed when calling the `run()` method. `getPixieAppEntity()` is
    typically called from within the PixieApp itself, that is:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
