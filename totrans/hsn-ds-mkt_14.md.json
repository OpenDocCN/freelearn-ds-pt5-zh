["```py\nimport pandas as pd\n\ndf = pd.read_excel('../data/Online Retail.xlsx', sheet_name='Online Retail')\n```", "```py\n        df = df.loc[df['Quantity'] > 0]\n```", "```py\n        df = df[pd.notnull(df['CustomerID'])]\n```", "```py\n        df = df.loc[df['InvoiceDate'] < '2011-12-01']\n```", "```py\n          df['Sales'] = df['Quantity'] * df['UnitPrice']\n```", "```py\n        customer_df = df.groupby('CustomerID').agg({\n            'Sales': sum,\n            'InvoiceNo': lambda x: x.nunique()\n        })\n\n        customer_df.columns = ['TotalSales', 'OrderCount']\n        customer_df['AvgOrderValue'] =     \n        customer_df['TotalSales']/customer_df['OrderCount']\n```", "```py\nrank_df = customer_df.rank(method='first')\n```", "```py\nnormalized_df = (rank_df - rank_df.mean()) / rank_df.std()\n```", "```py\nfrom sklearn.cluster import KMeans\n```", "```py\nkmeans = KMeans(n_clusters=4).fit(normalized_df[['TotalSales', 'OrderCount', 'AvgOrderValue']])\n```", "```py\nkmeans.labels_\nkmeans.cluster_centers_\n```", "```py\nfour_cluster_df = normalized_df[['TotalSales', 'OrderCount', 'AvgOrderValue']].copy(deep=True)\nfour_cluster_df['Cluster'] = kmeans.labels_\n```", "```py\nplt.scatter(\n    four_cluster_df.loc[four_cluster_df['Cluster'] == 0]['OrderCount'], \n    four_cluster_df.loc[four_cluster_df['Cluster'] == 0]['TotalSales'],\n    c='blue'\n)\n\nplt.scatter(\n    four_cluster_df.loc[four_cluster_df['Cluster'] == 1]['OrderCount'], \n    four_cluster_df.loc[four_cluster_df['Cluster'] == 1]['TotalSales'],\n    c='red'\n)\n\nplt.scatter(\n    four_cluster_df.loc[four_cluster_df['Cluster'] == 2]['OrderCount'], \n    four_cluster_df.loc[four_cluster_df['Cluster'] == 2]['TotalSales'],\n    c='orange'\n)\n\nplt.scatter(\n    four_cluster_df.loc[four_cluster_df['Cluster'] == 3]['OrderCount'], \n    four_cluster_df.loc[four_cluster_df['Cluster'] == 3]['TotalSales'],\n    c='green'\n)\n\nplt.title('TotalSales vs. OrderCount Clusters')\nplt.xlabel('Order Count')\nplt.ylabel('Total Sales')\n\nplt.grid()\nplt.show()\n```", "```py\nfrom sklearn.metrics import silhouette_score\n\nfor n_cluster in [4,5,6,7,8]:\n    kmeans = KMeans(n_clusters=n_cluster).fit(\n        normalized_df[['TotalSales', 'OrderCount', 'AvgOrderValue']]\n    )\n    silhouette_avg = silhouette_score(\n        normalized_df[['TotalSales', 'OrderCount', 'AvgOrderValue']], \n        kmeans.labels_\n    )\n\n    print('Silhouette Score for %i Clusters: %0.4f' % (n_cluster, silhouette_avg))\n```", "```py\nkmeans = KMeans(n_clusters=4).fit(\n    normalized_df[['TotalSales', 'OrderCount', 'AvgOrderValue']]\n)\n\nfour_cluster_df = normalized_df[['TotalSales', 'OrderCount', 'AvgOrderValue']].copy(deep=True)\nfour_cluster_df['Cluster'] = kmeans.labels_\n```", "```py\nkmeans.cluster_centers_\n```", "```py\nhigh_value_cluster = four_cluster_df.loc[four_cluster_df['Cluster'] == 2]\n\npd.DataFrame(\n    df.loc[\n        df['CustomerID'].isin(high_value_cluster.index)\n    ].groupby('Description').count()[\n        'StockCode'\n    ].sort_values(ascending=False).head()\n)\n```", "```py\nlibrary(readxl)\n\n#### 1\\. Load Data ####\ndf <- read_excel(\n  path=\"~/Documents/data-science-for-marketing/ch.10/data/Online Retail.xlsx\", \n  sheet=\"Online Retail\"\n)\n```", "```py\n        df <- df[which(df$Quantity > 0),]\n```", "```py\n        df <- na.omit(df)\n```", "```py\n        df <- df[which(df$InvoiceDate < '2011-12-01'),]\n```", "```py\n        df$Sales <- df$Quantity * df$UnitPrice\n```", "```py\n        # per customer data\n        customerDF <- df %>% \n          group_by(CustomerID) %>% \n          summarize(TotalSales=sum(Sales),      \n        OrderCount=length(unique(InvoiceDate))) %>%\n          mutate(AvgOrderValue=TotalSales/OrderCount)\n```", "```py\nrankDF <- customerDF %>%\n  mutate(TotalSales=rank(TotalSales), OrderCount=rank(OrderCount, ties.method=\"first\"), AvgOrderValue=rank(AvgOrderValue))\n```", "```py\nnormalizedDF <- rankDF %>%\n  mutate(TotalSales=scale(TotalSales), OrderCount=scale(OrderCount), AvgOrderValue=scale(AvgOrderValue))\n```", "```py\ncluster <- kmeans(normalizedDF[c(\"TotalSales\", \"OrderCount\", \"AvgOrderValue\")], 4)\n```", "```py\ncluster$cluster\ncluster$centers\n```", "```py\n# cluster labels\nnormalizedDF$Cluster <- cluster$cluster\n```", "```py\nggplot(normalizedDF, aes(x=AvgOrderValue, y=OrderCount, color=Cluster)) +\n  geom_point()\n```", "```py\n# Selecting the best number of cluster\nlibrary(cluster)\n\nfor(n_cluster in 4:8){\n  cluster <- kmeans(normalizedDF[c(\"TotalSales\", \"OrderCount\", \"AvgOrderValue\")], n_cluster)\n\n  silhouetteScore <- mean(\n    silhouette(\n      cluster$cluster, \n      dist(normalizedDF[c(\"TotalSales\", \"OrderCount\", \"AvgOrderValue\")], method = \"euclidean\")\n    )[,3]\n  )\n  print(sprintf('Silhouette Score for %i Clusters: %0.4f', n_cluster, silhouetteScore))\n}\n```", "```py\n# Interpreting customer segments\ncluster <- kmeans(normalizedDF[c(\"TotalSales\", \"OrderCount\", \"AvgOrderValue\")], 4)\nnormalizedDF$Cluster <- cluster$cluster\n```", "```py\n# cluster centers\ncluster$centers\n```", "```py\n# High value cluster\nhighValueCustomers <- unlist(\n  customerDF[which(normalizedDF$Cluster == 4),'CustomerID'][,1], use.names = FALSE\n)\n\ndf[which(df$CustomerID %in% highValueCustomers),] %>%\n  group_by(Description) %>%\n  summarise(Count=n()) %>%\n  arrange(desc(Count))\n```"]