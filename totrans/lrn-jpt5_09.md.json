["```py\npip install ipywidgets\n```", "```py\njupyter nbextension enable --py widgetsnbextension\n```", "```py\nconda update jupyter_core jupyter_client\n```", "```py\n #import our libraries \nfrom ipywidgets import * \nfrom IPython.display import display \n\n#create a slider and message box \nslider = widgets.FloatSlider() \nmessage = widgets.Text(value = 'Hello World') \n\n#add them to the container \ncontainer = widgets.Box(children = (slider, message)) \ncontainer.layout.border = '1px black solid' \n\ndisplay(container) \n```", "```py\n#imports \nfrom ipywidgets import interact \n\n# define a function to work with (cubes the number) \ndef myfunction(arg): \n    return arg+1 \n\n#take values from slidebar and apply to function provided \ninteract(myfunction, arg=9); \n```", "```py\nfrom ipywidgets import interact\ndef myfunction(x):\n    return x\n# the second argument defines which of the interact widgets to use\ninteract(myfunction, x=False);\n```", "```py\nfrom ipywidgets import interact\ndef myfunction(x):\n    return x\n#since argument is a text string, interact generates a textbox control for it\ninteract(myfunction, x= \"Hello World\");\n```", "```py\nfrom ipywidgets import interact \ndef myfunction(x): \n    return x \ninteract(myfunction, x=['red','green']); \n```", "```py\nfrom ipywidgets import interactive\nfrom IPython.display import display\ndef myfunction(x):\nreturn x\nw = interactive(myfunction, x= \"Hello World \");\ndisplay(w)\n```", "```py\nimport ipywidgets as widgets \nwidgets.FloatProgress( \n    value=45, \n    min=0, \n    max=100, \n    step=5, \n    description='Percent:', \n) \n```", "```py\nimport ipywidgets as widgets \nfrom IPython.display import display \nw = widgets.Dropdown( \n    options={'Pen': 7732, 'Pencil': 102, 'Pad': 33331}, \n    description='Item:', \n) \ndisplay(w) \nw.value \n```", "```py\nfrom ipywidgets import widgets\nfrom IPython.display import display\n#take the text from the box, define variable for handler\ntext = widgets.Text()\n#display it\ndisplay(text)\ndef handle_submit(sender):\n    print(text.value)\n#when we hit return in the textbox call upon the handler\ntext.on_submit(handle_submit)\n```", "```py\nfrom ipywidgets import widgets \nfrom IPython.display import display \n\nbutton = widgets.Button(description=\"Submit\"); \ndisplay(button) \n\ndef on_button_clicked(widget): \n    print(\"Clicked Button:\" + widget.description); \n\nbutton.on_click(on_button_clicked); \n```", "```py\nfrom ipywidgets import * \nw = IntSlider() \nw.keys \n```", "```py\nfrom ipywidgets import * \nText(value='You can not change this text!', disabled=True) \n```", "```py\nfrom ipywidgets import * \nw = IntSlider() \noriginal = w.value \nw.value = 5 \noriginal, w.value \n```", "```py\nfrom ipywidgets import widgets\nfrom IPython.display import display\nbutton = widgets.Button(description=\"Click Me!\")\ndisplay(button)\ndef on_button_clicked(b):\n    print(\"Button clicked.\")\nbutton.on_click(on_button_clicked)\n```", "```py\n #import our libraries \nfrom ipywidgets import * \nfrom IPython.display import display \n\n#create a slider and message box \nslider = widgets.FloatSlider() \nmessage = widgets.Text(value = 'Hello World') \n\n#add them to the container \ncontainer = widgets.Box(children = (slider, message)) \ncontainer.layout.border = '1px black solid' \n\ndisplay(container) \n```", "```py\nfrom ipywidgets import * \nfrom IPython.display import display \ncontainer = widgets.Box() \ncontainer.layout.border = '1px black solid' \ndisplay(container) \nslider = widgets.FloatSlider() \nmessage = widgets.Text(value='Hello World') \ncontainer.children=[slider, message] \n```"]