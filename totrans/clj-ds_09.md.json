["```py\n(defn ex-9-1 []\n  (-> (d/get-dataset :longley)\n      (i/view)))\n```", "```py\n(defn ex-9-2 []\n  (let [data (d/get-dataset :longley)]\n    (-> (c/scatter-plot (i/$ :x6 data)\n                        (i/$ :x5 data)\n                        :x-label \"Year\"\n                        :y-label \"Population\")\n        (i/view))))\n```", "```py\n(defn ex-9-3 []\n  (let [data  (d/get-dataset :longley)\n        model (s/linear-model (i/$ :x5 data)\n                              (i/$ :x6 data))]\n    (println \"R-square\" (:r-square model))\n    (-> (c/scatter-plot (i/$ :x6 data)\n                        (i/$ :x5 data)\n                        :x-label \"Year\"\n                        :y-label \"Population\")\n        (c/add-lines (i/$ :x6 data)\n                     (:fitted model))\n        (i/view))))\n\n;; R-square 0.9879\n```", "```py\n(defn ex-9-4 []\n  (let [data  (d/get-dataset :longley)\n        x     (i/$ :x6 data)\n        xs    (i/bind-columns x (i/sq x))\n        model (s/linear-model (i/$ :x5 data) xs)]\n    (println \"R-square\" (:r-square model))\n    (-> (c/scatter-plot (i/$ :x6 data)\n                        (i/$ :x5 data)\n                        :x-label \"Year\"\n                        :y-label \"Population\")\n        (c/add-lines (i/$ :x6 data)\n                     (:fitted model))\n        (i/view))))\n\n;; 0.9983\n```", "```py\n(defn forecast [coefs]\n  (fn [x]\n    (first\n     (i/mmult (i/trans coefs)\n              (i/matrix [1.0 x (i/sq x)])))))\n```", "```py\n(defn ex-9-5 []\n  (let [data  (d/get-dataset :longley)\n        x     (i/$ :x6 data)\n        xs    (i/bind-columns x (i/sq x))\n        model (s/linear-model (i/$ :x5 data) xs)]\n    (-> (c/scatter-plot (i/$ :x6 data)\n                        (i/$ :x5 data)\n                        :x-label \"Year\"\n                        :y-label \"Population\")\n        (c/add-function (forecast (:coefs model))\n                        1947 1970)\n        (i/view))))\n```", "```py\n(defn ex-9-6 []\n  (let [data (d/get-dataset :longley)]\n    (-> (c/scatter-plot (i/$ :x6 data)\n                        (i/$ :x4 data)\n                        :x-label \"Year\"\n                        :y-label \"Size of Armed Forces\")\n        (i/view))))\n```", "```py\n(defn polynomial-forecast [coefs degree]\n  (fn [x]\n    (first\n     (i/mmult (i/trans coefs)\n              (for [i (range (inc degree))]\n                (i/pow x i))))))\n```", "```py\n(defn ex-9-7 []\n  (let [data (d/get-dataset :longley)\n        degree 11\n        x  (s/sweep (i/$ :x6 data))\n        xs (reduce i/bind-columns\n                   (for [i (range (inc degree))]\n                     (i/pow x i)))\n        model (s/linear-model (i/$ :x4 data) xs\n                              :intercept false)]\n    (println \"R-square\" (:r-square model))\n    (-> (c/scatter-plot (i/$ 1 xs) (i/$ :x4 data)\n                        :x-label \"Distance from Mean (Years)\"\n                        :y-label \"Size of Armed Forces\")\n        (c/add-function (polynomial-forecast (:coefs model)\n                                             degree)\n                        -7.5 7.5)\n        (i/view))))\n\n;; R-square 0.9755\n```", "```py\n(defn ex-9-9 []\n  (-> (d/get-dataset :airline-passengers)\n      (i/view)))\n```", "```py\n(def time-format\n  (tf/formatter \"MMM YYYY\"))\n\n(defn to-time [month year]\n  (tf/parse time-format (str month \" \" year)))\n```", "```py\n(defn airline-passengers []\n  (->> (d/get-dataset :airline-passengers)\n       (i/add-derived-column :time [:month :year] to-time)\n       (i/$order :time :asc)\n       (i/$ :passengers)))\n```", "```py\n(defn timeseries-plot [series]\n  (-> (c/xy-plot (range (count series)) series\n               :x-label \"Time\"\n               :y-label \"Value\")\n      (i/view)))\n\n(defn ex-9-10 []\n  (-> (airline-passengers)\n      (timeseries-plot)))\n```", "```py\n(defn ex-9-11 []\n  (-> (airline-passengers)\n      (i/log)\n      (timeseries-plot)))\n```", "```py\n(defn ex-9-12 []\n  (let [data (i/log (airline-passengers))\n        xs   (range (count data))\n        model (s/linear-model data xs)]\n    (-> (c/xy-plot xs (:residuals model)\n                   :x-label \"Time\"\n                   :y-label \"Residual\")\n        (i/view))))\n```", "```py\n(defn difference [series]\n  (map - (drop 1 series) series))\n\n(defn ex-9-13 []\n  (-> (airline-passengers)\n      (i/log)\n      (difference)\n      (timeseries-plot)))\n```", "```py\n(defn constant-series [y]\n  (cons y (lazy-seq (constant-series y))))\n\n(defn ex-9-14 []\n  (take 5 (constant-series 42)))\n\n;; (42 42 42 42 42)\n```", "```py\n(defn random-walk [y]\n  (let [e (s/sample-normal 1)\n        y (+ y e)]\n    (cons y (lazy-seq (random-walk y)))))\n\n(defn ex-9-15 []\n  (->> (random-walk 0)\n       (take 50)\n       (timeseries-plot)))\n```", "```py\n(defn ar [ys coefs sigma]\n  (let [e (s/sample-normal 1 :sd sigma)\n        y (apply + e (map * ys coefs))]\n    (cons y (lazy-seq\n             (ar (cons y ys) coefs sigma)))))\n```", "```py\n(defn ex-9-16 []\n  (->> (ar [1] [2] 0)\n       (take 10)\n       (timeseries-plot)))\n```", "```py\n(defn ex-9-17 []\n  (let [init (s/sample-normal 5)]\n    (->> (ar init [0 0 0 0 1] 0)\n         (take 30)\n         (timeseries-plot))))\n```", "```py\n(defn ex-9-18 []\n  (let [init (s/sample-normal 5)]\n    (->> (ar init [0 0 0 0 1] 0.2)\n         (take 30)\n         (timeseries-plot))))\n```", "```py\n(defn autocorrelation* [series variance n k]\n  (let [lag-product (->> (drop k series)\n                         (map * series)\n                         (i/sum))]\n    (cons (/ lag-product variance n)\n          (lazy-seq\n           (autocorrelation* series variance n (inc k))))))\n\n(defn autocorrelation [series]\n  (autocorrelation* (s/sweep series)\n                    (s/variance series)\n                    (dec (count series)) 0))\n```", "```py\n(defn bar-plot [ys]\n  (let [xs (range (count ys))]\n    (-> (c/bar-chart xs ys\n                     :x-label \"Lag\"\n                     :y-label \"Value\")\n        (i/view))))\n\n(defn ex-9-19 []\n  (let [init (s/sample-normal 5)\n        coefs [0 0 0 0 1]]\n    (->> (ar init coefs 0.2)\n         (take 100)\n         (autocorrelation)\n         (take 15)\n         (bar-plot))))\n```", "```py\n(defn ma [es coefs sigma]\n  (let [e (s/sample-normal 1 :sd sigma)\n        y (apply + e (map * es coefs))]\n    (cons y (lazy-seq\n             (ma (cons e es) coefs sigma)))))\n```", "```py\n(defn ex-9-20 []\n  (let [init (s/sample-normal 5)\n        coefs [0 0 0 0 1]]\n    (->> (ma init coefs 0.5)\n         (take 100)\n         (timeseries-plot))))\n```", "```py\n(defn ex-9-21 []\n  (let [init (s/sample-normal 5)\n        coefs [0 0 0 0 1]]\n    (->> (ma init coefs 0.2)\n         (take 5000)\n         (autocorrelation)\n         (take 15)\n         (bar-plot))))\n```", "```py\n(defn arma [ys es ps qs sigma]\n  (let [e  (s/sample-normal 1 :sd sigma)\n        ar (apply + (map * ys ps))\n        ma (apply + (map * es qs))\n        y  (+ ar ma e)]\n    (cons y (lazy-seq\n                (arma (cons y ys)\n                      (cons e es)\n                      ps qs sigma)))))\n```", "```py\n(defn ex-9-22 []\n  (let [ys (s/sample-normal 10 :sd 1.0)\n        es (s/sample-normal 10 :sd 0.2)\n        ps [0 0 0 0.3 0.5]\n        qs [0.2 0.8]]\n    (->> (arma ys es ps qs 0.2)\n         (take 500)\n         (timeseries-plot))))\n```", "```py\n(defn ex-9-23 []\n  (let [ys (s/sample-normal 10 :sd 1.0)\n        es (s/sample-normal 10 :sd 0.2)\n        ps [0 0 0 0.3 0.5]\n        qs [0.2 0.8]]\n    (->> (arma ys es ps qs 0.2)\n         (take 500)\n         (autocorrelation)\n         (take 15)\n         (bar-plot))))\n```", "```py\n(defn autocovariance* [series n k]\n  (let [lag-product (->> (drop k series)\n                         (map * series)\n                         (i/sum))]\n    (cons (/ lag-product n)\n          (lazy-seq\n           (autocovariance* series n (inc k))))))\n\n(defn autocovariance [series]\n  (autocovariance* (s/sweep series) (count series) 0))\n```", "```py\n(defn pac* [pacs sigma prev next]\n  (let [acv (first next)\n        sum (i/sum (i/mult pacs (reverse prev)))\n        pac (/ (- acv sum) sigma)]\n    (cons pac\n          (lazy-seq\n           (pac* (->> (i/mult pacs pac)\n                      (reverse)\n                      (i/minus pacs)\n                      (cons pac))\n                 (* (- 1 (i/pow pac 2)) sigma)\n                 (cons acv prev)\n                 (rest next))))))\n\n(defn partial-autocorrelation [series]\n  (let [acvs (autocovariance series)\n        acv1 (first  acvs)\n        acv2 (second acvs)\n        pac  (/ acv2 acv1)]\n    (concat [1.0 pac]\n            (pac* (vector pac)\n                  (- acv1 (* pac acv2))\n                  (vector acv2)\n                  (drop 2 acvs)))))\n```", "```py\n(defn ex-9-24 []\n  (let [ys (s/sample-normal 10 :sd 1.0)\n        es (s/sample-normal 10 :sd 0.2)\n        ps   [0 0 0 0.3 0.5]\n        qs   [0.2 0.8]]\n    (->> (arma ys es ps qs 0.2)\n         (take 500)\n         (partial-autocorrelation)\n         (take 15)\n         (bar-plot))))\n```", "```py\n(defn ex-9-25 []\n  (->> (airline-passengers)\n       (difference)\n       (autocorrelation)\n       (take 25)\n       (bar-plot)))\n```", "```py\n(defn ex-9-26 []\n  (->> (airline-passengers)\n       (difference)\n       (partial-autocorrelation)\n       (take 25)\n       (bar-plot)))\n```", "```py\n(defn ex-9-27 []\n  (->> (airline-passengers)\n       (difference)\n       (difference 12)\n       (autocorrelation)\n       (take 15)\n       (bar-plot)))\n```", "```py\n(defn ex-9-28 []\n  (->> (airline-passengers)\n       (difference)\n       (difference 12)\n       (partial-autocorrelation)\n       (take 15)\n       (bar-plot)))\n```", "```py\n(defn ex-9-29 []\n  (let [data 56\n        f (fn [p]\n            (s/pdf-binomial data :size 100 :prob p))]\n    (-> (c/function-plot f 0.3 0.8\n                         :x-label \"P\"\n                         :y-label \"Likelihood\")\n        (i/view))))\n```", "```py\n(defn ex-9-30 []\n  (let [init  (s/sample-normal 2)\n        coefs [0 0.5]\n        data  (take 100 (ar init coefs 0.2))\n        f     (fn [coef]\n                (log-likelihood [0 coef] 2 0 data))]\n    (-> (c/function-plot f -1 1\n                         :x-label \"Coefficient\"\n                         :y-label \"Log-Likelihood\")\n        (i/view))))\n```", "```py\n(defn objective-function [f]\n  (ObjectiveFunction. (reify MultivariateFunction\n                        (value [_ v]\n                          (f (vec v))))))\n```", "```py\n(defn arma-model [p q ys]\n  (let [m (+ p q)\n        f (fn [params]\n            (sc/log-likelihood params p q ys))\n        optimal (.optimize (SimplexOptimizer. 1e-10 1e-10)\n                           (into-array\n                            OptimizationData\n                            [(MaxEval. 100000)\n                             (objective-function f)\n                             GoalType/MAXIMIZE\n                             (->> (repeat 0.0)\n                                  (take m)\n                                  (double-array)\n                                  (InitialGuess.))\n                             (->> (repeat 0.1)\n                                  (take m)\n                                  (double-array)\n                                  (NelderMeadSimplex.))]))\n        point (-> optimal .getPoint vec)\n        value (-> optimal .getValue)]\n    {:ar (take p point)\n     :ma (drop p point)\n     :ll value}))\n\n(defn ex-9-31 []\n  (->> (airline-passengers)\n       (i/log)\n       (difference)\n       (difference 12)\n       (arma-model 9 1)))\n```", "```py\n;; {:ar (-0.23769808471685377 -0.012617164166298971 ...),\n;;  :ma (-0.14754455658280236),\n;;  :ll 232.97813750669314}\n```", "```py\n(defn aic [coefs p q ys]\n  (- (* 2 (+ p q 1))\n     (* 2 (log-likelihood coefs p q ys))))\n```", "```py\n(defn ex-9-32 []\n  (let [data (i/log (airline-passengers))\n        diff-1  (difference 1 data)\n        diff-12 (difference 12 diff-1)\n        forecast (->> (arma (take 9 (reverse diff-12))\n                       []\n                       (:ar params)\n                       (:ma params) 0)\n                      (take 100)\n                      (undifference 12 diff-1)\n                      (undifference 1 data))]\n    (->> (concat data forecast)\n         (i/exp)\n         (timeseries-plot))))\n```", "```py\n(defn ex-9-33 []\n  (let [data (i/log (airline-passengers))\n        diff-1  (difference 1 data)\n        diff-12 (difference 12 diff-1)\n        forecast (->> (arma (take 9 (reverse diff-12))\n                       []\n                       (:ar params)\n                       (:ma params) 0.02)\n                      (take 10)\n                      (undifference 12 diff-1)\n                      (undifference 1 data))]\n    (->> (concat data forecast)\n         (i/exp)\n         (timeseries-plot))))\n```", "```py\n(defn ex-9-34 []\n  (let [data (difference (i/log (airline-passengers)))\n        init (take 12 (reverse data))\n        forecasts (for [n (range 1000)]\n                    (take 20\n                          (arma init [0.0028 0.0028]\n                                (:ar params1)\n                                (:ma params1)\n                                0.0449)))\n        forecast-mean (map s/mean (i/trans forecasts))\n        forecast-sd (-> (map s/sd (i/trans forecasts))\n                        (i/div 2)\n                        (i/mult 1.96))\n        upper (->> (map + forecast-mean forecast-sd)\n                   (concat data)\n                   (undifference 0)\n                   (i/exp))\n        lower (->> (map - forecast-mean forecast-sd)\n                   (concat data)\n                   (undifference 0)\n                   (i/exp))\n        n (count upper)]\n    (-> (c/xy-plot   (range n) upper\n                     :x-label \"Time\"\n                     :y-label \"Value\"\n                     :series-label \"Upper Bound\"\n                     :legend true)\n        (c/add-lines (range n) lower\n                     :series-label \"Lower Bound\")\n        (i/view))))\n```"]