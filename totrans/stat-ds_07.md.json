["```py\n# --- build linear regression model using all the\n# --- project results data\nalinearMod <- lm(ProjectManagement ~ Profit, data=MyData)\n```", "```py\nlm.ridge(formula, data, subset, na.action, lambda = 0, model = FALSE,\nx = FALSE, y = FALSE, contrasts = NULL, ...)\n```", "```py\n# -- create a uniform random number series as X1, X2 and X3\n# --- using runif\nx1 <- runif(n=20)\nx2 <- runif(n=20)\nx3 <- runif(n=20)\n# --- Create a new variable from x1 and x2\nx3c <- 10*x1 + x3\n# --- create a random number\nep <- rnorm(n=20)\ny <- x1 + x2 + ep\n```", "```py\n# --- using the R lm function to create an ordinary least squares (OLS) # -- fit of 3-variable model using x3 as an independent x3 variable\nols <- lm(y~ x1 + x2 + x3)\nsummary(ols)\n```", "```py\n# --- Fit model using ridge regression using independent variables\nridge <- lm.ridge (y ~ x1 + x2 + x3, lambda = seq(0, .1, .001))\nsummary(ridge)\n```", "```py\n# --- load the package \nlibrary(glmnet) \n# --- create our parameter data \ncars_train_mat <- model.matrix(Price ~ .-Saturn, cars_train)[,-1] \nlambdas <- 10 ^ seq(8, -4, length = 250) \n\n```", "```py\n\n # --- create regression model \ncars_models_ridge <-  \n  glmnet(cars_train_mat, cars_train$Price, alpha = 0, lambda = lambdas) \n\n# --- create a lasso model \ncars_models_lasso <-  \n  glmnet(cars_train_mat, cars_train$Price, alpha = 1, lambda = lambdas) \n```", "```py\n# --- print the value of the lambda object of the 100th model \n# --- generated by glmnet \ncars_models_ridge$lambda[100] \n[1] 1694.009 \n\n# --- use coef to see 100th model's coefficient values \ncoef(cars_models_ridge)[,100] \n  (Intercept)       Mileage      Cylinder         Doors  \n 6217.5498831    -0.1574441  2757.9937160   371.2268405  \n       Cruise         Sound       Leather         Buick  \n 1694.6023651   100.2323812  1326.7744321  -358.8397493  \n     Cadillac         Chevy       Pontiac          Saab  \n11160.4861489 -2370.3268837 -2256.7482905  8416.9209564  \n  convertible     hatchback         sedan  \n10576.9050477 -3263.4869674 -2058.0627013 \n```", "```py\n# --- visualize our model data \n# --- set matrix column-widths and the row-heights \nlayout(matrix(c(1, 2), 1, 2)) \n\n# --- create ridge regression plot \nplot(cars_models_ridge, xvar = \"lambda\", main = \"Ridge  \n   Regression\\n\")\n```", "```py\n# --- create lasso plot \nplot(cars_models_lasso, xvar = \"lambda\", main = \"Lasso\\n\") \n```", "```py\n# --- use predict function on the lasso model \npredict(cars_models_lasso, type = \"coefficients\", s = lambda_lasso) \n\nBelow is the generated output, a list of the coefficient values: \n\n (Intercept)  -521.3516739 \nMileage        -0.1861493 \nCylinder     3619.3006985 \nDoors        1400.7484461 \nCruise        310.9153455 \nSound         340.7585158 \nLeather       830.7770461 \nBuick        1139.9522370 \nCadillac    13377.3244020 \nChevy        -501.7213442 \nPontiac     -1327.8094954 \nSaab        12306.0915679 \nconvertible 11160.6987522 \nhatchback   -6072.0031626 \nsedan       -4179.9112364 \n```"]