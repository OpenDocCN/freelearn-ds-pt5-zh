- en: Time Series Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Time series analysis is the analysis of time-dependent data. Given data for
    a certain period, the aim is to predict data for a different period, usually in
    the future. For example, time series analysis is used to predict financial markets,
    earthquakes, and weather.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we are mostly concerned with predicting the numerical values
    of certain quantities, for example, the human population in 2030.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main elements of time-based prediction are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Trends**: Does the variable tend to rise or fall as time passes? For example,
    does the human population grow or shrink?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Seasonality**: How is the data dependent on certain regular events in time?
    For example, are restaurant profits greater on Fridays than on Tuesdays?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Combining these two elements of time series analysis equips us with a powerful
    method to make time-dependent predictions.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing data trends using regression through a business profits example
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Observing and analyzing recurring patterns in data in the form of seasonality
    through an electronics shop's sales example
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the example of an electronics shop's sales, you will learn how to combine
    the analysis of trends and seasonality to predict time-dependent data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating time-dependent models in Python using the examples of business profits
    and the electronics shop's sales
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business profits – analyzing trends
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are interested in predicting the profits of a business for the year 2018
    given its profits for previous years:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Year** | **Profit in USD** |'
  prefs: []
  type: TYPE_TB
- en: '| 2011 | $40,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2012 | $43,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2013 | $45,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2014 | $50,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2015 | $54,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2016 | $57,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2017 | $59,000 |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | ? |'
  prefs: []
  type: TYPE_TB
- en: Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this example, the profit is always increasing, so we can think of representing
    the profit as a growing function that''s dependent on the time variable, which
    is represented by years. The variations in profit between the subsequent years
    are $3,000, $2,000, $5,000, $4,000, $3,000, and $2,000\. These differences do
    not seem to be affected by time, and the variation between them is relatively
    low. Therefore, we may try to predict the profit for the coming years by performing
    linear regression. We express profit, *p*, in terms of the year, *y*, in a linear
    equation, also called a trend line:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/19775688-a007-4f1b-a8ed-d5b0c74596b2.png)'
  prefs: []
  type: TYPE_IMG
- en: We can find the constants, *a* and *b*, using linear regression.
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing trends using the least squares method in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Input**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We store the data from the preceding table in the `year` and `profit` vectors
    in the Python code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we add the trend line to the graph:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/01d4ed10-91f5-4bd0-aeef-ec52c43d56c8.png)'
  prefs: []
  type: TYPE_IMG
- en: Business profits - data analysis
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The trend line equation for the company profit is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/01c7f82d-c7e9-4f3f-958c-4843b6e53ec5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'From this equation, we can predict the profit for the year 2018 to be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/235c967f-63e1-4e32-87ac-b0d557372622.png)'
  prefs: []
  type: TYPE_IMG
- en: This example was simple—we were able to make a prediction just by using linear
    regression on the trend line.
  prefs: []
  type: TYPE_NORMAL
- en: In the next example, we will look at data that is subject to both trends and
    seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: Electronics shop's sales – analyzing seasonality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We have data for sales in thousands of USD for a small electronics shop, by
    month, for the years 2010 to 2017\. We would like to predict sales for each month
    of 2018:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Month/Year** | **2010** | **2011** | **2012** | **2013** | **2014** | **2015**
    | **2016** | **2017** | **2018** |'
  prefs: []
  type: TYPE_TB
- en: '| January | 10.5 | 11.9 | 13.2 | 14.6 | 15.1 | 16.5 | 18.9 | 20 |  |'
  prefs: []
  type: TYPE_TB
- en: '| February | 11.9 | 12.6 | 14.4 | 15.4 | 17.4 | 17.9 | 19.5 | 20.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| March | 13.4 | 13.5 | 16.1 | 16.2 | 17.2 | 19.6 | 19.8 | 22.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| April | 12.7 | 13.6 | 14.9 | 17.8 | 17.8 | 20.2 | 19.7 | 20.9 |  |'
  prefs: []
  type: TYPE_TB
- en: '| May | 13.9 | 14.6 | 15.7 | 17.8 | 18.6 | 19.1 | 20.8 | 21.5 |  |'
  prefs: []
  type: TYPE_TB
- en: '| June | 14 | 14.4 | 15.3 | 16.1 | 18.9 | 19.7 | 21.1 | 22.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| July | 13.5 | 15.7 | 16.8 | 17.4 | 18.3 | 19.7 | 21 | 22.6 |  |'
  prefs: []
  type: TYPE_TB
- en: '| August | 14.5 | 14 | 15.7 | 17 | 17.9 | 20.5 | 21 | 22.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| September | 14.3 | 15.5 | 16.8 | 17.2 | 19.2 | 20.3 | 20.6 | 21.9 |  |'
  prefs: []
  type: TYPE_TB
- en: '| October | 14.9 | 15.8 | 16.3 | 17.9 | 18.8 | 20.3 | 21.4 | 22.9 |  |'
  prefs: []
  type: TYPE_TB
- en: '| November | 16.9 | 16.5 | 18.7 | 20.5 | 20.4 | 22.4 | 23.7 | 24 |  |'
  prefs: []
  type: TYPE_TB
- en: '| December | 17.4 | 20.1 | 19.7 | 22.5 | 23 | 23.8 | 24.6 | 26.6 |  |'
  prefs: []
  type: TYPE_TB
- en: The data in the table is sales in thousands of USD
  prefs: []
  type: TYPE_NORMAL
- en: Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To be able to analyze this, we will first graph the data so that we can observe
    patterns and analyze them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4ea2dbe7-dc6a-404a-a34a-d449e7d94587.png)'
  prefs: []
  type: TYPE_IMG
- en: From the graph and table, we notice that, in the long term, sales increase linearly.
    This is the trend. However, we can also see that the sales for December tend to
    be higher than any other month. Thus, we have reason to believe that sales are
    also influenced by the month.
  prefs: []
  type: TYPE_NORMAL
- en: How can we predict the monthly sales for the following years? First, we determine
    the exact long-term trend of the data. Then, we analyze the change across the
    months.
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing trends using the least squares method in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Input**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The year list contains the periods of the year represented as a decimal number
    *year+month/12*. The sales list contains the sales in thousands of USD for the
    corresponding periods in the year list. We will use linear regression to establish
    the trend line. From the initial graph, we observe that the trend is linear in
    nature:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Therefore, the equation for the trend line is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/05fd26b0-7e10-46e4-b377-55c4a8fa8f19.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we add the trend line to the graph:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/45c4fb8e-7335-42bf-94df-d88dde7ab5f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Analyzing seasonality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we can analyze seasonality—that is, how data changes across months. From
    our observations, we know that, for some months, sales tend to be higher, whereas
    for other months, sales tend to be lower. We evaluate the differences between
    the linear trend and actual sales. Based on the pattern observed in these differences,
    we produce a model of seasonality to predict sales more accurately for each month:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Sales for January** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 10.5 | 11.9 | 13.2 | 14.6 | 15.1 | 16.5 | 18.9 | 20 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.012 | 14.291 | 15.57 | 16.849 | 18.128 | 19.407
    | 20.686 | 21.965 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | -2.512 | -2.391 | -2.37 | -2.249 | -3.028 | -2.907 | -1.786
    | -1.965 | -2.401 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for February** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 11.9 | 12.6 | 14.4 | 15.4 | 17.4 | 17.9 | 19.5 | 20.8 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.1185833333 | 14.3975833333 | 15.6765833333 |
    16.9555833333 | 18.2345833333 | 19.5135833333 | 20.7925833333 | 22.0715833333
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | -1.2185833333 | -1.7975833333 | -1.2765833333 | -1.5555833333
    | -0.8345833333 | -1.6135833333 | -1.2925833333 | -1.2715833333 | -1.3575833333
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for March** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 13.4 | 13.5 | 16.1 | 16.2 | 17.2 | 19.6 | 19.8 | 22.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.2251666667 | 14.5041666667 | 15.7831666667 |
    17.0621666667 | 18.3411666667 | 19.6201666667 | 20.8991666667 | 22.1781666667
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 0.1748333333 | -1.0041666667 | 0.3168333333 | -0.8621666667
    | -1.1411666667 | -0.0201666667 | -1.0991666667 | -0.0781666667 | -0.4641666667
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for April** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 12.7 | 13.6 | 14.9 | 17.8 | 17.8 | 20.2 | 19.7 | 20.9 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.33175 | 14.61075 | 15.88975 | 17.16875 | 18.44775
    | 19.72675 | 21.00575 | 22.28475 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | -0.63175 | -1.01075 | -0.98975 | 0.63125 | -0.64775 | 0.47325
    | -1.30575 | -1.38475 | -0.60825 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for May** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 13.9 | 14.6 | 15.7 | 17.8 | 18.6 | 19.1 | 20.8 | 21.5 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.4383333333 | 14.7173333333 | 15.9963333333 |
    17.2753333333 | 18.5543333333 | 19.8333333333 | 21.1123333333 | 22.3913333333
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 0.4616666667 | -0.1173333333 | -0.2963333333 | 0.5246666667
    | 0.0456666667 | -0.7333333333 | -0.3123333333 | -0.8913333333 | -0.1648333333
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for June** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 14 | 14.4 | 15.3 | 16.1 | 18.9 | 19.7 | 21.1 | 22.1 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.5449166667 | 14.8239166667 | 16.1029166667 |
    17.3819166667 | 18.6609166667 | 19.9399166667 | 21.2189166667 | 22.4979166667
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 0.4550833333 | -0.4239166667 | -0.8029166667 | -1.2819166667
    | 0.2390833333 | -0.2399166667 | -0.1189166667 | -0.3979166667 | -0.3214166667
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for July** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 13.5 | 15.7 | 16.8 | 17.4 | 18.3 | 19.7 | 21 | 22.6 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.6515 | 14.9305 | 16.2095 | 17.4885 | 18.7675
    | 20.0465 | 21.3255 | 22.6045 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | -0.1515 | 0.7695 | 0.5905 | -0.0885 | -0.4675 | -0.3465 | -0.3255
    | -0.0045 | -0.003 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for August** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 14.5 | 14 | 15.7 | 17 | 17.9 | 20.5 | 21 | 22.7 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.7580833333 | 15.0370833333 | 16.3160833333 |
    17.5950833333 | 18.8740833333 | 20.1530833333 | 21.4320833333 | 22.7110833333
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 0.7419166667 | -1.0370833333 | -0.6160833333 | -0.5950833333
    | -0.9740833333 | 0.3469166667 | -0.4320833333 | -0.0110833333 | -0.3220833333
    |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for September** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 14.3 | 15.5 | 16.8 | 17.2 | 19.2 | 20.3 | 20.6 | 21.9 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.8646666667 | 15.1436666667 | 16.4226666667 |
    17.7016666667 | 18.9806666667 | 20.2596666667 | 21.5386666667 | 22.8176666667
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 0.4353333333 | 0.3563333333 | 0.3773333333 | -0.5016666667 |
    0.2193333333 | 0.0403333333 | -0.9386666667 | -0.9176666667 | -0.1161666667 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for October** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 14.9 | 15.8 | 16.3 | 17.9 | 18.8 | 20.3 | 21.4 | 22.9 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 13.97125 | 15.25025 | 16.52925 | 17.80825 | 19.08725
    | 20.36625 | 21.64525 | 22.92425 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 0.92875 | 0.54975 | -0.22925 | 0.09175 | -0.28725 | -0.06625
    | -0.24525 | -0.02425 | 0.08975 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for November** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 16.9 | 16.5 | 18.7 | 20.5 | 20.4 | 22.4 | 23.7 | 24 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 14.0778333333 | 15.3568333333 | 16.6358333333 |
    17.9148333333 | 19.1938333333 | 20.4728333333 | 21.7518333333 | 23.0308333333
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 2.8221666667 | 1.1431666667 | 2.0641666667 | 2.5851666667 |
    1.2061666667 | 1.9271666667 | 1.9481666667 | 0.9691666667 | 1.8331666667 |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Sales for December** |  |  |  |  |  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| Year | 2010 | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 | 2017 | Average |'
  prefs: []
  type: TYPE_TB
- en: '| Actual sales | 17.4 | 20.1 | 19.7 | 22.5 | 23 | 23.8 | 24.6 | 26.6 |  |'
  prefs: []
  type: TYPE_TB
- en: '| Sales on the trend line | 14.1844166667 | 15.4634166667 | 16.7424166667 |
    18.0214166667 | 19.3004166667 | 20.5794166667 | 21.8584166667 | 23.1374166667
    |  |'
  prefs: []
  type: TYPE_TB
- en: '| Difference | 3.2155833333 | 4.6365833333 | 2.9575833333 | 4.4785833333 |
    3.6995833333 | 3.2205833333 | 2.7415833333 | 3.4625833333 | 3.5515833333 |'
  prefs: []
  type: TYPE_TB
- en: We cannot observe any obvious trends in the differences between the actual sales
    and the sales on the trend line. Therefore, we just calculate the arithmetic mean
    of these differences for every month.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we notice that the sales in December tend to be higher by about
    $3,551.58 compared to the sales predicted on the trend line. Similarly, the sales
    for January tend to be lower, on average by $2,401, compared to the sales predicted
    on the trend line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Making the assumption that the month has an impact on the actual sales from
    our observations of the variation in sales across the months, we take our prediction
    rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4886703a-3e96-4c0a-a28f-3b173aad7073.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And we then update it to the new rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7fc40fef-45a4-418c-8548-aa65fb29ab9c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, *sales* is the amount of sales for a chosen month and year in the prediction,
    and *month_difference* is the average difference in our given data between actual
    sales and sales on the trend line. More specifically, we get the following 12
    equations and predictions for sales for the year 2018 in thousands of USD:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cb2ff103-2f93-4f75-9973-b6c112e02032.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/1c6a62ea-0350-41db-be70-9bc2ffd9edfb.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/66de155d-d14c-485e-b635-b31ea8d66761.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/c9f6f0eb-d40c-4900-b9a8-8598142b981a.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/9faf3f0f-2fec-41d7-abde-c4953089ae0b.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/76e1b245-7612-4006-b186-32889995e264.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/81c2accd-83c6-4102-9dd1-24f504742f16.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/a07b66e9-101e-456c-bcda-c1868182bc87.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/5909b056-3616-47d1-b95b-629c60f56b93.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/7a75afb0-912b-4e10-8906-8ec7467f603b.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/87aeb800-fb4e-47cc-bc8d-01976ab83756.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/418f6fc2-6aa6-425f-8fc6-e19146a1a38b.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/ebdebf23-0ebb-4316-bf5f-baf994677533.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/0eaa5820-6ddd-45ce-8cb0-d8970e8b0a8f.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/0c2ab1e4-061d-4267-9ac2-cece63f107fa.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/3e2f07fc-a4c6-4434-874a-824aa3bbb8ac.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/c48b64a4-2ea1-4648-8301-7b212c44fe78.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/8aaf011f-9db9-439b-84ee-7d49e8351627.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/23a4d80c-7ca9-42aa-ac7e-fef5e687a493.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/be5741e0-f184-401d-95ce-3e2a9b7c5798.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/12235841-4cbd-4a66-a411-175f6c1a3586.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/eae3e49b-eb7e-412a-82fc-e1aba8750b6f.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/87768208-d701-4a63-8562-02c5c9093933.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/0e6c1a39-7c6a-4ec4-923d-41a0cab1a89f.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The table is complete with the sales for the year 2018, based on the preceding
    seasonal equations.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can visualize the data predicted on a graph:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3e95c88d-69ad-483b-8f16-8bbbdf799b53.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we studied the analysis of time-dependent data. The two most
    important factors in this analysis are trends and seasonality.
  prefs: []
  type: TYPE_NORMAL
- en: The analysis of trends can be considered as determining the function around
    which the data is distributed. Using the fact that data is dependent on time,
    this function can be determined using regression. Many phenomena have a linear
    trend line, whereas others may not follow a linear pattern.
  prefs: []
  type: TYPE_NORMAL
- en: We also learned that the analysis of seasonality tries to detect regular patterns
    occurring in time repeatedly, such as higher sales before Christmas. To detect
    a seasonal pattern, it is essential to divide data into the different seasons
    in such a way that a pattern reoccurs in the same season. This division can divide
    a year into months, a week into days or into workdays and the weekend, and so
    on. An appropriate division into seasons and analyzing patterns in those is the
    key to good seasonal analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Once trend and seasonality have been analyzed in the data, the combined result
    is a prediction for the pattern that the time-dependent data will follow in the
    future.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter represents the last method of data analysis that's presented in
    this book. After this chapter, you can find reference material on statistics,
    Python programming language concepts, and a glossary of algorithms and methods
    in data science.
  prefs: []
  type: TYPE_NORMAL
- en: Problems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Problem 1**: **Determining the trend for Bitcoin prices**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'a) We are given a table containing Bitcoin prices in USD for the years 2010-2017\.
    Determine a linear trend line for these prices. The monthly price is taken from
    the first day in each month:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Date: year-month-day | Bitcoin price in USD |'
  prefs: []
  type: TYPE_TB
- en: '| 2010-12-01 | 0.23 |'
  prefs: []
  type: TYPE_TB
- en: '| 2011-06-01 | 9.57 |'
  prefs: []
  type: TYPE_TB
- en: '| 2011-12-01 | 3.06 |'
  prefs: []
  type: TYPE_TB
- en: '| 2012-06-01 | 5.27 |'
  prefs: []
  type: TYPE_TB
- en: '| 2012-12-01 | 12.56 |'
  prefs: []
  type: TYPE_TB
- en: '| 2013-06-01 | 129.3 |'
  prefs: []
  type: TYPE_TB
- en: '| 2013-12-01 | 946.92 |'
  prefs: []
  type: TYPE_TB
- en: '| 2014-06-01 | 629.02 |'
  prefs: []
  type: TYPE_TB
- en: '| 2014-12-01 | 378.64 |'
  prefs: []
  type: TYPE_TB
- en: '| 2015-06-01 | 223.31 |'
  prefs: []
  type: TYPE_TB
- en: '| 2015-12-01 | 362.73 |'
  prefs: []
  type: TYPE_TB
- en: '| 2016-06-01 | 536.42 |'
  prefs: []
  type: TYPE_TB
- en: '| 2016-12-01 | 753.25 |'
  prefs: []
  type: TYPE_TB
- en: '| 2017-06-01 | 2,452.18 |'
  prefs: []
  type: TYPE_TB
- en: b) As per the linear trend line from part a), what is the expected price of
    Bitcoin in 2020?
  prefs: []
  type: TYPE_NORMAL
- en: c) Discuss whether a linear line is a good indicator for the future price of
    Bitcoin.
  prefs: []
  type: TYPE_NORMAL
- en: '**Problem 2**: **Electronics shop''s sales:** Using the data in the electronics
    shop''s sales example, predict the sales for every month of the year 2019.'
  prefs: []
  type: TYPE_NORMAL
- en: Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Problem 1**:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Input:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Trend line:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the output of the Python code, we find that the linear trend line for
    the price of Bitcoin in USD is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/33aef863-e2a8-458b-847b-85310ed067cb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This gives us the following graph for the trend line:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4b471927-817c-4bd2-83d5-55ff9314611a.png)'
  prefs: []
  type: TYPE_IMG
- en: As per the trend line, the expected price for Bitcoin for January 1, 2020 is
    $1,731.10.
  prefs: []
  type: TYPE_NORMAL
- en: A linear trend line is probably not a good indicator or price predictor for
    Bitcoin. This is because of the many factors in play and because of the potential
    exponential nature often seen in trends in technology; for example, the number
    of active Facebook users and the number of transistors in the best consumer CPU
    under USD 1,000.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three important factors that could facilitate an exponential adoption
    of Bitcoin and thus drive its price upward:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Technological maturity (scalability)**: The number of transactions per second
    can ensure an instant transfer, even though many people use Bitcoin to make and
    receive payments'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stability**: Once sellers are not afraid to lose their profits if they receive
    payments in Bitcoin, they are more open to accept it as currency'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User-friendliness**: Once ordinary users can make and receive payments in
    Bitcoin in a natural way, there will not be a technical barrier to using Bitcoin
    as they would any other currency they are used to'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To analyze the price of Bitcoin, we would have to take much more data into consideration
    and it is likely that its price will not follow a linear trend.
  prefs: []
  type: TYPE_NORMAL
- en: '**Problem 2**: We use the 12 formulas from the example, one for each month,
    to predict the sales for each month in the year 2019:'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_january = 1.279*(year+0/12) - 2557.778 - 2.401*'
  prefs: []
  type: TYPE_NORMAL
- en: '*= 1.279*(2019 + 0/12) - 2557.778 - 2.401 = 22.122*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_february = 1.279*(2019+1/12) - 2557.778 - 1.358 = 23.272*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_march = 1.279*(2019+2/12) - 2557.778 - 0.464 = 24.272*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_april = 1.279*(2019+3/12) - 2557.778 - 0.608 = 24.234*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_may = 1.279*(2019+4/12) - 2557.778 - 0.165 = 24.784*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_june = 1.279*(2019+5/12) - 2557.778 - 0.321 = 24.735*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_july = 1.279*(2019+6/12) - 2557.778 - 0.003 = 25.160*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_august = 1.279*(2019+7/12) - 2557.778 - 0.322 = 24.947*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_september = 1.279*(2019+8/12) - 2557.778 - 0.116 = 25.259*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_october = 1.279*(2019+9/12) - 2557.778 + 0.090 = 25.572*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_november = 1.279*(2019+10/12) - 2557.778 + 1.833 = 27.422*'
  prefs: []
  type: TYPE_NORMAL
- en: '*sales_december = 1.279*(2019+11/12) - 2557.778 + 3.552 = 29.247*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/89d58402-f432-4159-aa08-9e179c5402fa.png)'
  prefs: []
  type: TYPE_IMG
- en: Electronics shop's sales - data analysis
  prefs: []
  type: TYPE_NORMAL
