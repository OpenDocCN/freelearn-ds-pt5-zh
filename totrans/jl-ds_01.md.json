["```py\nsudo apt-get add-repository ppa:staticfloat/juliareleases \nsudo apt-get update \n\n```", "```py\nsudo apt-get install Julia \n\n```", "```py\njulia --version \n\n```", "```py\nsudo apt-get remove julia \n\n```", "```py\ndnf copr enable nalimilan/julia\n\n```", "```py\n/etc/yum.repos.d/\n\n```", "```py\nyum install julia\n\n```", "```py\nbrew update \nbrew tap staticfloat/julia \nbrew install julia \n\n```", "```py\njulia --version \n\n```", "```py\njulia> include (\"hello.jl\") \n\n```", "```py\nhelp?> \n\n```", "```py\njulia> exit(). \n\n```", "```py\npython -version \n\n```", "```py\nsudo apt-get install python \n\n```", "```py\nconda install jupyter \n\n```", "```py\npip install jupyter \n\n```", "```py\njupyter -version \n\n```", "```py\njulia> Pkg.update() \n\n```", "```py\njulia> Pkg.add(\"IJulia\") \n\n```", "```py\njulia> Pkg.build(\"IJulia\") \n\n```", "```py\njupyter notebook \n\n```", "```py\nPkg.clone(\"git://example.com/path/unofficialPackage/Package.jl.git\") \n\n```", "```py\nPkg.update() \n\n```", "```py\njulia> Pkg.init(\"https://julia.customrepo.com/METADATA.jl.git\", \"branch\") \n\n```", "```py\nPkg.generate(\"HelloWorld\", \"MIT\") \n\n```", "```py\njulia -p n\n\n```", "```py\narr = zeros(500000) \n@parallel for i=1:500000 \n  arr[i] = i \nend \n\n```", "```py\njulia> f(x::Float64, y::Float64) = x + y \n\n```", "```py\njulia> f(10.0, 14.0) \n24.0 \n\n```", "```py\nPkg.add(\"PyCall\") \n\n```"]