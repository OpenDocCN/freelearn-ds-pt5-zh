- en: Anaconda Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will discuss how to install Anaconda and use its various
    components, such as Python, IPython, Jupyter, and Spyder. In this book, we will
    not teach R, Python, Julia, or Octave. Thus, we assume that readers have some
    basic knowledge related to those programming languages, especially Python and
    R. There are many books available, such as *Python for Finance* by Yan (2017,
    2nd edition) and *Financial Modeling Using R* by Yan (2016).
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, the following topics will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Anaconda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using IPython
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Python via Jupyter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing Spyder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing R via Conda
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Julia and linking it to Jupyter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Octave and linking it to Jupyter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finding help
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Anaconda
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, go to [http://anaconda.org/](http://anaconda.org/). We can see Download
    Anaconda the top-right part of the page. Based on the individual operating system,
    users should download the appropriate package.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on which version you prefer, you could download Python 3.6 or Python
    2.7\. Generally speaking, for new learners it is a good idea to download the latest
    version (Python 3.6 in this case). This applies for both Mac and Linux-based operating
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda for Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Refer to the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: For PC users, after clicking on Windows, you will be presented with different
    versions to download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As of May 09, 2018, two versions of Python accompanying Anaconda, version 3.6
    and version 2.7, are available If there are no particular requirements or restrictions,
    it is a good idea to download the latest version, version 3.6\. In addition, there
    are two different downloads for 64-bit and 32-bit systems.
  prefs: []
  type: TYPE_NORMAL
- en: If your system is 32-bit and you try to install a 64-bit version, you would
    get an error message.
  prefs: []
  type: TYPE_NORMAL
- en: 'During the installation process, we can choose the default setting. After this
    is completed, we can see the following information (for a Windows version) after
    clicking All Programs and `Anaconda3 (32-bit)`. However, different readers/users
    might have slightly different settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2acb77a1-3bdd-4430-9a6d-25e8953bedbc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After clicking Anaconda Prompt, we could type a command of `conda info`, shown
    here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/30f7aec5-9cb9-4f70-b6ea-462ba8912226.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, note that readers/users would have quite different results, depending
    on their system and installed packages.
  prefs: []
  type: TYPE_NORMAL
- en: Testing Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The steps for testing Python are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: For PC users, after clicking All Programs, Anaconda3.6, and then Anaconda Prompt,
    we would see the following.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Note that different users would probably get a different path:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/efe5dcc2-7607-4e37-b81a-b6591036d0d8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, just type `python`, and we can launch it, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/be27689e-b245-4afe-945b-4697bf90594e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It tells us that `Python 3.6.3` was operational. We could also try `import
    scipy as sp` to see if it is preinstalled:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb95eb2e-7c87-4c9a-9455-e725ba90a4bd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After we type `import scipy as sp`, no error message appears, which indicates
    that the package was preinstalled. The command of `sp.sqrt(3)` would offer us
    the square root of `3`. Another example with the related graph is shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The previous code will give an output such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/93bfe9af-a2a2-40b5-9fd3-b86a79c4b06c.png)'
  prefs: []
  type: TYPE_IMG
- en: Using IPython
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For a Windows version, after navigating to Anaconda3 from All Programs and
    then clicking on IPython, we can see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7515cb3f-d1ca-456a-bc2f-c52ce01760e3.png)'
  prefs: []
  type: TYPE_IMG
- en: You can also do the the same by launching Anaconda Prompt and then typing `ipython`.
  prefs: []
  type: TYPE_NORMAL
- en: 'This tells us that the version of `Python` is `3.6.3` and that the version
    of `IPython` is `6.1.0`. We could type a few commands to test it. For example,
    if we invest $100 today for an investment horizon of 5 years, and the annual return
    is 10%, what is our expected future value? The future value formula for a given
    present value is provided here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d690c5fa-89a1-4398-9cdd-3310f1411135.png)'
  prefs: []
  type: TYPE_IMG
- en: 'where *FV* is the future value, *PV* is the present value, *R* is the period
    return, and *n* is the number of periods:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f1967e75-4ad2-43f3-b899-3aa38dcbc2d7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The first line of command of `pv=100` assigns a value of `100` to `pv`. For
    the fifth line, we typed a command line of `pv*(1+r)^n`. However, we received
    an error message of `TypeError: unsupported operand type(s) for ^: ''float'' and
    ''int''`. The error message tells us that Python does not recognize the operand
    of `^` for a power. The corresponding operation for a power is double multiplication,
    as in `**`. There is also  a `power()` function similar to `**`, shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e5ba2e8-74eb-462d-a452-5d89cf503cde.png)'
  prefs: []
  type: TYPE_IMG
- en: Using Python via Jupyter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here, we show you how to write simple Python code via Jupyter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From the menu, after clicking Anaconda, we can find an entry called Jupyter
    Notebook. After clicking on that entry, we can see the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/037adc6f-ebee-40b7-876b-5f8b31c97c03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we click New on the right-hand side, we can find several choices. After
    we choose Python 3, we end up with the following starting file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/480d4fc5-a098-41f8-a720-5eb5791d356c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can now type our Python commands in the box. Remember to press *Shift +
    Enter* if you want to execute the command (shown here):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/756e0610-9bfd-417f-b7ca-f293aa7a9471.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can also type multiple commands and execute them, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fd2182db-d246-441b-859d-dcf0b35bff3f.png)'
  prefs: []
  type: TYPE_IMG
- en: The colorful and distinct treatment of keywords, parentheses, and values makes
    our programming a little easier.
  prefs: []
  type: TYPE_NORMAL
- en: We could save our programs by choosing File|Save and Checkpoint on the menu
    bar. Similarly, we could load our presaved programs by choosing File|Revert to
    Checkpoint directly from the menu bar or finding it under Files in the Jupyter
    home page.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing Spyder
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the Anaconda3 menu, the last entry is Spyder. After clicking it, we can
    launch Spyder, shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/225442a6-c920-4746-aece-48d514505596.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The preceding screenshot shows three panels. The left panel is for writing
    and editing our programs, the bottom-right panel is for command lines (we could
    type simple commands there), and the top-right panel is for our variables. For
    example, after we type `pv=100`, it would show the variable name, type, size,
    and value, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce5a282c-c045-4afe-9a2c-85c99220e7b1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We could also write our Python program, and debug and run them via the top-left
    panel. For example, we could run a program with `pv_f()` function to estimate
    the present value of one future cash flow, shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d4c346cf-c1d0-4af4-820c-21a858d190a4.png)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, the green play button is for running the whole
    Python program, while the second green-yellow one is for partially running it.
    This feature makes our debugging efforts a little easier, which is especially
    true for a long and complex program.
  prefs: []
  type: TYPE_NORMAL
- en: Assume that we plan to debug such a program. First, we divide it into a few
    logic blocks. Then, we highlight the first block and run it. After it is bug free,
    we go to the next block. We continue this way until we debug the whole program.
  prefs: []
  type: TYPE_NORMAL
- en: Installing R via Conda
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following steps are for R package installation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that the R package is not preinstalled when installing Anaconda, as shown
    here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b4e59488-9c06-4c06-80f5-b7fe9fdb4a27.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To install R software, we have to issue the following command after we click
    Anaconda Prompt:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'After installation, we can see the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f2bdae13-9ac3-4f84-937a-59b193524cdb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We could try a few commands. For example, we first generate an R function called
    `pv_f()` with the keyword function. For this function, we have three input values:
    `fv` for future value, `r` for interest rate, and `n` for the number of periods:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8cbfdfef-f1c5-4a0d-907d-6ccaf2c2971d.png)'
  prefs: []
  type: TYPE_IMG
- en: Installing Julia and linking it to Jupyter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The steps for installing Julia are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we go to the following web page to download Julia: [https://julialang.org/downloads/](https://julialang.org/downloads/).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As when downloading Anaconda, we have different versions depending on our system,
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eb3589bd-09be-4939-8d4a-4652907d0c89.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, based on your operating system (Windows, Mac, or Linux), choose the appropriate
    version and download the executable package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicking the executable, we can install the package and, in order to launch
    Julia, we simply click on `Julia.exe`*.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In it, we can type `println("Hello World")`, as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e4ffd891-39de-4041-aa92-eb43e1830e5d.png)'
  prefs: []
  type: TYPE_IMG
- en: Alternatively, for Windows, we can click All Programs | Julia. We can also copy
    and paste Julia to our desktop.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, another way to launch Julia is through a DOS window. However,
    before we can do so, we have to add the path to the directory that contains `Julia.exe`
    to our path. For example, in order to use Julia via Jupyter, we have to issue
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d487672c-84c7-4434-bff1-aaa7764244d1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It takes about 10 minutes to install the package called `IJulia`. After that,
    we launch Jupyter, then click New, and we can see the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0f0bc86b-9ed3-4c67-8707-fed7daebfa16.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then we can launch Julia and type our command line of `println("This is great!")`
    there, as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e6b09035-35ae-4a56-9276-ffddf2e18173.png)'
  prefs: []
  type: TYPE_IMG
- en: In terms of Julia language, when discussing optimization in [Chapter 7](d21074f6-dd03-4801-bd06-995b58b56947.xhtml)*,
    Optimization in Anaconda*, we used one or two optimization packages in Julia to
    solve a few problems.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Octave and linking it to Jupyter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these steps to install Octave:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the Octavekernel linked to Anaconda, at Anaconda Prompt, we log
    in by issuing the Anaconda login command. Note that in order to log in, users
    have to register first at [https://anaconda.org](https://aconda.org). After logging
    in to Anaconda, we could issue the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'After we launch Jupyter and click New on the right-hand side, we can see Octave,
    among other languages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4ec8d165-8b61-4ce6-a4fd-6f72effae8ef.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we can test a simple program in Octave:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The related output is shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b0e89c37-3c22-4023-ba09-9da136003add.png)'
  prefs: []
  type: TYPE_IMG
- en: Finding help
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 1](3aefef11-57a1-4d94-88f0-b1b870c02af4.xhtml), *Ecosystem of Anaconda*,
    we showed that we could go to the link [https://docs.anaconda.com/anaconda/user-guide/](https://docs.anaconda.com/anaconda/user-guide/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After clicking the link, we would see four entries, shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/43dc946c-a0a9-4bd2-912f-e9307f5cc86c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We could type `conda help` to find information about the usages of Conda. In
    Windows, click All Programs | Anaconda | Anaconda Prompt. In the Prompt, type `conda
    help`, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d60190d9-8a4b-40ff-9f87-ee28b132105b.png)'
  prefs: []
  type: TYPE_IMG
- en: To find all packages associated with a Conda environment, we could issue the `conda
    list` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Since the number of packages is quite large, a better solution is to generate
    a text file. We could issue `conda list >c:/temp/list.txt`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/11580570-2e2c-4bc7-bad6-6d4157e3dec7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The first several lines from the output file called `list.txt` are shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2399a6f6-790a-4df3-a889-a66c0ce0b27e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We could write an R program to read this text file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: To learn how to use Jupyter, we can click Help on the menu bar after we launch
    Jupyter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the list of entries, we can find the menu about Python and IPython and
    information about the Python packages called `NumPy`, `SciPy`, `Matplotlib`, and
    so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After clicking on Keyboard Shortcuts, we would see the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fc6a9e05-13d7-4255-b162-cf5875d408ba.png)'
  prefs: []
  type: TYPE_IMG
- en: To access the free support group, go to the link at [https://groups.google.com/a/anaconda.com/forum/#!forum/anaconda](https://groups.google.com/a/anaconda.com/forum/#!forum/anaconda).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we showed you how to install Anaconda and test if the installation
    was successful. We looked at how to launch Jupyter and how to use it to launch
    Python, how to launch Spyder and R, and how to find help. Most of these concepts
    or procedures are quite basic, so users who are quite confident with them can
    skip this chapter and go to [Chapter 3](b40472e2-4998-4d7c-ac22-b77f4ad21a22.xhtml)*, Data
    Basics*, directly.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 3](b40472e2-4998-4d7c-ac22-b77f4ad21a22.xhtml)*, Data Basics*, we
    first discuss open data sources such as the UCI (University of California at Irvin)
    machine learning depository and the bureau of labor statistics. Then, we introduce
    the Python Pandas package. Many issues, such as how to deal with missing data,
    sorting, how to slice and dice datasets, merging different datasets, and data
    input and output, will be discussed in detail. Several relevant packages for data
    manipulation will be also introduced and discussed.
  prefs: []
  type: TYPE_NORMAL
- en: Review questions and exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is Anaconda? How do we use its platform?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the home page for Anaconda?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we install Anaconda?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After Anaconda is installed, should we install Python separately? What about
    R?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is Jupyter? How do we launch it?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we launch Python from Jupyter?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we use Python via Jupyter?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is Spyder and how do we launch it?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Write a Python program to estimate the present value of the annuity, as shown
    in the following formula:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8a6725cb-d38a-4c9e-ab25-183e2db4a093.png)'
  prefs: []
  type: TYPE_IMG
- en: '*pv(annuity)* is the present value of the annuity, *C* is the periodic payment,
    *R* is the discount rate, and *n* is the number of periods.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Find out how many packages are available after you have installed Anaconda.
    (Hint: check the link at [https://docs.anaconda.com/anaconda/packages/pkg-docs](https://docs.anaconda.com/anaconda/packages/pkg-docs).)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the advantages and disadvantages of using [https://jupyter.org/try](https://jupyter.org/try)?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Where can new users find more information about Anaconda?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the Julia programming language?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we install Julia and how do we call Julia from Jupyter?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we install Octave and link it to Jupyter?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we find help for Jupyter?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Where can we find lots of open data?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For Python and R, calculate the value of 2³ (2 raised to a power of 3).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we launch R independently?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How do we use Spyder to load a Python program and run it?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
