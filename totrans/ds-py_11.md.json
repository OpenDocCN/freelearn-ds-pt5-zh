["```py\n    from pixiedust.display.app import *\n    @PixieApp\n    class MyApp():\n        pass\n    ```", "```py\n        from pixiedust.display.app import *\n        @PixieApp\n        class MyApp():\n            @route(key1=”value1”, key2=”*”)\n            def myroute_screen(self, key1, key2):\n                return “<div>fragment: Key1 = {{key1}} - Key2 = {{key2}}”\n        ```", "```py\n    from pixiedust.display.app import *\n    @PixieApp\n    class MyApp():\n        @route(key1=”value1”, key2=”*”)\n        @templateArgs\n        def myroute_screen(self, key1, key2):\n            local_var = “some value”\n            return “<div>fragment: local_var = {{local_var}}”\n    ```", "```py\n    from pixiedust.display.app import *\n    import matplotlib.pyplot as plt\n    @PixieApp\n    class MyApp():\n        @route()\n        @captureOutput\n        def main_screen(self):\n            plt.plot([1,2,3,4])\n            plt.show()\n    ```", "```py\n    from pixiedust.display.app import *\n    from pixiedust.utils import Logger\n    @PixieApp\n    @Logger()\n    class MyApp():\n        @route()\n        def main_screen(self):\n            self.debug(“In main_screen”)\n            return “<div>Hello World</div>”\n    ```", "```py\n    <div pd_entity>\n        <pd_options>\n            {\n                “mapboxtoken”: “XXXXX”,\n                “chartsize”: “90”,\n                “aggregation”: “SUM”,\n                “rowCount”: “500”,\n                “handlerId”: “mapView”,\n                “rendererId”: “mapbox”,\n                “valueFields”: “IncidntNum”,\n                “keyFields”: “X,Y”,\n                “basemap”: “light-v9”\n            }\n        </pd_options>\n    </div>\n    ```", "```py\n    <!-- Invoke a route that displays a chart -->\n    <button type=”submit” pd_options=”showChart=true” pd_target=”chart{{prefix}}”>\n        Show Chart\n    </button>\n    ```", "```py\n    <div id=”chart{{prefix}}”>\n    <button type=”submit” pd_options=”showChart=true” pd_target=”chart{{prefix}}”>\n        Show Chart\n    </button>\n    </div>\n    ```", "```py\n    <!-- Invoke a method to load a dataframe before visualizing it -->\n    <div id=”chart{{prefix}}”>\n    <button type=”submit”\n        pd_entity=”df”\n        pd_script=”self.df = self.load_df()”\n        pd_options=”handlerId=dataframe”\n        pd_target=”chart{{prefix}}”>\n        Show Chart\n    </button>\n    </div>\n    ```", "```py\n    <div pd_render_onload\n         pd_option=”show_route_X=true”\n         pd_app=”some.package.RemoteApp”>\n    </div>\n    ```", "```py\n    <div pd_render_onload>\n        <pd_script>\n    print(‘hello world rendered on load’)\n        </pd_script>\n    </div>\n    ```", "```py\n    <!-- Update state before refreshing a chart -->\n    <button type=”submit”\n        pd_script=”self.show_line_chart()”\n        pd_refresh=”chart{{prefix}}”>\n        Show line chart\n    </button>\n    ```", "```py\n        <button type=”submit” pd_event_payload=”type=topicA;message=Button clicked”>\n            Send event A\n        </button>\n        <button type=”submit”>\n            <pd_event_payload>\n            {\n                “type”:”topicA”,\n                “message”:”Button Clicked”\n            }\n            </pd_event_payload>\n            Send event A\n        </button>\n        ```", "```py\n        <div class=”col-sm-6” id=”listenerA{{prefix}}”>\n            Listening to button event\n            <pd_event_handler\n                pd_source=”topicA”\n                pd_script=”print(eventInfo)”\n                pd_target=”listenerA{{prefix}}”>\n            </pd_event_handler>\n        </div>\n        ```", "```py\n    <div pd_refresh_rate=”3000”\n        pd_script=”print(self.get_status())”>\n    </div>\n    ```", "```py\n    def setup(self):\n        self.var1 = “some initial value”\n        self.pandas_dataframe = pandas.DataFrame(data)\n    ```", "```py\n        app = MyPixieApp()\n        app.run(runInDialog=”true”)\n        ```", "```py\n        app.invoke_route(app.route_method, arg1 = “value1”, arg2 = “value2”)\n        ```", "```py\n    self.getPixieAppEntity()\n    ```"]