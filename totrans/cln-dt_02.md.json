["```py\nflossmole2:~ megan$ pwd\n/Users/megan\nflossmole2:~ megan$ cd Downloads\nflossmole2:Downloads megan$ less OlympicAthletes_0.xlsx\n\"OlympicAthletes_0.xlsx\" may be a binary file. See it anyway?\n\n```", "```py\nFirst name,birth date,favorite color\nSally,1970-09-09,blue\nManu,1984-11-03,red\nMartin,1978-12-10,yellow\n```", "```py\nFirst name,birth date,favorite color,salary\nSally,1971-09-16,light blue,129,000\nManu,1984-11-03,red,159,960\nMartin,1978-12-10,yellow,76,888\n```", "```py\nFirst name,birth date,favorite color,salary\n\"Sally\",\"1971-09-16\",\"light \"Carolina\" blue\",\"129,000\"\n\"Manu\",\"1984-11-03\",\"red\",\"159,960\"\n\"Martin\",\"1978-12-10\",\"yellow\",\"76,888\"\n```", "```py\nFirst name,birth date,favorite color,salary\n\"Sally\",\"1971-09-16\",\"light \\\"Carolina\\\" blue\",\"129,000\"\n\"Manu\",\"1984-11-03\",\"red\",\"159,960\"\n\"Martin\",\"1978-12-10\",\"yellow\",\"76,888\"\n```", "```py\n{\n  \"firstName\": \"Sally\",\n  \"birthDate\": \"1971-09-16\",\n  \"faveColor\": \"light\\\"Carolina\\\" blue\",\n  \"salary\":129000\n}\n```", "```py\n{\n  \"firstName\": \"Sally\",\n  \"birthDate\": \"1971-09-16\",\n  \"faveColor\": \"light\\\"Carolina\\\" blue\",\n  \"salary\": \"129,000\"\n}\n```", "```py\n{\n  \"firstName\": \"Sally\",\n  \"birthDate\": \"1971-09-16\",\n  \"faveColor\": \"light\\\"Carolina\\\" blue\",\n  \"pet\":\n  [\n    {\n      \"type\": \"dog\",\n      \"name\": \"Fido\"\n    },\n    {\n      \"type\": \"dog\",\n      \"name\": \"Lucky\"\n    }\n  ],\n  \"job\": {\n    \"jobTitle\": \"Data Scientist\",\n    \"company\": \"Data Wizards, Inc.\",\n    \"salary\":129000\n  }\n}\n```", "```py\ntar cvf fileArchive.tar reallyBigFile.csv anotherBigFile.csv\n\n```", "```py\ntar xvf fileArchive.tar\n\n```", "```py\ntar –tf fileArchive.tar\n\n```", "```py\ntar cvzf fileArchive.tar.gz reallyBigFile.csv anotherBigFile.csv\n\n```", "```py\ntar cvf fileArchive.tar reallyBigFile.csv anotherBigFile.csv\ngzip fileArchive.tar\n\n```", "```py\ngunzip fileArchive.tar.gz\ntar xvf fileArchive.tar\n\n```", "```py\ntar cvjf fileArchive.tar.bz2 reallyBigFile.csv anotherBigFile.csv\n\n```", "```py\nbunzip2 fileArchive.tar.bz\ntar xvf fileArchive.tar\n\n```", "```py\nSELECT YEAR(date) AS yr, DAYOFWEEK(date) AS day, COUNT(mid) FROM message WHERE MONTHNAME(date) = \"May\" AND DAY(date) = 12\nGROUP BY yr, day\nORDER BY yr ASC;\n\n```", "```py\n2000-01-21 04:51:00\n```", "```py\n4:51am, Friday, January 21, 2000\n```", "```py\n    SELECT concat(hour(date),\n    ':',\n    minute(date),\n    ', ',\n    dayname(date),\n    ', ',\n    monthname(date),\n    ' ',\n    day(date),\n    ', ',\n    year(date))\n    FROM message WHERE mid=52;\n\n    ```", "```py\n    4:51, Friday, January 21, 2000\n\n    ```", "```py\n    SELECT concat(\n     concat(hour(date),\n     ':',\n     minute(date)),\n     if(hour(date)<12,'am','pm'),\n     concat(\n     ', ',\n     dayname(date),\n     ', ',\n     monthname(date),\n     ' ',\n     day(date),\n     ', ',\n     year(date)\n     )\n    )\n    FROM message\n    WHERE mid=52;\n\n    ```", "```py\n    4:51am Friday, January 21, 2000\n\n    ```", "```py\n    SELECT date_format(date, '%l:%i%p, %W, %M %e, %Y')\n    FROM message\n    WHERE mid=52;\n\n    ```", "```py\n    4:51AM, Friday, January 21, 2000\n\n    ```", "```py\n    SELECT concat(\n     date_format(date, '%l:%i'),\n     lower(date_format(date,'%p ')),\n     date_format(date,'%W, %M %e, %Y')\n    )\n    FROM message\n    WHERE mid=52;\n\n    ```", "```py\n    4:51am, Friday, January 21, 2000\n\n    ```", "```py\n> From: Le Vine, Debi> Sent: Thursday, August 17, 2000 6:29 PM> To: ISO Market Participants> Subject: Request for Bids - Contract for Generation Under Gas> Curtailment Conditions>> Attached is a Request for Bids to supply the California ISO with> Generation\n```", "```py\nSELECT\nstr_to_date(\n substring_index(\n substring_index(reference,'>',3),\n 'Sent: ',\n -1\n ),\n '%W,%M %e, %Y %h:%i %p'\n)\nFROM referenceinfo\nWHERE mid=79;\n\n```", "```py\n2000-08-17 18:29:00\n\n```", "```py\nMarch had slipped by 51 cts at the same time to trade at $18.47/bbl.\n```", "```py\nSELECT convert(\n substring_index(\n substring(\n body,\n locate('$',body)+1\n ),\n '/bbl',\n 1\n ),\n decimal(4,2)\n ) as price\nFROM message\nWHERE body LIKE \"%$%\" AND body LIKE \"%/bbl%\" AND sender = 'energybulletin@platts.com';\n\n```", "```py\n<?php\n// connect to db\n$dbc = mysqli_connect('localhost','username','password','enron')\n       or die('Error connecting to database!' . mysqli_error());\n\n// the same sample count-by-date query from chapter 1\n$select_query = \"SELECT date(date) AS dateSent, count(mid) AS numMsg FROM message GROUP BY 1 ORDER BY 1\";\n$select_result = mysqli_query($dbc, $select_query);\n// die if the query failed\nif (!$select_result)\n       die (\"SELECT failed! [$select_query]\" .  mysqli_error());\n// build a new array, suitable for json printing\n$counts = array();\nwhile($row = mysqli_fetch_array($select_result))\n{\n     array_push($counts, array('dateSent' => $row['dateSent'], 'numMsg'   => $row['numMsg']));\n}\necho json_encode($counts);\n?>\n```", "```py\n[\n  {\"dateSent\":\"0001-05-30\",\"numMsg\":\"2\"},\n  {\"dateSent\":\"0001-06-18\",\"numMsg\":\"1\"}\n]\n```", "```py\necho json_encode($counts, JSON_NUMERIC_CHECK);\n```", "```py\n[\n  {\"dateSent\":\"0001-05-30\",\"numMsg\":2},\n  {\"dateSent\":\"0001-06-18\",\"numMsg\":1}\n]\n```", "```py\nd3.json(\"counts.json\", function(d) {\n  return {\n    dateSent: d.dateSent,\n    numMsg: +d.numMsg\n  };\n}, function(error, rows) {\n  console.log(rows);\n});\n```", "```py\nFirst name,birth date,favorite color,salary\n\"Sally\",\"1971-09-16\",\"light blue\",129000\n\"Manu\",\"1984-11-03\",\"\",159960\n\"Martin\",\"1978-12-10\",\"\",76888\n```", "```py\nINSERT INTO people (firstName, birthdate, faveoriteColor, salary) VALUES (\"Manu\",\"1984-11-03\",\"\",159960);\n\n```", "```py\n{\n  \"firstName\": \"Sally\",\n  \"birthDate\": \"1971-09-16\",\n  \"faveColor\": \"\",\n  \"pet\": [],\n  \"job\": {\n    \"jobTitle\": \"Data Scientist\",\n    \"company\": \"Data Wizards, Inc.\",\n    \"salary\":129000\n  }\n}\n```", "```py\n-- this SQL has an empty for Sally's favoriteColor and a space for Frank's\nINSERT INTO people (firstName, birthdate, faveoriteColor, salary)\nVALUES (\"Sally\",\"1971-09-16\",\"\",129000),\n (\"Frank\",\"1975-10-23\",\" \",76000);\n\n```", "```py\nSELECT Name, length(Name)\nFROM Country\nWHERE Code='CIV';\n\n```", "```py\nALTER TABLE  Country CHANGE Name `Name` CHAR(52) CHARACTER SET utf8 COLLATE utf8_general_ci\n NOT NULL DEFAULT  '';\n\n```", "```py\nTRUNCATE Country;\n\n```", "```py\nSELECT *  FROM Country WHERE length(Name) != char_length(Name);\n\n```", "```py\nSELECT length('私は、データを愛し'), char_length('私は、データを愛し');\n```", "```py\nSELECT convert(\n convert(title USING BINARY) USING latin1 ) AS 'latin1 version', \nconvert(\n convert(title USING BINARY) USING utf8\n) AS 'utf8 version'\nFROM movies WHERE convert(title USING BINARY)\n RLIKE concat(\n '[', unhex('80'), '-', unhex('FF'), ']'\n );\n\n```", "```py\nimport twitter\nimport sys\n\n####################\ndef oauth_login():\n    CONSUMER_KEY = ''\n    CONSUMER_SECRET = ''\n    OAUTH_TOKEN = ''\n    OAUTH_TOKEN_SECRET = ''\n    auth = twitter.oauth.OAuth(OAUTH_TOKEN, OAUTH_TOKEN_SECRET,\n                               CONSUMER_KEY, CONSUMER_SECRET)\n    twitter_api = twitter.Twitter(auth=auth)\n    return twitter_api\n###################\n\ntwitter_api = oauth_login()\ncodeword = 'DataCleaning'\ntwitter_stream = twitter.TwitterStream(auth=twitter_api.auth)\nstream = twitter_stream.statuses.filter(track=codeword) \n\nf = open('outfile.txt','wb')\ncounter = 0\nmax_tweets = 10\nfor tweet in stream:\n    print counter, \"-\", tweet['text'][0:10]\n    f.write(tweet['text'])\n    f.write('\\n')\n    counter += 1\n    if counter >= max_tweets:\n        f.close()\n        sys.exit()\n```", "```py\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u00c9' in position 72: ordinal not in range(128)\n```", "```py\nfor tweet in stream:\n    encoded_tweet = tweet['text'].encode('ascii','ignore')\n    print counter, \"-\", encoded_tweet[0:10]\n    f.write(encoded_tweet)\n```", "```py\nÉg elska gögn\n```", "```py\ng elska ggn\n```", "```py\nf = codecs.open('outfile.txt', 'a+', 'utf-8')\n```", "```py\nf= io.open('outfile.txt', 'a+', encoding='utf8')\n```"]