- en: '*Appendix*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录*'
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section is included to assist you in performing the activities present
    in the book. It includes detailed steps that are to be performed by the students
    to complete and achieve the objectives of the book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容是为帮助您完成书中活动而包含的。它包括学生需要执行的详细步骤，以便完成并实现书中的目标。
- en: 'Chapter 1: Introduction to Data Science and Data Preprocessing'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第1章：数据科学与数据预处理简介
- en: 'Activity 1: Pre-Processing Using the Bank Marketing Subscription Dataset'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 1：使用银行营销订阅数据集进行预处理
- en: Solution
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Let''s perform various pre-processing tasks on the`Bank Marketing Subscription`
    dataset. We''ll also be splitting the dataset into training and testing data.
    Follow these steps to complete this activity:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们对`Bank Marketing Subscription`数据集进行各种预处理任务。我们还将把数据集分为训练数据和测试数据。按照以下步骤完成此活动：
- en: 'Open a Jupyter notebook and add a new cell to import the pandas library and
    load the dataset into a pandas dataframe. To do so, you first need to import the
    library, and then use the `pd.read_csv()` function, as shown here:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个Jupyter笔记本并添加一个新单元格，导入pandas库并将数据集加载到pandas数据框中。首先需要导入该库，然后使用`pd.read_csv()`函数，如下所示：
- en: '[PRE0]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To find the number of rows and columns in the dataset, add the following code:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查找数据集中的行数和列数，请添加以下代码：
- en: '[PRE1]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The preceding code generates the following output:'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码生成以下输出：
- en: '![Figure 1.60: Number of rows and columns in the dataset](img/C13322_01_61.jpg)'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.60：数据集中的行数和列数](img/C13322_01_61.jpg)'
- en: 'Figure 1.60: Number of rows and columns in the dataset'
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.60：数据集中的行数和列数
- en: 'To print the list of all columns, add the following code:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要打印所有列的列表，请添加以下代码：
- en: '[PRE2]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The preceding code generates the following output:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码生成以下输出：
- en: '![Figure 1.61: List of columns present in the dataset](img/C13322_01_62.jpg)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.61：数据集中包含的列列表](img/C13322_01_62.jpg)'
- en: 'Figure 1.61: List of columns present in the dataset'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.61：数据集中包含的列列表
- en: 'To overview the basic statistics of each column, such as the count, mean, median,
    standard deviation, minimum value, maximum value, and so on, add the following
    code:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要概览每一列的基本统计数据，如计数、均值、中位数、标准差、最小值、最大值等，可以添加以下代码：
- en: '[PRE3]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding code generates the following output:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码生成以下输出：
- en: '![Figure 1.62: Basic statistics of each column](img/C13322_01_63.jpg)'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 1.62：每一列的基本统计数据](img/C13322_01_63.jpg)'
- en: 'Figure 1.62: Basic statistics of each column'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.62：每一列的基本统计数据
- en: 'To print the basic information of each column, add the following code:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要打印每一列的基本信息，请添加以下代码：
- en: '[PRE4]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The preceding code generates the following output:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上述代码生成以下输出：
- en: '![Figure 1.63: Basic information of each column'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.63：每一列的基本信息'
- en: '](img/C13322_01_64.jpg)'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_64.jpg)'
- en: 'Figure 1.63: Basic information of each column'
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.63：每一列的基本信息
- en: In the preceding figure, you can see that none of the columns contains any null
    values. Also, the type of each column is provided.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在上面的图中，可以看到没有任何列包含空值。此外，还提供了每一列的数据类型。
- en: 'Now let''s check for missing values and the type of each feature. Add the following
    code to do this:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们检查缺失值和每个特征的类型。请添加以下代码来执行此操作：
- en: '[PRE5]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Have a look at the output for this in the following figure:'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看下面图中的输出结果：
- en: '![Figure 1.64: Information of each column stating the number of null values
    and the data types'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.64：每一列的信息，包括空值的数量和数据类型'
- en: '](img/C13322_01_65.jpg)'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_65.jpg)'
- en: 'Figure 1.64: Information of each column stating the number of null values and
    the data types'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.64：每一列的信息，包括空值的数量和数据类型
- en: 'Since we have loaded the dataset into the `data` object, we will remove the
    null values from the dataset. To remove the null values from the dataset, add
    the following code:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们已经将数据集加载到`data`对象中，我们将从数据集中删除空值。要删除空值，可以添加以下代码：
- en: '[PRE6]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Have a look at the output for this in the following figure:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看下面图中的输出结果：
- en: '![Figure 1.65: Features of dataset with no null values'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.65：无空值的数据集特征'
- en: '](img/C13322_01_66.jpg)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_66.jpg)'
- en: 'Figure 1.65: Features of dataset with no null values'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.65：无空值的数据集特征
- en: 'Now we check the frequency distribution of the `education` column in the dataset.
    Use the `value_counts()` function to implement this:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们检查数据集中`education`列的频率分布。使用`value_counts()`函数来实现这一点：
- en: '[PRE7]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Have a look at the output for this in the following figure:'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看下面图中的输出结果：
- en: '![Figure 1.66: Frequency distribution of the education column'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.66：教育列的频率分布'
- en: '](img/C13322_01_67.jpg)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_67.jpg)'
- en: 'Figure 1.66: Frequency distribution of the education column'
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.66：education列的频率分布
- en: 'In the preceding figure, we can see that the `education` column of the dataset
    has many categories. We need to reduce the categories for better modeling. To
    check the various categories in the `education` column, we use the `unique()`
    function. Type the following code to implement this:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前面的图中，我们可以看到数据集的`education`列有很多类别。我们需要减少这些类别，以便更好地建模。为了检查`education`列中的各种类别，我们使用`unique()`函数。输入以下代码来实现这一点：
- en: '[PRE8]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output is as follows:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.67: Various categories of the education column'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.67：education列的各种类别'
- en: '](img/C13322_01_68.jpg)'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_68.jpg)'
- en: 'Figure 1.67: Various categories of the education column'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.67：education列的各种类别
- en: 'Now let''s group the `basic.4y`, `basic.9y`, and `basic.6y` categories together
    and call them `basic`. To do this, we can use the `replace` function from pandas:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们将`basic.4y`、`basic.9y`和`basic.6y`这些类别合并为一个`basic`类别。为此，我们可以使用pandas的`replace`函数：
- en: '[PRE9]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To check the list of categories after grouping, add the following code:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查分组后的类别列表，添加以下代码：
- en: '[PRE10]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure 1.68: Various categories of the education column'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.68：education列的各种类别'
- en: '](img/C13322_01_69.jpg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_69.jpg)'
- en: 'Figure 1.68: Various categories of the education column'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.68：education列的各种类别
- en: In the preceding figure, you can see that `basic.9y`, `basic.6y`, and `basic.4y`
    are grouped together as `Basic`.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在前面的图中，你可以看到`basic.9y`、`basic.6y`和`basic.4y`被合并为`Basic`。
- en: 'Now we select and perform a suitable encoding method for the data. Add the
    following code to implement this:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们选择并执行适当的数据编码方法。添加以下代码来实现这一点：
- en: '[PRE11]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The preceding code generates the following output:'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码生成了以下输出：
- en: '![Figure 1.69: Various columns of the dataset'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.69：数据集的各个列'
- en: '](img/C13322_01_70.jpg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_70.jpg)'
- en: 'Figure 1.69: Various columns of the dataset'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.69：数据集的各个列
- en: 'Now we define a list with all the names of the categorical features in the
    data. Also, we loop through every variable in the list, getting dummy variable
    encoded output. Add the following code to do this:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们定义一个包含数据中所有类别特征名称的列表。此外，我们循环遍历列表中的每个变量，获取虚拟变量编码的输出。添加以下代码来实现这一点：
- en: '[PRE12]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The preceding code generates the following output:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码生成了以下输出：
- en: '![Figure 1.70: List of categorical features in the data'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.70：数据中类别特征的列表'
- en: '](img/C13322_01_71.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_71.jpg)'
- en: 'Figure 1.70: List of categorical features in the data'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.70：数据中类别特征的列表
- en: 'Now we neglect the categorical column for which we have done encoding. We''ll
    select only the numerical and encoded categorical columns. Add the code to do
    this:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们忽略已经进行了编码的类别列。我们将只选择数值列和已编码的类别列。添加代码以实现此操作：
- en: '[PRE13]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The preceding code generates the following output:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的代码生成了以下输出：
- en: '![Figure 1.71: List of numerical and encoded categorical columns'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 1.71：数值列和已编码类别列的列表'
- en: '](img/C13322_01_72.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_01_72.jpg)'
- en: 'Figure 1.71: List of numerical and encoded categorical columns'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.71：数值列和已编码类别列的列表
- en: 'Finally, we split the data into train and test sets. Add the following code
    to implement this:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将数据拆分为训练集和测试集。添加以下代码来实现这一点：
- en: '[PRE14]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output is as follows:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 1.72: Shape of the full, train, and test datasets'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 1.72：完整数据集、训练集和测试集的形状'
- en: '](img/C13322_01_73.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_01_73.jpg)'
- en: 'Figure 1.72: Shape of the full, train, and test datasets'
  id: totrans-86
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1.72：完整数据集、训练集和测试集的形状
- en: 'Chapter 2: Data Visualization'
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第2章：数据可视化
- en: 'Activity 2: Line Plot'
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 2：折线图
- en: '**Solution**:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Create a list of 6 strings for each month, January through June, and save it
    as x using:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含从一月到六月的六个字符串的列表，并将其保存为x，使用以下代码：
- en: '[PRE15]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a list of 6 values for ''`Items Sold`'' that starts at 1000 and increases
    by 200, so the final value is 2000 and save it as y as follows:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含6个值的列表，代表'`Items Sold`'，其值从1000开始，每次增加200，直到最终值为2000，并将其保存为y，如下所示：
- en: '[PRE16]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Plot y (''`Items Sold`'') by x (''`Month`'') with a dotted blue line and star
    markers using the following:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码绘制y（'`Items Sold`'）与x（'`Month`'）的折线图，线为虚线，标记为星形：
- en: '[PRE17]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Set the x-axis to ''`Month`'' using the following code:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将x轴设置为'`Month`'：
- en: '[PRE18]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Set the y-axis to ''`Items Sold`'' as follows:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将y轴设置为'`Items Sold`'，如下所示：
- en: '[PRE19]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To set the title to read ''`Items Sold has been Increasing Linearly`'', refer
    to the following code:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将标题设置为'`Items Sold has been Increasing Linearly`'，请参考以下代码：
- en: '[PRE20]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Check out the following screenshot for the resultant output:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看以下截图，查看结果输出：
- en: '![Figure 2.33: Line plot of items sold by month'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.33：按月销售项目的折线图'
- en: '](img/C13322_02_33.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_02_33.jpg)'
- en: 'Figure 2.33: Line plot of items sold by month'
  id: totrans-105
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.33：按月销售项目的折线图
- en: 'Activity 3: Bar Plot'
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动3：条形图
- en: '**Solution**:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Create a list of five strings for `x` containing the names of NBA franchises
    with the most titles using the following code:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码为`x`创建一个包含五个字符串的列表，表示获得最多冠军的NBA球队名称：
- en: '[PRE21]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a list of five values for `y` containing values for ''`Titles Won`''
    that correspond with the strings in `x` using the following code:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码为`y`创建一个包含五个值的列表，这些值对应于`x`中的字符串，表示'`Titles Won`'：
- en: '[PRE22]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Place `x` and `y` into a data frame with the column names ''`Team`'' and ''`Titles`'',
    respectively, as follows:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`x`和`y`放入数据框中，列名分别为'`Team`'和'`Titles`'，如下所示：
- en: '[PRE23]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To sort the data frame descending by ''Titles'' and save it as df_sorted, refer
    to the following code:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码对数据框按'Titles'进行降序排序，并将结果保存为df_sorted：
- en: '[PRE24]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: If we sort with `ascending=True`, the plot will have larger values to the right.
    Since we want the larger values on the left, we will be using `ascending=False`.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们使用`ascending=True`进行排序，图表中较大的值会出现在右侧。由于我们希望较大的值出现在左侧，我们将使用`ascending=False`。
- en: 'Make a programmatic title and save it as title by first finding the team with
    the most titles and saving it as the `team_with_most_titles` object using the
    following code:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个程序化的标题，并首先通过以下代码找到获得最多冠军的球队，并将其保存为`team_with_most_titles`对象：
- en: '[PRE25]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Then, retrieve the number of titles for the team with the most titles using
    the following code:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用以下代码检索获得最多冠军的球队的冠军数量：
- en: '[PRE26]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Lastly, create a string that reads ''`The Boston Celtics have the most titles
    with 17`'' using the following code:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下代码创建一个字符串'`The Boston Celtics have the most titles with 17`'：
- en: '[PRE27]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Use a bar graph to plot the number of titles by team using the following code:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码绘制一个条形图，显示各球队的冠军数量：
- en: '[PRE28]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Set the x-axis label to ''`Team`'' using the following:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将x轴标签设置为'`Team`'：
- en: '[PRE29]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Set the y-axis label to ''`Number of Championships`'' using the following:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将y轴标签设置为'`Number of Championships`'：
- en: '[PRE30]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To prevent the x tick labels from overlapping by rotating them 45 degrees,
    refer to the following code:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了防止x轴刻度标签重叠，我们将它们旋转45度，请参考以下代码：
- en: '[PRE31]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Set the title of the plot to the programmatic `title` object we created as
    follows:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图表的标题设置为我们创建的程序化`title`对象，如下所示：
- en: '[PRE32]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Save the plot to our current working directory as ''`Titles_by_Team.png`''
    using the following code:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将图表保存到当前工作目录下，文件名为'`Titles_by_Team.png`'：
- en: '[PRE33]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Print the plot using `plt.show()`. To understand this better, check out the
    following output screenshot:![Figure 2.34: The bar plot of the number of titles
    held by an NBA team'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`plt.show()`打印图表。为了更好地理解这一点，请查看以下输出截图：![图2.34：NBA球队拥有的冠军数量的条形图
- en: '](img/C13322_02_34.jpg)'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_34.jpg)'
- en: 'Figure 2.34: The bar plot of the number of titles held by an NBA team'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.34：NBA球队拥有的冠军数量的条形图
- en: Note
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: When we print the plot to the console using `plt.show()`, it appears as intended;
    however, when we open the file we created titled '`Titles_by_Team.png`', we see
    that it crops the x tick labels.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当我们使用`plt.show()`将图表打印到控制台时，它会按预期显示；然而，当我们打开我们创建的名为'`Titles_by_Team.png`'的文件时，我们会看到它裁剪了x轴刻度标签。
- en: The following figure displays the bar plot with the cropped x tick labels.
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下图显示了裁剪了x轴刻度标签的条形图。
- en: '![Figure 2.35: ''Titles_by_Team.png'' with x tick labels cropped'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图2.35：裁剪了x轴刻度标签的''Titles_by_Team.png'''
- en: '](img/C13322_02_35.jpg)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_35.jpg)'
- en: 'Figure 2.35: ''Titles_by_Team.png'' with x tick labels cropped'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.35：裁剪了x轴刻度标签的'Titles_by_Team.png'
- en: 'To fix the cropping issue, add `bbox_inches=''tight''` as an argument inside
    of `plt.savefig()` as follows:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了修复裁剪问题，在`plt.savefig()`中添加`bbox_inches='tight'`作为参数，如下所示：
- en: '[PRE34]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Now, when we open the saved '`Titles_by_Team.png`' file from our working directory,
    we see that the x tick labels are not cropped.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当我们从工作目录中打开保存的'`Titles_by_Team.png`'文件时，我们看到x轴刻度标签没有被裁剪。
- en: 'Check out the following output for the final result:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看以下输出，查看最终结果：
- en: '![Figure 2.36: ''Titles_by_Team.png'' without cropped x tick labels'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.36：未裁剪x轴刻度标签的''Titles_by_Team.png'''
- en: '](img/C13322_02_36.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_02_36.jpg)'
- en: 'Figure 2.36: ''Titles_by_Team.png'' without cropped x tick labels'
  id: totrans-151
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图2.36：未裁剪x轴刻度标签的'Titles_by_Team.png'
- en: 'Activity 4: Multiple Plot Types Using Subplots'
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动4：使用子图展示多种图表类型
- en: '**Solution**:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Import the ''`Items_Sold_by_Week.csv`'' file and save it as the `Items_by_Week`
    data frame object using the following code:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入'`Items_Sold_by_Week.csv`'文件，并使用以下代码将其保存为`Items_by_Week`数据框对象：
- en: '[PRE35]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Import the ''`Weight_by_Height.csv`'' file and save it as the `Weight_by_Height`
    data frame object as follows:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`Weight_by_Height.csv`文件并将其保存为`Weight_by_Height`数据框对象，如下所示：
- en: '[PRE36]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Generate an array of 100 normally distributed numbers to use as data for the
    histogram and box-and-whisker plots and save it as y using the following code:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码生成一个包含100个正态分布数字的数组，作为直方图和箱形图的数据，并将其保存为y：
- en: '[PRE37]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'To generate a figure with six subplots organized in three rows and two columns
    that do not overlap refer to the following code:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了生成一个包含六个子图、按三行两列排列且不重叠的图形，请参考以下代码：
- en: '[PRE38]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Set the respective axes'' titles to match those in Figure 2.32 using the following
    code:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将相应的坐标轴标题设置为与图 2.32 中相同：
- en: '[PRE39]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![Figure 2.37: Titled, non-overlapping empty subplots'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.37：标题、无重叠的空子图'
- en: '](img/C13322_02_37.jpg)'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_37.jpg)'
- en: 'Figure 2.37: Titled, non-overlapping empty subplots'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.37：标题、无重叠的空子图
- en: 'On the ''`Line`'', ''`Bar`'', and ''`Horizontal Bar`'' axes, plot ''`Items_Sold`''
    by ''`Week`'' from ''`Items_by_Week`'' using:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Line`、`Bar`和`Horizontal Bar`坐标轴上，使用以下代码绘制`Items_Sold`与`Week`的关系：
- en: '[PRE40]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'See the resultant output in the following figure:'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请在以下图中查看结果输出：
- en: '![Figure 2.38: Line, bar, and horizontal bar plots added'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.38：添加的折线图、条形图和水平条形图'
- en: '](img/C13322_02_38.jpg)'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_38.jpg)'
- en: 'Figure 2.38: Line, bar, and horizontal bar plots added'
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.38：添加的折线图、条形图和水平条形图
- en: 'On the ''`Histogram`'' and ''`Box-and-Whisker`'' axes, plot the array of 100
    normally distributed numbers using the following code:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Histogram`和`Box-and-Whisker`坐标轴上，使用以下代码绘制包含100个正态分布数字的数组：
- en: '[PRE41]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The resultant output is displayed here:'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 结果输出如下所示：
- en: '![Figure 2.39: The histogram and box-and-whisker added'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.39：添加的直方图和箱形图'
- en: '](img/C13322_02_39.jpg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_39.jpg)'
- en: 'Figure 2.39: The histogram and box-and-whisker added'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.39：添加的直方图和箱形图
- en: 'Plot ''`Weight`'' by ''`Height`'' on the ''`Scatterplot`'' axes from the ''`Weight_by_Height`''
    data frame using the following code:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码在`Weight_by_Height`数据框的`Scatterplot`坐标轴上绘制`Weight`与`Height`的关系：
- en: '[PRE42]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'See the figure here for the resultant output:'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参阅这里的图示，以查看结果输出：
- en: '![Figure 2.40: Scatterplot added'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.40：添加的散点图'
- en: '](img/C13322_02_40.jpg)'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_40.jpg)'
- en: 'Figure 2.40: Scatterplot added'
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.40：添加的散点图
- en: Label the x- and y-axis for each subplot using `axes[row, column].set_xlabel('X-Axis
    Label')` and `axes[row, column].set_ylabel('Y-Axis Label')`, respectively.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`axes[row, column].set_xlabel('X-Axis Label')`和`axes[row, column].set_ylabel('Y-Axis
    Label')`分别标注每个子图的x轴和y轴。
- en: 'See the figure here for the resultant output:'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参阅这里的图示，以查看结果输出：
- en: '![Figure 2.41: X and y axes have been labeled'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.41：X 和 Y 轴已被标注'
- en: '](img/C13322_02_41.jpg)'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_02_41.jpg)'
- en: 'Figure 2.41: X and y axes have been labeled'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.41：X 和 Y 轴已被标注
- en: 'Increase the size of the figure with the `figsize` argument in the subplots
    function as follows:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`figsize`参数在子图函数中增加图形的大小，如下所示：
- en: '[PRE43]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Save the figure to the current working directory as ''`Six_Subplots`'' using
    the following code:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将图形保存为当前工作目录中的`Six_Subplots`：
- en: '[PRE44]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The following figure displays the ''`Six_Subplots.png`'' file:'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下图显示了`Six_Subplots.png`文件：
- en: '![Figure 2.42: The Six_Subplots.png file'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.42：Six_Subplots.png 文件'
- en: '](img/C13322_02_42.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_02_42.jpg)'
- en: 'Figure 2.42: The Six_Subplots.png file'
  id: totrans-197
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2.42：Six_Subplots.png 文件
- en: 'Chapter 3: Introduction to Machine Learning via Scikit-Learn'
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第三章：通过 Scikit-Learn 介绍机器学习
- en: 'Activity 5: Generating Predictions and Evaluating the Performance of a Multiple
    Linear Regression Model'
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 5：生成预测并评估多元线性回归模型的性能
- en: '**Solution**:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Generate predictions on the test data using the following:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码在测试数据上生成预测：
- en: '[PRE45]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Refer to the resultant output here:'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参阅这里的结果输出：
- en: '![Figure 3.33: A scatterplot of predicted versus actual values from a multiple
    linear regression model'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.33：来自多元线性回归模型的预测值与实际值的散点图'
- en: '](img/C13322_03_33.jpg)'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_03_33.jpg)'
- en: 'Figure 3.33: A scatterplot of predicted versus actual values from a multiple
    linear regression model'
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.33：来自多元线性回归模型的预测值与实际值的散点图
- en: Note
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: There is a much stronger linear correlation between the predicted and actual
    values in the multiple linear regression model (r = 0.93) relative to the simple
    linear regression model (r = 0.62).
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在多元线性回归模型中，预测值与实际值之间的线性相关性（r = 0.93）比简单线性回归模型（r = 0.62）强得多。
- en: 'To plot the distribution of the residuals, refer to the code here:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了绘制残差的分布，请参考这里的代码：
- en: '[PRE46]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Refer to the resultant output here:'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参阅这里的结果输出：
- en: '![Figure 3.34: The distribution of the residuals from a multiple linear regression
    model'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.34：多元线性回归模型的残差分布'
- en: '](img/C13322_03_34.jpg)'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_03_34.jpg)'
- en: 'Figure 3.34: The distribution of the residuals from a multiple linear regression
    model'
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.34：多元线性回归模型的残差分布
- en: Note
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Our residuals are negatively skewed and non-normal, but this is less skewed
    than in the simple linear model.
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们的残差呈负偏态且非正态分布，但相比简单线性模型，这种偏态较小。
- en: 'Calculate the metrics for mean absolute error, mean squared error, root mean
    squared error, and R-squared, and put them into a DataFrame as follows:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算平均绝对误差、均方误差、均方根误差和R方，并将它们放入 DataFrame，如下所示：
- en: '[PRE47]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Please refer to the resultant output:'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请参考结果输出：
- en: '![Figure 3.35: Model evaluation metrics from a multiple linear regression model'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.35：多元线性回归模型的模型评估指标'
- en: '](img/C13322_03_35.jpg)'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_03_35.jpg)'
- en: 'Figure 3.35: Model evaluation metrics from a multiple linear regression model'
  id: totrans-222
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.35：多元线性回归模型的模型评估指标
- en: The multiple linear regression model performed better on every metric relative
    to the simple linear regression model.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 与简单线性回归模型相比，多元线性回归模型在每个指标上表现更好。
- en: 'Activity 6: Generating Predictions and Evaluating Performance of a Tuned Logistic
    Regression Model'
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 6：生成预测并评估调整后的逻辑回归模型性能
- en: '**Solution**:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Generate the predicted probabilities of rain using the following code:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码生成降雨的预测概率：
- en: '[PRE48]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Generate the predicted class of rain using `predicted_class = model.predict(X_test)`.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `predicted_class = model.predict(X_test)` 生成降雨的预测类别。
- en: 'Evaluate performance using a confusion matrix and save it as a DataFrame using
    the following code:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用混淆矩阵评估性能，并使用以下代码将其保存为 DataFrame：
- en: '[PRE49]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '![Figure 3.36: The confusion matrix from our logistic regression grid search
    model'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.36：我们逻辑回归网格搜索模型的混淆矩阵'
- en: '](img/C13322_03_36.jpg)'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_03_36.jpg)'
- en: 'Figure 3.36: The confusion matrix from our logistic regression grid search
    model'
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.36：我们逻辑回归网格搜索模型的混淆矩阵
- en: Note
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Nice! We have decreased our number of false positives from 6 to 2\. Additionally,
    our false negatives were lowered from 10 to 4 (see in *Exercise 26*). Be aware
    that results may vary slightly.
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 很棒！我们将假阳性的数量从 6 降低到 2。此外，假阴性从 10 降低到了 4（请参见 *练习 26*）。请注意，结果可能会略有不同。
- en: 'For further evaluation, print a classification report as follows:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了进一步评估，打印分类报告，如下所示：
- en: '[PRE50]'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '![Figure 3.37: The classification report from our logistic regression grid
    search model'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.37：我们逻辑回归网格搜索模型的分类报告'
- en: '](img/C13322_03_37.jpg)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_03_37.jpg)'
- en: 'Figure 3.37: The classification report from our logistic regression grid search
    model'
  id: totrans-240
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.37：我们逻辑回归网格搜索模型的分类报告
- en: By tuning the hyperparameters of the logistic regression model, we were able
    to improve upon a logistic regression model that was already performing very well.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 通过调整逻辑回归模型的超参数，我们能够在已经表现良好的逻辑回归模型基础上进一步优化。
- en: 'Activity 7: Generating Predictions and Evaluating the Performance of the SVC
    Grid Search Model'
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 7：生成预测并评估SVC网格搜索模型的性能
- en: '**Solution**:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Extract predicted classes of rain using the following code:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码提取降雨的预测类别：
- en: '[PRE51]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Create and print a confusion matrix using the code here:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码创建并打印混淆矩阵：
- en: '[PRE52]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'See the resultant output here:'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请查看结果输出：
- en: '![Figure 3.38: The confusion matrix from our SVC grid search model'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 3.38：我们SVC网格搜索模型的混淆矩阵'
- en: '](img/C13322_03_38.jpg)'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_03_38.jpg)'
- en: 'Figure 3.38: The confusion matrix from our SVC grid search model'
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.38：我们SVC网格搜索模型的混淆矩阵
- en: 'Generate and print a classification report as follows:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成并打印分类报告，如下所示：
- en: '[PRE53]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'See the resultant output here:'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请查看结果输出：
- en: '![Figure 3.39: The classification report from our SVC grid search model'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.39：我们SVC网格搜索模型的分类报告'
- en: '](img/C13322_03_39.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_03_39.jpg)'
- en: 'Figure 3.39: The classification report from our SVC grid search model'
  id: totrans-257
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3.39：我们SVC网格搜索模型的分类报告
- en: Here, we demonstrated how to tune the hyperparameters of an SVC model using
    grid search.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们展示了如何使用网格搜索调整SVC模型的超参数。
- en: 'Activity 8: Preparing Data for a Decision Tree Classifier'
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动 8：为决策树分类器准备数据
- en: '**Solution**:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Import `weather.csv` and store it as a DataFrame using the following:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入 `weather.csv` 并使用以下代码将其存储为 DataFrame：
- en: '[PRE54]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Dummy code the `Description` column as follows:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `Description` 列进行虚拟编码，如下所示：
- en: '[PRE55]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Shuffle `df_dummies` using the following code:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码打乱 `df_dummies`：
- en: '[PRE56]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Split `df_shuffled` into X and y as follows:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Split `X` and `y` into testing and training data:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Scale `X_train` and `X_test` using the following code:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Activity 9: Generating Predictions and Evaluating the Performance of a Decision
    Tree Classifier Model'
  id: totrans-273
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
- en: 'Generate the predicted probabilities of rain using the following:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Generate the predicted classes of rain using the following:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Generate and print a confusion matrix with the code here:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Refer to the resultant output here:'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.40: The confusion matrix from our tuned decision tree classifier
    model'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_03_40.jpg)'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.40: The confusion matrix from our tuned decision tree classifier model'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Print a classification report as follows:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Refer to the resultant output here:'
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.41: The classification report from our tuned decision tree classifier
    model'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_03_41.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.41: The classification report from our tuned decision tree classifier
    model'
  id: totrans-290
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: There was only one misclassified observation. Thus, by tuning a decision tree
    classifier model on our `weather.csv` dataset, we were able to predict rain (or
    snow) with great accuracy. We can see that the sole driving feature was temperature
    in Celsius. This makes sense due to the way in which decision trees use recursive
    partitioning to make predictions.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: 'Activity 10: Tuning a Random Forest Regressor'
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: 'Specify the hyperparameter space as follows:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Instantiate the `GridSearchCV` model, optimizing the explained variance using
    the following code:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Fit the grid search model to the training set using the following (note that
    this may take a while):'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'See the output here:'
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.42: The output from our tuned random forest regressor grid search
    model'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_03_42.jpg)'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.42: The output from our tuned random forest regressor grid search
    model'
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Print the tuned parameters as follows:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'See the resultant output below:'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.43: The tuned hyperparameters from our random forest regressor grid
    search model'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_03_43.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.43: The tuned hyperparameters from our random forest regressor grid
    search model'
  id: totrans-309
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Activity 11: Generating Predictions and Evaluating the Performance of a Tuned
    Random Forest Regressor Model'
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: 'Generate predictions on the test data using the following:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Plot the correlation of predicted and actual values using the following code:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Refer to the resultant output here:'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.44: A scatterplot of predicted and actual values from our random
    forest regression model with tuned hyperparameters'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_03_44.jpg)'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.44: A scatterplot of predicted and actual values from our random forest
    regression model with tuned hyperparameters'
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Plot the distribution of residuals as follows:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE70]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Refer to the resultant output here:'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.45: A histogram of residuals from a random forest regression model
    with'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: tuned hyperparameters
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_03_45.jpg)'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 3.45: A histogram of residuals from a random forest regression model
    with tuned hyperparameters'
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Compute metrics, place them in a DataFrame, and print it using the code here:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码计算指标，将其放入DataFrame中，并打印：
- en: '[PRE71]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Find the resultant output here:'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此查看结果输出：
- en: '![Figure 3.46: Model evaluation metrics from our random forest regression model
    with tuned hyperparameters'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.46：调优超参数后的随机森林回归模型的模型评估指标'
- en: '](img/C13322_03_46.jpg)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_03_46.jpg)'
- en: 'Figure 3.46: Model evaluation metrics from our random forest regression model
    with tuned hyperparameters'
  id: totrans-332
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3.46：调优超参数后的随机森林回归模型的模型评估指标
- en: The random forest regressor model seems to underperform compared to the multiple
    linear regression, as evidenced by greater MAE, MSE, and RMSE values, as well
    as less explained variance. Additionally, there was a weaker correlation between
    the predicted and actual values, and the residuals were further from being normally
    distributed. Nevertheless, by leveraging ensemble methods using a random forest
    regressor, we constructed a model that explains 75.8% of the variance in temperature
    and predicts temperature in Celsius + 3.781 degrees.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 与多元线性回归相比，随机森林回归模型似乎表现不佳，表现为较大的MAE、MSE和RMSE值，以及较低的解释方差。此外，预测值与实际值之间的相关性较弱，残差也远离正态分布。然而，通过利用集成方法使用随机森林回归器，我们构建了一个能够解释75.8%温度方差并预测温度（摄氏度+3.781度）的模型。
- en: 'Chapter 4: Dimensionality Reduction and Unsupervised Learning'
  id: totrans-334
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第4章：降维与无监督学习
- en: 'Activity 12: Ensemble k-means Clustering and Calculating Predictions'
  id: totrans-335
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动12：集成k-means聚类与预测计算
- en: '**Solution**:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'After the glass dataset has been imported, shuffled, and standardized (see
    Exercise 58):'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在玻璃数据集被导入、打乱并标准化之后（参见练习58）：
- en: 'Instantiate an empty data frame to append each model and save it as the new
    data frame object `labels_df` with the following code:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化一个空的数据框，附加每个模型，并使用以下代码将其保存为新的数据框对象`labels_df`：
- en: '[PRE72]'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Import the `KMeans` function outside of the loop using the following:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码在循环外导入`KMeans`函数：
- en: '[PRE73]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Complete 100 iterations as follows:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成100次迭代，如下所示：
- en: '[PRE74]'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Save a KMeans model object with two clusters (arbitrarily decided upon, a priori)
    using:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码保存一个具有两个簇（事先任意决定）的KMeans模型对象：
- en: '[PRE75]'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Fit the model to `scaled_features` using the following:'
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码拟合模型至`scaled_features`：
- en: '[PRE76]'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Generate the labels array and save it as the labels object, as follows:'
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成标签数组，并将其保存为标签对象，如下所示：
- en: '[PRE77]'
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Store labels as a column in `labels_df` named after the iteration using the
    code:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将标签存储为`labels_df`中的一列，列名为迭代名称：
- en: '[PRE78]'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'After labels have been generated for each of the 100 models (see Activity 21),
    calculate the mode for each row using the following code:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在为每个100个模型生成标签后（参见活动21），使用以下代码计算每一行的众数：
- en: '[PRE79]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Assign `row_mode` to a new column in `labels_df`, as shown in the following
    code:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`row_mode`分配给`labels_df`中的新列，如下代码所示：
- en: '[PRE80]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: View the first five rows of labels_df
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看`labels_df`的前五行
- en: '[PRE81]'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '![Figure 4.24: First five rows of labels_df'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.24：labels_df的前五行'
- en: '](img/C13322_04_24.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_04_24.jpg)'
- en: 'Figure 4.24: First five rows of labels_df'
  id: totrans-360
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4.24：labels_df的前五行
- en: We have drastically increased the confidence in our predictions by iterating
    through numerous models, saving the predictions at each iteration, and assigning
    the final predictions as the mode of these predictions. However, these predictions
    were generated by models using a predetermined number of clusters. Unless we know
    the number of clusters a priori, we will want to discover the optimal number of
    clusters to segment our observations.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过迭代多个模型，保存每次迭代的预测结果，并将最终的预测结果设为这些预测结果的众数，从而大幅提高了对预测的信心。然而，这些预测是由使用预定簇数的模型生成的。除非我们事先知道簇的数量，否则我们需要发现最优的簇数来对观察结果进行分割。
- en: 'Activity 13: Evaluating Mean Inertia by Cluster after PCA Transformation'
  id: totrans-362
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 活动13：PCA变换后按簇评估平均惯性
- en: '**Solution**:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: 'Instantiate a PCA model with the value for the `n_components` argument equal
    to `best_n_components` (that is, remember, `best_n_components = 6`) as follows:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化一个PCA模型，将`n_components`参数的值设置为`best_n_components`（即，记住，`best_n_components
    = 6`），如下所示：
- en: '[PRE82]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Fit the model to `scaled_features` and transform them into the six components,
    as shown here:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型拟合到`scaled_features`并将其转化为六个组件，如下所示：
- en: '[PRE83]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Import `numpy` and the `KMeans` function outside the loop using the following
    code:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将`numpy`和`KMeans`函数导入循环外：
- en: '[PRE84]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Instantiate an empty list, `inertia_list`, for which we will append inertia
    values after each iteration using the following code:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例化一个空列表 `inertia_list`，我们将在每次迭代后使用以下代码将惯性值附加到该列表中：
- en: '[PRE85]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'In the inside for loop, we will iterate through 100 models as follows:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内部的for循环中，我们将遍历100个模型，如下所示：
- en: '[PRE86]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Build our `KMeans` model with `n_clusters=x` using:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码构建我们的 `KMeans` 模型，`n_clusters=x`：
- en: '[PRE87]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Note
  id: totrans-376
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: The value for x will be dictated by the outer loop which is covered in detail
    here.
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: x的值将由外部循环决定，详细内容请参见此处。
- en: 'Fit the model to `df_pca` as follows:'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下所示，将模型拟合到 `df_pca`：
- en: '[PRE88]'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'Get the inertia value and save it to the object inertia using the following
    code:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取惯性值并使用以下代码将其保存到对象惯性中：
- en: '[PRE89]'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Append inertia to `inertia_list` using the following code:'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将惯性附加到 `inertia_list`：
- en: '[PRE90]'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Moving to the outside loop, instantiate another empty list to store the average
    inertia values using the following code:'
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入外部循环后，使用以下代码实例化另一个空列表，以存储平均惯性值：
- en: '[PRE91]'
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Since we want to check the average inertia over 100 models for `n_clusters`
    1 through 10, we will instantiate the outer loop as follows:'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们想要检查在 `n_clusters` 从1到10的100个模型中的平均惯性，我们将如下实例化外部循环：
- en: '[PRE92]'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'After the inside loop has run through its 100 iterations, and the inertia value
    for each of the 100 models have been appended to `inertia_list`, compute the mean
    of this list, and save the object as `mean_inertia` using the following code:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在内部循环完成100次迭代后，将每个模型的惯性值附加到 `inertia_list`，计算该列表的平均值，并使用以下代码将对象保存为 `mean_inertia`：
- en: '[PRE93]'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Append `mean_inertia` to `mean_inertia_list_PCA` using the following code:'
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将 `mean_inertia` 附加到 `mean_inertia_list_PCA`：
- en: '[PRE94]'
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Print `mean_inertia_list_PCA` to the console using the following code:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码将 `mean_inertia_list_PCA` 打印到控制台：
- en: '[PRE95]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'Notice the output in the following screenshot:'
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意以下屏幕截图中的输出：
- en: '![Figure 4.25: mean_inertia_list_PCA'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 4.25: mean_inertia_list_PCA'
- en: '](img/C13322_04_25.jpg)'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_04_25.jpg)'
- en: 'Figure 4.25: mean_inertia_list_PCA'
  id: totrans-397
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 4.25: mean_inertia_list_PCA'
- en: 'Chapter 5: Mastering Structured Data'
  id: totrans-398
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '第5章: 精通结构化数据'
- en: 'Activity 14: Training and Predicting the Income of a Person'
  id: totrans-399
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 14: 训练和预测一个人的收入'
- en: '**Solution**:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: Import the libraries and load the income dataset using pandas. First, import
    pandas and then read the data using `read_csv`.
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入库并使用pandas加载收入数据集。首先，导入pandas，然后使用 `read_csv` 读取数据。
- en: '[PRE96]'
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: The reason we are passing the names of the columns is because the data doesn't
    contain them. We do this to make our lives easy.
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们传递列名的原因是因为数据中没有这些列名。我们这样做是为了让我们的工作更轻松。
- en: Use Label Encoder from sklearn to encode strings. First, import `Label Encoder`.
    Then, encode all string categorical columns one by one.
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用来自sklearn的Label Encoder对字符串进行编码。首先，导入 `Label Encoder`，然后逐一编码所有字符串类别列。
- en: '[PRE97]'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: Here, we encode all the categorical string data that we have. There is another
    method we can use to prevent writing the same piece of code again and again. See
    if you can find it.
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们对所有类别字符串数据进行了编码。我们还有另一种方法可以避免重复编写相同的代码。看看你能否找到它。
- en: We first separate the dependent and independent variables.
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先将因变量和自变量分开。
- en: '[PRE98]'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: Then, we divide them into training and testing sets with an 80:20 split.
  id: totrans-409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将其分为80:20的训练集和测试集。
- en: '[PRE99]'
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Next, we convert them into DMatrix, a data structure that the library supports.
  id: totrans-411
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将它们转换为DMatrix，这是该库支持的数据结构。
- en: '[PRE100]'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Then, we use the following parameters to train the model using XGBoost.
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们使用以下参数通过XGBoost训练模型。
- en: '[PRE101]'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: Check the accuracy of the model.
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查模型的准确性。
- en: '[PRE102]'
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'The output is as follows:'
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Figure 5.36: Final model accuracy'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 5.36: 最终模型的准确性'
- en: '](img/C13322_05_36.jpg)'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/C13322_05_36.jpg)'
- en: 'Figure 5.36: Final model accuracy'
  id: totrans-420
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: '图 5.36: 最终模型的准确性'
- en: 'Activity 15: Predicting the Loss of Customers'
  id: totrans-421
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '活动 15: 预测客户流失'
- en: '**Solution**:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: Load the income dataset using pandas. First, import pandas, and then read the
    data using `read_csv`.
  id: totrans-423
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用pandas加载收入数据集。首先，导入pandas，然后使用 `read_csv` 读取数据。
- en: '[PRE103]'
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: The `customerID` variable is not required because any future prediction will
    have a unique `customerID`, making this variable useless for prediction.
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`customerID` 变量不是必需的，因为任何未来的预测都会有一个唯一的 `customerID`，这使得该变量在预测中无用。'
- en: '[PRE104]'
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Convert all categorical variables to integers using scikit. One example is given
    below.
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用scikit将所有类别变量转换为整数。下面给出一个例子。
- en: '[PRE105]'
  id: totrans-428
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: Check the data types of the variables in the dataset.
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查数据集中变量的数据类型。
- en: '[PRE106]'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'The data types of the variables will be shown as follows:'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 变量的数据类型将如下所示：
- en: '![Figure 5.37: Data types of variables'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 5.37: 变量的数据类型'
- en: '](img/C13322_05_37.jpg)'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/C13322_05_37.jpg)'
- en: 'Figure 5.37: Data types of variables'
  id: totrans-434
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: As you can see, `TotalCharges` is an object. So, convert the data type of `TotalCharges`
    from object to numeric. coerce will make the missing values null.
  id: totrans-435
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE107]'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Convert the data frame to an XGBoost variable and find the best parameters for
    the dataset using the previous exercises as reference.
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE108]'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Check out the output in the following screenshot:'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.38: Graph of max depth to test error for telecom churn dataset'
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_05_38.jpg)'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.38: Graph of max depth to test error for telecom churn dataset'
  id: totrans-442
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: From the graph, it is clear that a max depth of 4 gives the least error. So,
    we will be using that to train our model.
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Create the model using the `max_depth` parameter that we chose from the previous
    steps.
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE109]'
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'The output is as follows:'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.39: Final accuracy'
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_05_39.jpg)'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.39: Final accuracy'
  id: totrans-449
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Save the model for future use using the following code:'
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE110]'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'Activity 16: Predicting a Customer''s Purchase Amount'
  id: totrans-452
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
- en: Load the `Black Friday` dataset using pandas. First, import `pandas`, and then,
    read the data using `read_csv`.
  id: totrans-454
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE111]'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: The `User_ID` variable is not required to allow predictions on new user Ids,
    so we drop it.
  id: totrans-456
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE112]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: The product category variables have high null values, so we drop them as well.
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Convert all categorical variables to integers using scikit-learn.
  id: totrans-459
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE113]'
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: Split the data into training and testing sets and convert it into the form required
    by the embedding layers.
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE114]'
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: Create the network using the embedding and dense layers in Keras and perform
    hyperparameter tuning to get the best accuracy.
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE115]'
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: Now, we create a three-layer network after the embedding layers.
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE116]'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Check the RMSE of the model on the test set.
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE117]'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'The RMSE is:'
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 5.40: RMSE model'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_05_40.jpg)'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 5.40: RMSE model'
  id: totrans-472
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: Visualize the product ID embedding.
  id: totrans-473
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE118]'
  id: totrans-474
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'The plot is as follows:'
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](img/C13322_05_41.jpg)'
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 5.41: Plot of clustered model'
  id: totrans-477
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: From the plot, you can see that similar products have been clustered together
    by the model.
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Save the model for future use.
  id: totrans-479
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE119]'
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'Chapter 6: Decoding Images'
  id: totrans-481
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Activity 17: Predict if an Image Is of a Cat or a Dog'
  id: totrans-482
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: 'If you look at the name of the images in the dataset, you will find that the
    images of dogs start with dog followed by ''.'' and then a number, for example
    – "dog.123.jpg". Similarly, the images of cats start with cat. So, let''s create
    a function to get the label from the name of the file:'
  id: totrans-484
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE120]'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'Then, create a function to read, resize, and preprocess the images:'
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE121]'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '`SIZE` here refers to the dimension of the final square image we will input
    to the model. We resize the image to have the length and breadth equal to `SIZE`.'
  id: totrans-488
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  id: totrans-489
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: When running `os.listdir(PATH)`, you will find that all the images of cats come
    first, followed by images of dogs.
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To have the same distribution of both the classes in the training and testing
    sets, we will shuffle the data.
  id: totrans-491
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Define the size of the image and read the data. Split the loaded data into
    training and testing sets:'
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE122]'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'Transform the lists to numpy arrays and reshape the images to a format that
    Keras will accept:'
  id: totrans-494
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE123]'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Create a CNN model that makes use of regularization to perform training:'
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE124]'
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'Add the convolutional layers:'
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE125]'
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'Add the pooling layer:'
  id: totrans-500
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE126]'
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Add the batch normalization layer along with a dropout layer using the following
    code:'
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE127]'
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'Flatten the 2D matrices into 1D vectors:'
  id: totrans-504
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE128]'
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'Use dense layers as the final layers for the model:'
  id: totrans-506
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE129]'
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE129]'
- en: 'Compile the model and then train it using the training data:'
  id: totrans-508
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE130]'
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'Print the model''s accuracy on the test set:'
  id: totrans-510
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE131]'
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '![Figure 6.39: Model accuracy on the test set'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_06_39.jpg)'
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 6.39: Model accuracy on the test set'
  id: totrans-514
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Print the model''s accuracy on the training set:'
  id: totrans-515
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE132]'
  id: totrans-516
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE132]'
- en: '![Figure 6.40: Model accuracy on the train set'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_06_40.jpg)'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 6.40: Model accuracy on the train set'
  id: totrans-519
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The test set accuracy for this model is 70.4%. The training set accuracy is
    really high, at 96%. This means that the model has started to overfit. Improving
    the model to get the best possible accuracy is left for you as an exercise. You
    can plot the incorrectly predicted images using the code from previous exercises
    to get a sense of how well the model performs:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '![Figure 6.41: Incorrect prediction of a dog by the regularized CNN model'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_06_41.jpg)'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 6.41: Incorrect prediction of a dog by the regularized CNN model'
  id: totrans-524
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Activity 18: Identifying and Augmenting an Image'
  id: totrans-525
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
- en: 'Create functions to get the images and the labels of the dataset:'
  id: totrans-527
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE134]'
  id: totrans-528
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE134]'
- en: 'Create functions to preprocess and augment images:'
  id: totrans-529
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE135]'
  id: totrans-530
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Implement the augmentation functions to randomly execute the augmentation when
    passed an image and return the image with the result.
  id: totrans-531
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This is for horizontal flip:'
  id: totrans-532
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE136]'
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'This is for rotation:'
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE137]'
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'This is for image shift:'
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE138]'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'Finally, create the generator that will generate images batches to be used
    to train the model:'
  id: totrans-538
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE139]'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'Create functions to load the test dataset''s images and labels:'
  id: totrans-540
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE140]'
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'This `get_data` function is similar to the one we used in *Activity 1*. The
    modification here is that we get the list of images to be read as an input parameter,
    and we return a tuple of images and their labels:'
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE141]'
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'Now, create the test train split and load the test dataset:'
  id: totrans-544
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE142]'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'Create the model and perform training:'
  id: totrans-546
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE143]'
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Add the convolutional layers
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE144]'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'Add the pooling layer:'
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE145]'
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'Add the batch normalization layer along with a dropout layer:'
  id: totrans-552
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE146]'
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'Flatten the 2D matrices into 1D vectors:'
  id: totrans-554
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE147]'
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'Use dense layers as the final layers for the model:'
  id: totrans-556
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE148]'
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'Compile the model and train it using the generator that you created:'
  id: totrans-558
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE149]'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE149]'
- en: The test set accuracy for this model is 72.6%, which is an improvement on the
    model in *Activity 21*. You will observe that the training accuracy is really
    high, at 98%. This means that this model has started to overfit, much like the
    one in *Activity 21*. This could be due to a lack of data augmentation. Try changing
    the data augmentation parameters to see if there is any change in accuracy. Alternatively,
    you can modify the architecture of the neural network to get better results. You
    can plot the incorrectly predicted images to get a sense of how well the model
    performs.
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '![Figure 6.42: Incorrect prediction of a cat by the data augmentation CNN model'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_06_42.jpg)'
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 6.42: Incorrect prediction of a cat by the data augmentation CNN model'
  id: totrans-564
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Chapter 7: Processing Human Language'
  id: totrans-565
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Activity 19: Predicting Sentiments of Movie Reviews'
  id: totrans-566
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
- en: 'Read the IMDB movie review dataset using pandas in Python:'
  id: totrans-568
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE151]'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'Convert the tweets to lowercase to reduce the number of unique words:'
  id: totrans-570
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE152]'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE152]'
- en: Note
  id: totrans-572
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: Keep in mind that "`Hello`" and "`hellow`" are not the same to a computer.
  id: totrans-573
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Clean the reviews using RegEx with the `clean_str` function:'
  id: totrans-574
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE153]'
  id: totrans-575
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE153]'
- en: 'Next, remove stop words and other frequently occurring unnecessary words from
    the reviews:'
  id: totrans-576
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  id: totrans-577
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: To see how we found these, words refer to *Exercise 51*.
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This step converts strings into tokens (which will be helpful in the next step):'
  id: totrans-579
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE154]'
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'Create the word embedding of the reviews with the tokens created in the previous
    step. Here, we will use genism Word2Vec to create these embedding vectors:'
  id: totrans-581
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE155]'
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'Combine the tokens to get a string and then drop any review that does not have
    anything in it after stop word removal:'
  id: totrans-583
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE156]'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE156]'
- en: 'Tokenize the reviews using the Keras Tokenizer and convert them into numbers:'
  id: totrans-585
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE157]'
  id: totrans-586
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Finally, pad the tweets to have a maximum of 100 words. This will remove any
    words after the 100-word limit and add 0s if the number of words is less than
    100:'
  id: totrans-587
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE158]'
  id: totrans-588
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'Load the created embedding to get the embedding matrix using the `load_embedding`
    function discussed in the *Text Processing* section:'
  id: totrans-589
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE159]'
  id: totrans-590
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'Convert the label into one-hot vector using pandas'' `get_dummies` function
    and split the dataset into testing and training sets with an 80:20 split:'
  id: totrans-591
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE160]'
  id: totrans-592
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Create the neural network model starting with the input and embedding layers.
    This layer converts the input words into their embedding vectors:'
  id: totrans-593
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE161]'
  id: totrans-594
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'Create the rest of the fully connected neural network using Keras:'
  id: totrans-595
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE162]'
  id: totrans-596
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'Compile and train the model for 10 epochs. You can modify the model and the
    hyperparameters to try and get a better accuracy:'
  id: totrans-597
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE163]'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'Calculate the accuracy of the model on the test set to see how well our model
    performs on previously unseen data by using the following:'
  id: totrans-599
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE164]'
  id: totrans-600
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'The accuracy of the model is:'
  id: totrans-601
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 7.39: Model accuracy'
  id: totrans-602
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_07_39.jpg)'
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 7.39: Model accuracy'
  id: totrans-604
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Plot the confusion matrix of the model to get a proper sense of the model''s
    prediction:'
  id: totrans-605
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE165]'
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE165]'
- en: Check the following
  id: totrans-607
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 7.40: Confusion matrix of the model (0 = negative sentiment, 1 = positive
    sentiment)'
  id: totrans-608
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_07_40.jpg)'
  id: totrans-609
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 7.40: Confusion matrix of the model (0 = negative sentiment, 1 = positive
    sentiment)'
  id: totrans-610
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Check the performance of the model by seeing the sentiment predictions on random
    reviews using the following code:'
  id: totrans-611
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE166]'
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 'Check that you receive the following output:'
  id: totrans-613
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 7.41: A review from the IMDB dataset'
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_07_41.jpg)'
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.41: A review from the IMDB dataset'
  id: totrans-616
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Activity 20: Predicting Sentiments from Tweets'
  id: totrans-617
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-618
  prefs: []
  type: TYPE_NORMAL
- en: 'Read the tweet dataset using pandas and rename the columns with those given
    in the following code:'
  id: totrans-619
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE167]'
  id: totrans-620
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'Drop the following columns as we won''t be using them. You can analyze and
    use them if you want when trying to improve the accuracy:'
  id: totrans-621
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE168]'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'We perform this activity only on a subset (400,000 tweets) of the data to save
    time. If you want, you can work on the whole dataset:'
  id: totrans-623
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE169]'
  id: totrans-624
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'Convert the tweets to lowercase to reduce the number of unique words. Keep
    in mind that "`Hello`" and "`hellow`" are not the same to a computer:'
  id: totrans-625
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE170]'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE170]'
- en: 'Clean the tweets using the `clean_str` function:'
  id: totrans-627
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE171]'
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE171]'
- en: 'Remove all the stop words from the tweets, as was done in the `Text Preprocessing`
    section:'
  id: totrans-629
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE172]'
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'Tokenize the tweets and convert them to numbers using the Keras Tokenizer:'
  id: totrans-631
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE173]'
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE173]'
- en: 'Finally, pad the tweets to have a maximum of 50 words. This will remove any
    words after the 50-word limit and add 0s if the number of words is less than 50:'
  id: totrans-633
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE174]'
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE174]'
- en: 'Create the embedding matrix from the GloVe embedding file that we downloaded
    using the `load_embedding` function:'
  id: totrans-635
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE175]'
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE175]'
- en: 'Split the dataset into training and testing sets with an 80:20 spilt. You can
    experiment with different splits:'
  id: totrans-637
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE176]'
  id: totrans-638
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'Create the LSTM model that will predict the sentiment. You can modify this
    to create your own neural network:'
  id: totrans-639
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE177]'
  id: totrans-640
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'Train the model. Here, we train it only for 10 epochs. You can increase the
    number of epochs to try and get a better accuracy:'
  id: totrans-641
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE178]'
  id: totrans-642
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'Check how well the model is performing by predicting the sentiment of a few
    tweets in the test set:'
  id: totrans-643
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE179]'
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE179]'
- en: 'The output is as follows:'
  id: totrans-645
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 7.42: Positive (left) and negative (right) tweets and their predictions'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_07_42.jpg)'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.42: Positive (left) and negative (right) tweets and their predictions'
  id: totrans-648
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Chapter 8: Tips and Tricks of the Trade'
  id: totrans-649
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Activity 21: Classifying Images using InceptionV3'
  id: totrans-650
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
- en: Create functions to get images and labels. Here `PATH` variable contains the
    path to the training dataset.
  id: totrans-652
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE180]'
  id: totrans-653
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE180]'
- en: Set `SIZE` and `CHANNELS. SIZE` is the dimension of the square image input.
    `CHANNELS` is the number of channels in the training data images. There are 3
    channels in a RGB image.
  id: totrans-654
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE181]'
  id: totrans-655
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE181]'
- en: 'Create a function to preprocess and augment images:'
  id: totrans-656
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE182]'
  id: totrans-657
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE182]'
- en: 'Finally, develop the generator that will generate the batches:'
  id: totrans-658
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE183]'
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE183]'
- en: 'Next, we will read the validation data. Create a function to read the images
    and their labels:'
  id: totrans-660
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE184]'
  id: totrans-661
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE184]'
- en: 'Read the validation files:'
  id: totrans-662
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE185]'
  id: totrans-663
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE185]'
- en: 'A random sample of the images is shown here:'
  id: totrans-664
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.16: Sample images from the loaded dataset'
  id: totrans-665
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_08_16.jpg)'
  id: totrans-666
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 8.16: Sample images from the loaded dataset'
  id: totrans-667
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Load the Inception model and pass the shape of the input images:'
  id: totrans-668
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE186]'
  id: totrans-669
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE186]'
- en: 'Add the output dense layer according to our problem:'
  id: totrans-670
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE187]'
  id: totrans-671
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE187]'
- en: 'Next, compile the model to make it ready for training:'
  id: totrans-672
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE188]'
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE188]'
- en: 'Evaluate the model and get the accuracy:'
  id: totrans-674
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE189]'
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE189]'
- en: 'The accuracy is as follows:'
  id: totrans-676
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.17: Model accuracy'
  id: totrans-677
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_08_17.jpg)'
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 8.17: Model accuracy'
  id: totrans-679
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Activity 22: Using Transfer Learning to Predict Images'
  id: totrans-680
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Solution**:'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
- en: 'First, set the random number seed so that the results are reproducible:'
  id: totrans-682
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE190]'
  id: totrans-683
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE190]'
- en: Set `SIZE` and `CHANNELS`
  id: totrans-684
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`SIZE` is the dimension of the square image input. `CHANNELS` is the number
    of channels in the training data images. There are 3 channels in a RGB image.'
  id: totrans-685
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE191]'
  id: totrans-686
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE191]'
- en: Create functions to get images and labels. Here `PATH` variable contains the
    path to the training dataset.
  id: totrans-687
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE192]'
  id: totrans-688
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE192]'
- en: 'Create a function to preprocess and augment images:'
  id: totrans-689
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE193]'
  id: totrans-690
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE193]'
- en: 'Finally, create the generator that will generate the batches:'
  id: totrans-691
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE194]'
  id: totrans-692
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE194]'
- en: 'Next, we will read the development and test data. Create a function to read
    the images and their labels:'
  id: totrans-693
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE195]'
  id: totrans-694
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE195]'
- en: Now read the development and test files. The split for the train/dev/test set
    is `70%/15%/15%`.
  id: totrans-695
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE196]'
  id: totrans-696
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE196]'
- en: 'Plot a few images from the dataset to see whether you loaded the files correctly:'
  id: totrans-697
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE197]'
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE197]'
- en: 'Check the output in the following screenshot:'
  id: totrans-699
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.18: Sample images from the loaded dataset'
  id: totrans-700
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_08_18.jpg)'
  id: totrans-701
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 8.18: Sample images from the loaded dataset'
  id: totrans-702
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Load the Inception model and pass the shape of the input images:'
  id: totrans-703
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE198]'
  id: totrans-704
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE198]'
- en: 'This time around, we will freeze the first five layers of the model to help
    with the training time:'
  id: totrans-705
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE199]'
  id: totrans-706
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE199]'
- en: 'Compile the model to make it ready for training:'
  id: totrans-707
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE200]'
  id: totrans-708
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE200]'
- en: 'Create callbacks for Keras:'
  id: totrans-709
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE201]'
  id: totrans-710
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE201]'
- en: Note
  id: totrans-711
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE202]'
  id: totrans-712
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE202]'
- en: 'The training logs on TensorBoard are shown here:'
  id: totrans-713
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.19: Training set logs from TensorBoard'
  id: totrans-714
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_08_19.jpg)'
  id: totrans-715
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 8.19: Training set logs from TensorBoard'
  id: totrans-716
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: You can now fine-tune the hyperparameters taking accuracy of the development
    set as the metric.
  id: totrans-717
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The logs of the development set from the TensorBoard tool are shown here:'
  id: totrans-718
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.20: Validation set logs from TensorBoard](img/C13322_08_20.jpg)'
  id: totrans-719
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Figure 8.20: Validation set logs from TensorBoard'
  id: totrans-720
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The learning rate decrease can be observed from the following plot:'
  id: totrans-721
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.21: Learning rate log from TensorBoard'
  id: totrans-722
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/C13322_08_21.jpg)'
  id: totrans-723
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 8.21: Learning rate log from TensorBoard'
  id: totrans-724
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Evaluate the model on the test set and get the accuracy:'
  id: totrans-725
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE203]'
  id: totrans-726
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE203]'
- en: 'To understand fully, refer to the following output screenshot:'
  id: totrans-727
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 8.22: The final accuracy of the model on the test set'
  id: totrans-728
  prefs: []
  type: TYPE_NORMAL
- en: '](img/C13322_08_22.jpg)'
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 8.22: The final accuracy of the model on the test set'
  id: totrans-730
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'As you can see, the model gets an accuracy of 93.6% on the test set, which
    is different from the accuracy of the development set (93.3% from the TensorBoard
    training logs). The early stopping callback stopped training when there wasn''t
    a significant improvement in the loss of the development set; this helped us save
    some time. The learning rate was reduced after nine epochs, which helped training,
    as can be seen here:'
  id: totrans-731
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.23: A snippet of the training logs of the model](img/C13322_08_23.jpg)'
  id: totrans-732
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.23: A snippet of the training logs of the model'
  id: totrans-733
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Contents
  id: totrans-734
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Preface](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-1)'
  id: totrans-735
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[About the Book](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-2)'
  id: totrans-736
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[About the Authors ](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-3)'
  id: totrans-737
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Learning Objectives](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-4)'
  id: totrans-738
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Audience](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-5)'
  id: totrans-739
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Approach](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-6)'
  id: totrans-740
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Minimum Hardware Requirements](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-7)'
  id: totrans-741
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Software Requirements](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-8)'
  id: totrans-742
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installation and Setup](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-9)'
  id: totrans-743
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Using Kaggle for Faster Experimentation](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-10)'
  id: totrans-744
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Conventions](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-11)'
  id: totrans-745
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Installing the Code Bundle](C13322_Preface_Epub_Final_SW.xhtml#_idParaDest-12)'
  id: totrans-746
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 1](C13322_01_Epub_Final_SW.xhtml#_idParaDest-13)'
  id: totrans-747
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to Data Science and Data Pre-Processing](C13322_01_Epub_Final_SW.xhtml#_idParaDest-14)'
  id: totrans-748
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_01_Epub_Final_SW.xhtml#_idParaDest-15)'
  id: totrans-749
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Python Libraries](C13322_01_Epub_Final_SW.xhtml#_idParaDest-16)'
  id: totrans-750
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Roadmap for Building Machine Learning Models](C13322_01_Epub_Final_SW.xhtml#_idParaDest-17)'
  id: totrans-751
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Representation](C13322_01_Epub_Final_SW.xhtml#_idParaDest-18)'
  id: totrans-752
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Independent and Target Variables](C13322_01_Epub_Final_SW.xhtml#_idParaDest-19)'
  id: totrans-753
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 1: Loading a Sample Dataset and Creating the Feature Matrix and Target
    Matrix](C13322_01_Epub_Final_SW.xhtml#_idParaDest-20)'
  id: totrans-754
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Cleaning](C13322_01_Epub_Final_SW.xhtml#_idParaDest-21)'
  id: totrans-755
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 2: Removing Missing Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-22)'
  id: totrans-756
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 3: Imputing Missing Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-23)'
  id: totrans-757
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 4: Finding and Removing Outliers in Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-24)'
  id: totrans-758
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Integration](C13322_01_Epub_Final_SW.xhtml#_idParaDest-25)'
  id: totrans-759
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 5: Integrating Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-26)'
  id: totrans-760
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Transformation](C13322_01_Epub_Final_SW.xhtml#_idParaDest-27)'
  id: totrans-761
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Handling Categorical Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-28)'
  id: totrans-762
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 6: Simple Replacement of Categorical Data with a Number](C13322_01_Epub_Final_SW.xhtml#_idParaDest-29)'
  id: totrans-763
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 7: Converting Categorical Data to Numerical Data Using Label Encoding](C13322_01_Epub_Final_SW.xhtml#_idParaDest-30)'
  id: totrans-764
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 8: Converting Categorical Data to Numerical Data Using One-Hot Encoding](C13322_01_Epub_Final_SW.xhtml#_idParaDest-31)'
  id: totrans-765
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data in Different Scales](C13322_01_Epub_Final_SW.xhtml#_idParaDest-32)'
  id: totrans-766
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 9: Implementing Scaling Using the Standard Scaler Method](C13322_01_Epub_Final_SW.xhtml#_idParaDest-33)'
  id: totrans-767
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 10: Implementing Scaling Using the MinMax Scaler Method](C13322_01_Epub_Final_SW.xhtml#_idParaDest-34)'
  id: totrans-768
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Discretization](C13322_01_Epub_Final_SW.xhtml#_idParaDest-35)'
  id: totrans-769
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 11: Discretization of Continuous Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-36)'
  id: totrans-770
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Train and Test Data](C13322_01_Epub_Final_SW.xhtml#_idParaDest-37)'
  id: totrans-771
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 12: Splitting Data into Train and Test Sets](C13322_01_Epub_Final_SW.xhtml#_idParaDest-38)'
  id: totrans-772
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 1: Pre-Processing Using the Bank Marketing Subscription Dataset](C13322_01_Epub_Final_SW.xhtml#_idParaDest-39)'
  id: totrans-773
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Supervised Learning](C13322_01_Epub_Final_SW.xhtml#_idParaDest-40)'
  id: totrans-774
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Unsupervised Learning](C13322_01_Epub_Final_SW.xhtml#_idParaDest-41)'
  id: totrans-775
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Reinforcement Learning](C13322_01_Epub_Final_SW.xhtml#_idParaDest-42)'
  id: totrans-776
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Performance Metrics](C13322_01_Epub_Final_SW.xhtml#_idParaDest-43)'
  id: totrans-777
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_01_Epub_Final_SW.xhtml#_idParaDest-44)'
  id: totrans-778
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 2](C13322_02_Epub_Final_SW.xhtml#_idParaDest-45)'
  id: totrans-779
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Visualization](C13322_02_Epub_Final_SW.xhtml#_idParaDest-46)'
  id: totrans-780
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_02_Epub_Final_SW.xhtml#_idParaDest-47)'
  id: totrans-781
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Functional Approach](C13322_02_Epub_Final_SW.xhtml#_idParaDest-48)'
  id: totrans-782
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 13: Functional Approach – Line Plot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-49)'
  id: totrans-783
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 14: Functional Approach – Add a Second Line to the Line Plot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-50)'
  id: totrans-784
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 2: Line Plot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-51)'
  id: totrans-785
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 15: Creating a Bar Plot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-52)'
  id: totrans-786
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 3: Bar Plot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-53)'
  id: totrans-787
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 16: Functional Approach – Histogram](C13322_02_Epub_Final_SW.xhtml#_idParaDest-54)'
  id: totrans-788
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 17: Functional Approach – Box-and-Whisker plot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-55)'
  id: totrans-789
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 18: Scatterplot](C13322_02_Epub_Final_SW.xhtml#_idParaDest-56)'
  id: totrans-790
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Object-Oriented Approach Using Subplots](C13322_02_Epub_Final_SW.xhtml#_idParaDest-57)'
  id: totrans-791
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 19: Single Line Plot using Subplots](C13322_02_Epub_Final_SW.xhtml#_idParaDest-58)'
  id: totrans-792
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 20: Multiple Line Plots Using Subplots](C13322_02_Epub_Final_SW.xhtml#_idParaDest-59)'
  id: totrans-793
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 4: Multiple Plot Types Using Subplots](C13322_02_Epub_Final_SW.xhtml#_idParaDest-60)'
  id: totrans-794
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_02_Epub_Final_SW.xhtml#_idParaDest-61)'
  id: totrans-795
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 3](C13322_03_Epub_Final_SW.xhtml#_idParaDest-62)'
  id: totrans-796
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to Machine Learning via Scikit-Learn](C13322_03_Epub_Final_SW.xhtml#_idParaDest-63)'
  id: totrans-797
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_03_Epub_Final_SW.xhtml#_idParaDest-64)'
  id: totrans-798
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction to Linear and Logistic Regression](C13322_03_Epub_Final_SW.xhtml#_idParaDest-65)'
  id: totrans-799
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Simple Linear Regression](C13322_03_Epub_Final_SW.xhtml#_idParaDest-66)'
  id: totrans-800
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 21: Preparing Data for a Linear Regression Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-67)'
  id: totrans-801
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 22: Fitting a Simple Linear Regression Model and Determining the
    Intercept and Coefficient](C13322_03_Epub_Final_SW.xhtml#_idParaDest-68)'
  id: totrans-802
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 23: Generating Predictions and Evaluating the Performance of a Simple
    Linear Regression Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-69)'
  id: totrans-803
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Multiple Linear Regression](C13322_03_Epub_Final_SW.xhtml#_idParaDest-70)'
  id: totrans-804
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 24: Fitting a Multiple Linear Regression Model and Determining the
    Intercept and Coefficients](C13322_03_Epub_Final_SW.xhtml#_idParaDest-71)'
  id: totrans-805
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 5: Generating Predictions and Evaluating the Performance of a Multiple
    Linear Regression Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-72)'
  id: totrans-806
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Logistic Regression](C13322_03_Epub_Final_SW.xhtml#_idParaDest-73)'
  id: totrans-807
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 25: Fitting a Logistic Regression Model and Determining the Intercept
    and Coefficients](C13322_03_Epub_Final_SW.xhtml#_idParaDest-74)'
  id: totrans-808
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 26: Generating Predictions and Evaluating the Performance of a Logistic
    Regression Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-75)'
  id: totrans-809
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 27: Tuning the Hyperparameters of a Multiple Logistic Regression
    Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-76)'
  id: totrans-810
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 6: Generating Predictions and Evaluating Performance of a Tuned Logistic
    Regression Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-77)'
  id: totrans-811
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Max Margin Classification Using SVMs](C13322_03_Epub_Final_SW.xhtml#_idParaDest-78)'
  id: totrans-812
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 28: Preparing Data for the Support Vector Classifier (SVC) Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-79)'
  id: totrans-813
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 29: Tuning the SVC Model Using Grid Search](C13322_03_Epub_Final_SW.xhtml#_idParaDest-80)'
  id: totrans-814
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 7: Generating Predictions and Evaluating the Performance of the SVC
    Grid Search Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-81)'
  id: totrans-815
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Decision Trees](C13322_03_Epub_Final_SW.xhtml#_idParaDest-82)'
  id: totrans-816
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 8: Preparing Data for a Decision Tree Classifier](C13322_03_Epub_Final_SW.xhtml#_idParaDest-83)'
  id: totrans-817
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 30: Tuning a Decision Tree Classifier Using Grid Search](C13322_03_Epub_Final_SW.xhtml#_idParaDest-84)'
  id: totrans-818
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 31: Programmatically Extracting Tuned Hyperparameters from a Decision
    Tree Classifier Grid Search Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-85)'
  id: totrans-819
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9: Generating Predictions and Evaluating the Performance of a Decision
    Tree Classifier Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-86)'
  id: totrans-820
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Random Forests](C13322_03_Epub_Final_SW.xhtml#_idParaDest-87)'
  id: totrans-821
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 32: Preparing Data for a Random Forest Regressor](C13322_03_Epub_Final_SW.xhtml#_idParaDest-88)'
  id: totrans-822
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 10: Tuning a Random Forest Regressor](C13322_03_Epub_Final_SW.xhtml#_idParaDest-89)'
  id: totrans-823
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 33: Programmatically Extracting Tuned Hyperparameters and Determining
    Feature Importance from a Random Forest Regressor Grid Search Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-90)'
  id: totrans-824
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 11: Generating Predictions and Evaluating the Performance of a Tuned
    Random Forest Regressor Model](C13322_03_Epub_Final_SW.xhtml#_idParaDest-91)'
  id: totrans-825
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_03_Epub_Final_SW.xhtml#_idParaDest-92)'
  id: totrans-826
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 4](C13322_04_Epub_Final_SW.xhtml#_idParaDest-93)'
  id: totrans-827
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Dimensionality Reduction and Unsupervised Learning](C13322_04_Epub_Final_SW.xhtml#_idParaDest-94)'
  id: totrans-828
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_04_Epub_Final_SW.xhtml#_idParaDest-95)'
  id: totrans-829
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Hierarchical Cluster Analysis (HCA)](C13322_04_Epub_Final_SW.xhtml#_idParaDest-96)'
  id: totrans-830
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 34: Building an HCA Model](C13322_04_Epub_Final_SW.xhtml#_idParaDest-97)'
  id: totrans-831
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 35: Plotting an HCA Model and Assigning Predictions](C13322_04_Epub_Final_SW.xhtml#_idParaDest-98)'
  id: totrans-832
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[K-means Clustering](C13322_04_Epub_Final_SW.xhtml#_idParaDest-99)'
  id: totrans-833
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 36: Fitting k-means Model and Assigning Predictions](C13322_04_Epub_Final_SW.xhtml#_idParaDest-100)'
  id: totrans-834
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 12: Ensemble k-means Clustering and Calculating Predictions](C13322_04_Epub_Final_SW.xhtml#_idParaDest-101)'
  id: totrans-835
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 37: Calculating Mean Inertia by n_clusters](C13322_04_Epub_Final_SW.xhtml#_idParaDest-102)'
  id: totrans-836
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 38: Plotting Mean Inertia by n_clusters](C13322_04_Epub_Final_SW.xhtml#_idParaDest-103)'
  id: totrans-837
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Principal Component Analysis (PCA)](C13322_04_Epub_Final_SW.xhtml#_idParaDest-104)'
  id: totrans-838
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 39: Fitting a PCA Model](C13322_04_Epub_Final_SW.xhtml#_idParaDest-105)'
  id: totrans-839
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 40: Choosing n_components using Threshold of Explained Variance](C13322_04_Epub_Final_SW.xhtml#_idParaDest-106)'
  id: totrans-840
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 13: Evaluating Mean Inertia by Cluster after PCA Transformation](C13322_04_Epub_Final_SW.xhtml#_idParaDest-107)'
  id: totrans-841
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 41: Visual Comparison of Inertia by n_clusters](C13322_04_Epub_Final_SW.xhtml#_idParaDest-108)'
  id: totrans-842
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Supervised Data Compression using Linear Discriminant Analysis (LDA)](C13322_04_Epub_Final_SW.xhtml#_idParaDest-109)'
  id: totrans-843
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 42: Fitting LDA Model](C13322_04_Epub_Final_SW.xhtml#_idParaDest-110)'
  id: totrans-844
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 43: Using LDA Transformed Components in Classification Model](C13322_04_Epub_Final_SW.xhtml#_idParaDest-111)'
  id: totrans-845
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_04_Epub_Final_SW.xhtml#_idParaDest-112)'
  id: totrans-846
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 5](C13322_05_Epub_Final_SW.xhtml#_idParaDest-113)'
  id: totrans-847
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Mastering Structured Data](C13322_05_Epub_Final_SW.xhtml#_idParaDest-114)'
  id: totrans-848
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_05_Epub_Final_SW.xhtml#_idParaDest-115)'
  id: totrans-849
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Boosting Algorithms](C13322_05_Epub_Final_SW.xhtml#_idParaDest-116)'
  id: totrans-850
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Gradient Boosting Machine (GBM)](C13322_05_Epub_Final_SW.xhtml#_idParaDest-117)'
  id: totrans-851
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[XGBoost (Extreme Gradient Boosting)](C13322_05_Epub_Final_SW.xhtml#_idParaDest-118)'
  id: totrans-852
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 44: Using the XGBoost library to Perform Classification](C13322_05_Epub_Final_SW.xhtml#_idParaDest-119)'
  id: totrans-853
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[XGBoost Library](C13322_05_Epub_Final_SW.xhtml#_idParaDest-120)'
  id: totrans-854
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Controlling Model Overfitting](C13322_05_Epub_Final_SW.xhtml#_idParaDest-121)'
  id: totrans-855
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Handling Imbalanced Datasets](C13322_05_Epub_Final_SW.xhtml#_idParaDest-122)'
  id: totrans-856
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 14: Training and Predicting the Income of a Person](C13322_05_Epub_Final_SW.xhtml#_idParaDest-123)'
  id: totrans-857
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[External Memory Usage](C13322_05_Epub_Final_SW.xhtml#_idParaDest-124)'
  id: totrans-858
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Cross-validation](C13322_05_Epub_Final_SW.xhtml#_idParaDest-125)'
  id: totrans-859
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 45: Using Cross-validation to Find the Best Hyperparameters](C13322_05_Epub_Final_SW.xhtml#_idParaDest-126)'
  id: totrans-860
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Saving and Loading a Model](C13322_05_Epub_Final_SW.xhtml#_idParaDest-127)'
  id: totrans-861
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 46: Creating a Python Pcript that Predicts Based on Real-time Input](C13322_05_Epub_Final_SW.xhtml#_idParaDest-128)'
  id: totrans-862
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 15: Predicting the Loss of Customers](C13322_05_Epub_Final_SW.xhtml#_idParaDest-129)'
  id: totrans-863
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Neural Networks](C13322_05_Epub_Final_SW.xhtml#_idParaDest-130)'
  id: totrans-864
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[What Is a Neural Network?](C13322_05_Epub_Final_SW.xhtml#_idParaDest-131)'
  id: totrans-865
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Optimization Algorithms](C13322_05_Epub_Final_SW.xhtml#_idParaDest-132)'
  id: totrans-866
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Hyperparameters](C13322_05_Epub_Final_SW.xhtml#_idParaDest-133)'
  id: totrans-867
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Keras](C13322_05_Epub_Final_SW.xhtml#_idParaDest-134)'
  id: totrans-868
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 47: Installing the Keras library for Python and Using it to Perform
    Classification](C13322_05_Epub_Final_SW.xhtml#_idParaDest-135)'
  id: totrans-869
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Keras Library](C13322_05_Epub_Final_SW.xhtml#_idParaDest-136)'
  id: totrans-870
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 48: Predicting Avocado Price Using Neural Networks](C13322_05_Epub_Final_SW.xhtml#_idParaDest-137)'
  id: totrans-871
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Categorical Variables](C13322_05_Epub_Final_SW.xhtml#_idParaDest-138)'
  id: totrans-872
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[One-hot Encoding](C13322_05_Epub_Final_SW.xhtml#_idParaDest-139)'
  id: totrans-873
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Entity Embedding](C13322_05_Epub_Final_SW.xhtml#_idParaDest-140)'
  id: totrans-874
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 49: Predicting Avocado Price Using Entity Embedding](C13322_05_Epub_Final_SW.xhtml#_idParaDest-141)'
  id: totrans-875
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 16: Predicting a Customer''s Purchase Amount](C13322_05_Epub_Final_SW.xhtml#_idParaDest-142)'
  id: totrans-876
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_05_Epub_Final_SW.xhtml#_idParaDest-143)'
  id: totrans-877
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 6](C13322_06_Epub_Final_SW.xhtml#_idParaDest-144)'
  id: totrans-878
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Decoding Images](C13322_06_Epub_Final_SW.xhtml#_idParaDest-145)'
  id: totrans-879
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_06_Epub_Final_SW.xhtml#_idParaDest-146)'
  id: totrans-880
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Images](C13322_06_Epub_Final_SW.xhtml#_idParaDest-147)'
  id: totrans-881
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 50: Classify MNIST Using a Fully Connected Neural Network](C13322_06_Epub_Final_SW.xhtml#_idParaDest-148)'
  id: totrans-882
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Convolutional Neural Networks](C13322_06_Epub_Final_SW.xhtml#_idParaDest-149)'
  id: totrans-883
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Convolutional Layer](C13322_06_Epub_Final_SW.xhtml#_idParaDest-150)'
  id: totrans-884
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Pooling Layer](C13322_06_Epub_Final_SW.xhtml#_idParaDest-151)'
  id: totrans-885
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Adam Optimizer](C13322_06_Epub_Final_SW.xhtml#_idParaDest-152)'
  id: totrans-886
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Cross-entropy Loss](C13322_06_Epub_Final_SW.xhtml#_idParaDest-153)'
  id: totrans-887
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 51: Classify MNIST Using a CNN](C13322_06_Epub_Final_SW.xhtml#_idParaDest-154)'
  id: totrans-888
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Regularization](C13322_06_Epub_Final_SW.xhtml#_idParaDest-155)'
  id: totrans-889
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Dropout Layer](C13322_06_Epub_Final_SW.xhtml#_idParaDest-156)'
  id: totrans-890
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[L1 and L2 Regularization](C13322_06_Epub_Final_SW.xhtml#_idParaDest-157)'
  id: totrans-891
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Batch Normalization](C13322_06_Epub_Final_SW.xhtml#_idParaDest-158)'
  id: totrans-892
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 52: Improving Image Classification Using Regularization Using CIFAR-10
    images](C13322_06_Epub_Final_SW.xhtml#_idParaDest-159)'
  id: totrans-893
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Image Data Preprocessing](C13322_06_Epub_Final_SW.xhtml#_idParaDest-160)'
  id: totrans-894
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Normalization](C13322_06_Epub_Final_SW.xhtml#_idParaDest-161)'
  id: totrans-895
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Converting to Grayscale](C13322_06_Epub_Final_SW.xhtml#_idParaDest-162)'
  id: totrans-896
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Getting All Images to the Same Size](C13322_06_Epub_Final_SW.xhtml#_idParaDest-163)'
  id: totrans-897
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Other Useful Image Operations](C13322_06_Epub_Final_SW.xhtml#_idParaDest-164)'
  id: totrans-898
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 17: Predict if an Image Is of a Cat or a Dog](C13322_06_Epub_Final_SW.xhtml#_idParaDest-165)'
  id: totrans-899
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Data Augmentation](C13322_06_Epub_Final_SW.xhtml#_idParaDest-166)'
  id: totrans-900
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Generators](C13322_06_Epub_Final_SW.xhtml#_idParaDest-167)'
  id: totrans-901
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 53: Classify CIFAR-10 Images with Image Augmentation](C13322_06_Epub_Final_SW.xhtml#_idParaDest-168)'
  id: totrans-902
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 18: Identifying and Augmenting an Image](C13322_06_Epub_Final_SW.xhtml#_idParaDest-169)'
  id: totrans-903
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_06_Epub_Final_SW.xhtml#_idParaDest-170)'
  id: totrans-904
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 7](C13322_07_Epub_Final_SW.xhtml#_idParaDest-171)'
  id: totrans-905
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Processing Human Language](C13322_07_Epub_Final_SW.xhtml#_idParaDest-172)'
  id: totrans-906
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_07_Epub_Final_SW.xhtml#_idParaDest-173)'
  id: totrans-907
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Text Data Processing](C13322_07_Epub_Final_SW.xhtml#_idParaDest-174)'
  id: totrans-908
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Regular Expressions](C13322_07_Epub_Final_SW.xhtml#_idParaDest-175)'
  id: totrans-909
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 54: Using RegEx for String Cleaning](C13322_07_Epub_Final_SW.xhtml#_idParaDest-176)'
  id: totrans-910
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Basic Feature Extraction](C13322_07_Epub_Final_SW.xhtml#_idParaDest-177)'
  id: totrans-911
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Text Preprocessing](C13322_07_Epub_Final_SW.xhtml#_idParaDest-178)'
  id: totrans-912
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 55: Preprocessing the IMDB Movie Review Dataset](C13322_07_Epub_Final_SW.xhtml#_idParaDest-179)'
  id: totrans-913
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Text Processing](C13322_07_Epub_Final_SW.xhtml#_idParaDest-180)'
  id: totrans-914
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 56: Creating Word Embeddings Using Gensim](C13322_07_Epub_Final_SW.xhtml#_idParaDest-181)'
  id: totrans-915
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 19: Predicting Sentiments of Movie Reviews](C13322_07_Epub_Final_SW.xhtml#_idParaDest-182)'
  id: totrans-916
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recurrent Neural Networks (RNNs)](C13322_07_Epub_Final_SW.xhtml#_idParaDest-183)'
  id: totrans-917
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[LSTMs](C13322_07_Epub_Final_SW.xhtml#_idParaDest-184)'
  id: totrans-918
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 57: Performing Sentiment Analysis Using LSTM](C13322_07_Epub_Final_SW.xhtml#_idParaDest-185)'
  id: totrans-919
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 20: Predicting Sentiments from Tweets](C13322_07_Epub_Final_SW.xhtml#_idParaDest-186)'
  id: totrans-920
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_07_Epub_Final_SW.xhtml#_idParaDest-187)'
  id: totrans-921
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 8](C13322_08_Epub_Final_SW.xhtml#_idParaDest-188)'
  id: totrans-922
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Tips and Tricks of the Trade](C13322_08_Epub_Final_SW.xhtml#_idParaDest-189)'
  id: totrans-923
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Introduction](C13322_08_Epub_Final_SW.xhtml#_idParaDest-190)'
  id: totrans-924
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Transfer Learning](C13322_08_Epub_Final_SW.xhtml#_idParaDest-191)'
  id: totrans-925
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Transfer Learning for Image Data](C13322_08_Epub_Final_SW.xhtml#_idParaDest-192)'
  id: totrans-926
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 58: Using InceptionV3 to Compare and Classify Images](C13322_08_Epub_Final_SW.xhtml#_idParaDest-193)'
  id: totrans-927
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 21: Classifying Images using InceptionV3](C13322_08_Epub_Final_SW.xhtml#_idParaDest-194)'
  id: totrans-928
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Useful Tools and Tips](C13322_08_Epub_Final_SW.xhtml#_idParaDest-195)'
  id: totrans-929
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Train, Development, and Test Datasets](C13322_08_Epub_Final_SW.xhtml#_idParaDest-196)'
  id: totrans-930
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Working with Unprocessed Datasets](C13322_08_Epub_Final_SW.xhtml#_idParaDest-197)'
  id: totrans-931
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[pandas Profiling](C13322_08_Epub_Final_SW.xhtml#_idParaDest-198)'
  id: totrans-932
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[TensorBoard](C13322_08_Epub_Final_SW.xhtml#_idParaDest-199)'
  id: totrans-933
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[AutoML](C13322_08_Epub_Final_SW.xhtml#_idParaDest-200)'
  id: totrans-934
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Exercise 59: Get a Well-Performing Network Using Auto-Keras](C13322_08_Epub_Final_SW.xhtml#_idParaDest-201)'
  id: totrans-935
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Model Visualization Using Keras](C13322_08_Epub_Final_SW.xhtml#_idParaDest-202)'
  id: totrans-936
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 22: Using Transfer Learning to Predict Images](C13322_08_Epub_Final_SW.xhtml#_idParaDest-203)'
  id: totrans-937
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Summary](C13322_08_Epub_Final_SW.xhtml#_idParaDest-204)'
  id: totrans-938
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Appendix](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-205)'
  id: totrans-939
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 1: Introduction to Data Science and Data Preprocessing](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-206)'
  id: totrans-940
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 1: Pre-Processing Using the Bank Marketing Subscription Dataset](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-207)'
  id: totrans-941
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 2: Data Visualization](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-208)'
  id: totrans-942
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 2: Line Plot](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-209)'
  id: totrans-943
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 3: Bar Plot](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-210)'
  id: totrans-944
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 4: Multiple Plot Types Using Subplots](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-211)'
  id: totrans-945
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 3: Introduction to Machine Learning via Scikit-Learn](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-212)'
  id: totrans-946
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 5: Generating Predictions and Evaluating the Performance of a Multiple
    Linear Regression Model](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-213)'
  id: totrans-947
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 6: Generating Predictions and Evaluating Performance of a Tuned Logistic
    Regression Model](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-214)'
  id: totrans-948
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 7: Generating Predictions and Evaluating the Performance of the SVC
    Grid Search Model](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-215)'
  id: totrans-949
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 8: Preparing Data for a Decision Tree Classifier](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-216)'
  id: totrans-950
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 9: Generating Predictions and Evaluating the Performance of a Decision
    Tree Classifier Model](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-217)'
  id: totrans-951
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 10: Tuning a Random Forest Regressor](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-218)'
  id: totrans-952
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 11: Generating Predictions and Evaluating the Performance of a Tuned
    Random Forest Regressor Model](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-219)'
  id: totrans-953
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 4: Dimensionality Reduction and Unsupervised Learning](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-220)'
  id: totrans-954
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 12: Ensemble k-means Clustering and Calculating Predictions](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-221)'
  id: totrans-955
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 13: Evaluating Mean Inertia by Cluster after PCA Transformation](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-222)'
  id: totrans-956
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 5: Mastering Structured Data](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-223)'
  id: totrans-957
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 14: Training and Predicting the Income of a Person](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-224)'
  id: totrans-958
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 15: Predicting the Loss of Customers](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-225)'
  id: totrans-959
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 16: Predicting a Customer''s Purchase Amount](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-226)'
  id: totrans-960
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 6: Decoding Images](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-227)'
  id: totrans-961
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 17: Predict if an Image Is of a Cat or a Dog](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-228)'
  id: totrans-962
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 18: Identifying and Augmenting an Image](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-229)'
  id: totrans-963
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 7: Processing Human Language](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-230)'
  id: totrans-964
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 19: Predicting Sentiments of Movie Reviews](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-231)'
  id: totrans-965
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 20: Predicting Sentiments from Tweets](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-232)'
  id: totrans-966
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Chapter 8: Tips and Tricks of the Trade](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-233)'
  id: totrans-967
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 21: Classifying Images using InceptionV3](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-234)'
  id: totrans-968
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Activity 22: Using Transfer Learning to Predict Images](C13322_Solution_Epub_Final_SW.xhtml#_idParaDest-235)'
  id: totrans-969
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Landmarks
  id: totrans-970
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Cover](Images/cover.xhtml)'
  id: totrans-971
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Table of Contents](C13322_FM_Epub_Final_SW.xhtml#_idContainer004)'
  id: totrans-972
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
