- en: Conducting Data Science Interviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you will learn how to conduct an efficient data science interview.
    We will explore how a hiring process can be tied to real working experience so
    that the candidates you seek will clearly understand what kind of job they will
    need to do. The advice in this chapter will help you to get rid of unnecessary
    interviewing rituals and make the hiring process more efficient.
  prefs: []
  type: TYPE_NORMAL
- en: How long has it been since you went through a technical interview? Was it a
    pleasant experience? And if you got through it, can you judge the relevance of
    your interview questions to your day-to-day work? I bet that the experience was
    awful. The common complaints are that all interviews are stressful, and the questions
    are not relevant. Technical interviews are deeply flawed. We imagine that we are
    using a rational way of thought to pass candidates through a sieve, selecting
    only the stellar experts who will do the job. In fact, interviews are biased.
    There is almost no correlation between success in an interview and success at
    the actual job. I would not be surprised if random candidate selection showed
    better results than the hiring processes of many companies.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Common flaws of technical interviews
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing values and ethics into the interview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing good interviews
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common flaws of technical interviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a software engineering background, how often have interviewers asked
    you to reverse a binary tree on a whiteboard, or to find a maximum subarray sum?
    If you come from a data science background, how many central limit theorem proofs
    did you lay out on a piece of paper or a whiteboard? If you are a team leader,
    have you asked such questions yourself? I am not implying that those questions
    are bad, but quite the opposite. Knowledge of core computer science algorithms
    and the ability to derive proofs may be important for some jobs. But for what
    purpose do we ask those questions? What do we want to know about the person on
    the other side of the table? For most companies, the ability to give answers to
    those questions is not relevant at all. What is the reason for asking them? Well,
    because stereotypical programmers must know algorithms, and data scientists must
    know their mathematics and statistics; this way of thinking is logical and straightforward.
    When we think in this way, we imagine a general collective image of a rockstar
    programmer and a data science wizard. Reversing binary trees may be relevant for
    some projects in some company, but why is it relevant for yours?
  prefs: []
  type: TYPE_NORMAL
- en: I ask you to be open-minded, critical, and honest with yourself while reading
    this chapter. This text will not give you secret knowledge that will improve your
    interviews. It will give you tools. If you invest in them, you'll get back more
    straightforward, simple, and enjoyable interviews that will find the right people
    for the right job.
  prefs: []
  type: TYPE_NORMAL
- en: Searching for candidates you don't need
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most companies are looking for rockstar developers, stellar data scientists,
    and consist purely of the best people in the entire world. Let's look at a data
    scientist job description from a real job board.
  prefs: []
  type: TYPE_NORMAL
- en: 'The primary focus for a candidate will be on applying different techniques
    (data mining/statistical analysis/build prediction systems/recommendation systems)
    using large company datasets. Apply machine learning models and test the effectiveness
    of different actions. The candidate must have strong technical expertise and be
    able to use a wide set of tools for data mining/data analysis methods. The candidate
    must be able to build and implement mathematical models, algorithms, and simulations.
    We seek candidates with the following skillset:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Work with business cases: seek opportunities and leverage company data to create
    business solutions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mine and analyze data from company databases to drive optimization and improvement
    of product development and sales techniques.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assess the effectiveness and accuracy of new data sources and data gathering.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extending the company's data with third-party sources of information when needed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use predictive modeling to increase revenue generation, ad targeting, and other
    business outcomes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyze business cases and identify data sources (internal/external) and data
    mining/analysis methods to use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop a normalization engine to execute cleansing/deduplication for a raw
    data through **extract transform load** (**ETL**) process for data sources.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create, train, and test predictive models to solve defined business cases.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop algorithms to apply to data sets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Design data structure models for collected data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facilitate the build of a solution from **proof of concept** (**POC**) to production.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work with business owners to gather additional information about business cases.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work with data that generated by core business.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be ready to work in agile style (daily, sprint planning, sprint review, retrospective).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work in an environment that adapts quickly to creative change using agile principles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Actively works with different development groups inside of organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be ready to adapt a new tool/library/technology/platform.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Excellent understanding of machine learning techniques and algorithms, such
    as **k-nearest neighbors** (**kNNs**), Naive Bayes, **support vector machines**
    (**SVM**), decision tree, clustering, artificial neural networks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong understanding of math statistics (such as distributions, statistical
    testing, regression, and so on).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience creating and using advanced machine learning algorithms and statistical
    methods such as regression, simulation, scenario analysis, modeling, clustering,
    decision trees, neural networks, and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proficiency in using query languages such as SQL.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience working with and creating data architectures, data models, data warehouses/data
    lakes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to work with minimal supervision.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong data analytical skills.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creative and analytical thinker with strong problem-solving capabilities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Background in technology or professional services preferably in one or more
    domains of AWS, Azure, Security, or AI/ML.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong understanding of consulting business.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong structural work methods, multitasking, and time management skills.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Self-driven independent work ethic that drives internal and external accountability.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience with common data science toolkits and libraries, such as pandas,
    Keras, SciPy, scikit-learn, TensorFlow, NumPy, MatLab, and other popular data
    mining technologies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience using statistical computer languages (R, Python, and so on) to manipulate
    and draw insights from large data sets.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Knowledge and experience using SQL language.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience using Azure/AWS services.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Experience with C++/C# as a plus.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Based on this description, the candidate must know 4 to 5 programming languages
    to a level that allows them to start a POC and finish with a production-ready
    system. More so, machine learning, deep learning, ETL, and business analysis skills
    are also a must. The candidate should be able to learn any new technology not
    present in the list. And he/she should be self-driven and independent.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you think about it, this is an ideal candidate. A one-man army, a unicorn.
    Do such people exist? Yes, but they are extremely rare. Does every company need
    people like this to complete their projects and achieve their goals? I will answer
    with a bold no. Instead of seeking the best fit for their goals, they seek the
    best fit for all possible goals. Being general and all-encompassing, this job
    search will be long, tiresome, and stressful. After reading this long list of
    requirements, the candidate won''t be able to figure out what their job will be
    like. All descriptions are vague and hard to understand. This description does
    not give a hint about what this job will be like. The job description should give
    a clear listing of the following aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: The future responsibilities of the candidate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements for handling these responsibilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the job description is vague and convoluted, testing all required skills
    will surely require several interview sessions, which will make the process even
    more tiring. Adequate assessment of multiple candidates based on this list is
    close to impossible. After a long search, the company will just hire someone randomly.
    After this, the troubles won't end. The greatest problem of this job description
    is a lack of direction. The employer is not sure about the candidate's functions
    and responsibilities. This problem is deeper than it seems to be; the job description
    is actually only a symptom, not the illness itself. For the new employee, the
    obscurity and vagueness will not end on the first day on the new job. If the employer
    did not fully figure out what the new employee should do, the workflow itself
    will become an undetermined mess. Most of the interviews and hiring processes
    are a rationalization of a suboptimal, stressful, and biased candidate selection
    process. The good thing is that we can fix these problems. The only things you
    will need are honesty, a clear definition of your goals, and a bit of preparation.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing values and ethics into the interview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We often look at interviews from a one-sided perspective. We want to find a
    reliable team member who can do the job well. It is easy to forget that bad interviews
    can scare good candidates. More so, a constant flow of potential candidates make
    judgments about your company through the interviews. Bad interviews lead to bad
    publicity. The key to effective and smooth interviews is to think about the candidate
    experience.
  prefs: []
  type: TYPE_NORMAL
- en: If you have successfully defined honest requirements for the candidate, the
    next step is to think about the interview experience as a whole. To see a new
    teammate in the best light, the interview should look like a real working process,
    not like a graduate examination.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider how most technical interviews are conducted:'
  prefs: []
  type: TYPE_NORMAL
- en: You go through a resume filter. The best people have PhDs and at least 5 years
    of (questionable) experience in major tech companies.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You finish some kind of online test for your technical skills.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You submit your GitHub repositories and portfolio projects for review.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, you go through an online screening interview. You answer a series of technical
    questions related to a multitude of technologies and scientific areas that might
    be useful in your future work.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, you find yourself in a room with a whiteboard, where you answer a set
    of complicated and very specific problems on software development, software architecture,
    machine learning, combinatorial optimization, category theory, and other important
    topics that are used to select the best from the best.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple people, each an expert in their field, will test you for different
    skills. It is likely that the interviewers will test you with tricky problems
    from their experience, each of which took them days to tackle.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, a company executive will see if you are a good cultural fit and go
    along with the company values and goals.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The only things left to add are a handful of DNA tests, IQ score filtering,
    a test on a lie detector, along with two checks for artistic and chess-playing
    abilities.
  prefs: []
  type: TYPE_NORMAL
- en: You may find it funny, but in certain Russian companies, software developers
    really do need to pass a lie detector test to get on board.
  prefs: []
  type: TYPE_NORMAL
- en: If you have clearly defined the position requirements, you will already see
    that most of those steps are unnecessary. More so, they can bias your interview
    process toward people who will be a bad fit for your job.
  prefs: []
  type: TYPE_NORMAL
- en: 'This process is nothing like your real working experience, where the following
    is true:'
  prefs: []
  type: TYPE_NORMAL
- en: Interviews are intensely stressful, which significantly affects your performance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You are being tested on topics unrelated to the tasks you will solve in the
    position.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interview questions and home assignments are not related to tasks you will do
    at work.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you could design an interview that is as close to real working experience
    as possible, all futile parts of the interview can go away, including prior work
    experience and education filters.
  prefs: []
  type: TYPE_NORMAL
- en: The interview process must respect the candidate's emotional condition and treat
    them as a human. It should be humanistic. The moment you start doing this, the
    potential candidate lists will grow and the interviews will be shorter and more
    effective.
  prefs: []
  type: TYPE_NORMAL
- en: Be open-minded and clear yourself of prejudices. Some of the most talented and
    successful software engineers, software architects, and data scientists I have
    worked with had unrelated job experiences or a lack of formal education. I am
    not stating that those things do not matter. They do, but they are not determining
    factors. Correlation does not mean causation. By rejecting candidates using unnecessary
    pre-screening filters, you miss opportunities to meet talented people who will
    stay with you for many years. Of course, some organizations need pre-screening
    filters. For example, you would not hire a surgeon without a diploma. In some
    fields, such as medicine, education gives essential experience that you can't
    get by yourself. But the situation changes drastically with fields such as software
    engineering and data science, where the knowledge and experience is accessible
    with a few keystrokes.
  prefs: []
  type: TYPE_NORMAL
- en: At last, remember to be human. Be nice to people you are talking with. Create
    a pleasant experience and you will get much better results. This can be hard if
    you are interviewing people for the whole day, so it is better to limit yourself
    to one or two interviews per day at the most.
  prefs: []
  type: TYPE_NORMAL
- en: You may think such interviews will take an unreasonable amount of your time
    and looking at every candidate is impossible. In fact, it is the opposite. The
    key to designing humanistic interviews is to shift the focus from your organization
    to the candidate, and we will explore ways to do this in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Designing good interviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: How can we make interviews more relevant and time-intensive? An ideal interview
    would be testing in a real working environment for a couple of months. While there
    are several companies that can afford to operate without interviews, using paid
    probation periods instead, this is a very costly hiring strategy that not every
    business can afford. A good interview should serve as a substitute for real working
    experience. It should not be a test of a person's skill, but a test for a person's
    ability to perform a specific job well. If an ideal test for a candidate is a
    probation period, then the worst kind is a whiteboard interview (unless you are
    interviewing a computer science lecturer). To design a great interview, bring
    it as close as possible to your working process and to the issues you solve on
    a daily basis.
  prefs: []
  type: TYPE_NORMAL
- en: Designing test assignments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Of course, there might have been a couple of times when you or your colleagues
    in the same position needed to prove a theorem or implement a complex algorithm
    from scratch, but is it enough to include this problem in your interviewing process?
    If your team has encountered this problem only a few times, it deserves to be
    a supplementary question at most. Create most of the interview questions from
    the most frequent problems that your team solves daily. By no means search the
    web for interview questions. Your interview should be as specific as possible
    and generic questions will make it dull and unrelated to what you are searching
    for.
  prefs: []
  type: TYPE_NORMAL
- en: A frequent source of questions is the interviewer's own knowledge resources.
    You may have read many intricate and interesting books and blog posts. If the
    knowledge you gained from those materials, no matter how intellectually valuable,
    is unrelated to the candidate's job, please keep it out of the interview. Imagine
    a machine learning engineer interview where the candidate gets a question about
    mathematical details of the reparametrization trick in variational autoencoders
    when his job will be about delivering pretrained classifiers to production as
    scalable services.
  prefs: []
  type: TYPE_NORMAL
- en: 'The previous case might seem unrealistic to you, but it has happened to one
    of the software developers that I know. He was interviewing for a distributed
    system developer position. After some initial technical questions, the interviewer
    started asking about the subtleties of native code integration in Java applications:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Developer: *Do you integrate native code into your applications?*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Interviewer: *No.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Developer: *That''s good. Because I do not really know much about this topic.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Interviewer: *I''d like to ask about it anyway.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Developer: *But I know little about native code integration. And, as you said,
    this is not relevant. Could we move on?*'
  prefs: []
  type: TYPE_NORMAL
- en: Interviewer asks the question.
  prefs: []
  type: TYPE_NORMAL
- en: 'This question was bad, no matter how you look at it:'
  prefs: []
  type: TYPE_NORMAL
- en: It was irrelevant to the skill requirements in this position.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It was irrelevant to the company.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The interviewer already knew that the candidate could not provide an answer.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It increased the stress factor of the interview, possibly affecting the answers
    to the more relevant questions that followed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It diminished the value of this company for the candidate.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On the contrary, a good interview question should be the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Related to the problems that the candidate will solve in his/her job
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As hard or as simple as the candidate's daily working experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The largest problem of any interview question is its time span. We expect a
    typical interview problem to be solved in less than 10 minutes. The real working
    environment does not have such time constraints. To narrow the gap, you can create
    a test assignment. Ideally, this assignment should be implementable in 2 to 4
    hours.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a test assignment, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Take a core task that is performed by similar roles (or directly by teammates
    with the same title) in your company.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, describe this task in one paragraph. You want your task description to
    be **SMART** (which stands for **specific, measurable, achievable, relevant, and
    time-bound**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try to estimate how long it will take to implement. Since you are basing it
    on a real working experience, it could take days or weeks to finish the task.
    Only very dedicated candidates will be ready to take on an assignment with such
    a time span. You can shorten its length by decomposing it into several tasks and
    taking only the most important ones as a part of the assignment. You can transform
    all additional tasks into questions that you will ask while examining the test
    assignment results.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you have the necessary skills, complete the assignment yourself, or ask for
    the help of your teammates. Note that if you cannot do the assignment yourself,
    you will need the help of your teammates during the interview.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'While doing the assignment, check everything about it:'
  prefs: []
  type: TYPE_NORMAL
- en: Is it relevant?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you finish it within the expected time frame?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Does it test all the necessary skills for the position you are interviewing
    for?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you create additional questions about the assignment to structure the interview
    around it?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It may take you a few iterations before you create a good test assignment.
    When you are done, you will need to decide where the candidates will implement
    the assignment. Depending on your requirements, the candidate may implement it
    remotely or you may ask them to sit in your office. If the assignment takes a
    significant amount of time to implement and you can''t strip it down further,
    consider paying candidates for their time. Remember: hiring candidates who are
    not fit for the job will cost you a lot more.'
  prefs: []
  type: TYPE_NORMAL
- en: For example, we can create a test assignment for a junior data scientist. Imagine
    that our company provides predictive analytics services for remote education platforms.
    Those companies need to estimate the propensity of successfully finishing a course
    for each of their students. Each client collects different data about their students.
    Although the model building process is fairly standardized, custom data preprocessing
    and feature engineering are required to create classifiers with satisfiable quality
    for each client. Our company promises that each client will get a model with an F1
    score of at least 0.85.
  prefs: []
  type: TYPE_NORMAL
- en: 'Junior data scientists follow a standard procedure to create and deploy a classification
    model. The process is well documented and explained. It comprises several stages,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Get a training dataset provided by a data engineering team from the company's
    data portal web app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a web-based data analysis and modeling environment using the company's
    self-service portal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upload data into the environment and create a holdout test set with at least
    10% of the dataset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perform **exploratory data analysis** (**EDA**) and create a baseline classifier
    using the **gradient boosting** **algorithm**. Use 10-fold cross-validation for
    measuring the baseline F1 score.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create new features from customer data and tune model parameters to improve
    the F1 score.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you can reach an F1 validation score of no less than 0.85, measure the test
    score.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Report the results to your manager by generating a link to your environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a REST API using the company's guidelines if the results are approved.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Report the results to your manager.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The most essential skills we want to test for this position are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Ability to work with frameworks and tools our company uses for building classifiers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to build binary classifiers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to perform EDA and feature engineering on datasets similar to those
    we face in our daily work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to follow the process and report results
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding of the reasoning behind the company's classifier building process
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To create a test assignment for a junior data scientist, we may create a dataset
    similar to ones from our customers. The candidate's model could achieve the necessary
    F1 score if the candidate creates several useful features from the raw data. The
    ideal environment for the candidate would be our company's office, but the remote
    option is also acceptable. We have offered both options to each candidate.
  prefs: []
  type: TYPE_NORMAL
- en: Our junior data scientists solve similar tasks in 2 to 3 hours. They spend most
    of the time on *step 5*. We have decided to artificially simplify the task so
    it will be solvable in under 1.5 hours. Learning how to use all the company's
    internal tooling, including a self-service portal, generally takes up to 4 hours,
    so we have also decided to use widely known open source tools for the test assignment.
    Most of the candidates will be already familiar with this option, and all of our
    internal systems are compatible with open source alternatives, so this would be
    a viable simplification.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have created the following test assignment description:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We give you a CSV file with customers data. We ask you to build a binary classifier
    for student''s propensity to finish a course. The description of each column in
    the data file is below: [… the description is missing for breviry]. You can use
    the following steps to build your model:'
  prefs: []
  type: TYPE_NORMAL
- en: Perform EDA and create a baseline classifier using the gradient boosting algorithm.
    Use 10-fold cross-validation for measuring the baseline F1 score.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create new features from customer data and tune model parameters to improve
    F1 score.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you can reach F1 validation score no less than 0.85, measure the test score.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Report results to us.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The expected time frame for this task is 1.5 hours, but you may ask for extensions.
    Please use the following tools to create the solution: […].'
  prefs: []
  type: TYPE_NORMAL
- en: 'We have also created several additional questions to check the candidate''s
    understanding of our process:'
  prefs: []
  type: TYPE_NORMAL
- en: How does cross-validation work?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the alternatives to cross-validation?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why did you use a **gradient boosting machine** (**GBM**) to solve this problem?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Could you explain the general idea behind GBM? What implementations of GBM have
    you used previously? Could you tell us about their features?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is an F1 score?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How does an F1 score differ from an accuracy score? In what situations do you
    prefer to use accuracy? And when does F1 work better?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why do we need a separate test set?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember that a technical assessment is not the only thing you want to check
    in the interview. Tell the candidate about your workflow and what your team does.
    Try to figure out whether the things you do will interest them enough. Highly
    motivated candidates who will flawlessly integrate into your workflow are often
    the best option even if their technical skills are inferior to those of other
    candidates.
  prefs: []
  type: TYPE_NORMAL
- en: 'To conclude, I will leave a simple rule for creating interview questions: ask
    questions about activities that are relevant for the daily working experience
    of the position you are searching for. A question should be highly abstract, theoretical,
    or complex only if the candidate should be able to solve such problems alone,
    on a daily basis (if this is so, provide an explanation why). Make interviews
    realistic and relevant. Ask for what you are looking for, no more and no less.'
  prefs: []
  type: TYPE_NORMAL
- en: Interviewing for different data science roles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interviewing should be a highly personal experience for each company, so providing
    interview templates or question sets would defeat the purpose of this chapter.
    However, a general checklist about what competencies and daily problems are relevant
    for each role of a data science project may serve you as a good first step in
    creating a personal and purposeful interview process.
  prefs: []
  type: TYPE_NORMAL
- en: General guidance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'No matter what position you are interviewing for, you should always check for
    the following abilities of a candidate:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Information search** **or Google skills**: This might seem funny, but the
    ability to search for information is an extremely valuable skill for any technical
    expert. You never know what kind of algorithms, frameworks, or bugs you will encounter
    during a project. The ability to quickly find existing solutions and reuse the
    experience of the global data science community can save you spectacular amounts
    of time. If the candidate struggles to answer a technical question but can look
    up the solution and understand it, consider marking this answer as at least partially
    correct.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communication skills**: When emulating a real workflow, take notice of the
    candidate''s communication ability. Take notice of how he understands the task
    definition, asks for additional clarifications, and reports status. It is a good
    idea to tell the candidate that you will also be testing this set of skills beforehand
    and to provide a minor set of instructions. For example, you can allow and encourage
    intermediate communication during a take-home assignment. Many take-homes are
    finished in an isolated environment that is nowhere near to how we really collaborate
    on projects. Encouraging communication will allow you to have a glance at a real
    working experience with the candidate, make it an integral part of the test task.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software engineering skills**: Every data science project role except the
    project manager needs coding skills. The better software the candidate can build,
    the less work will be required to integrate their piece into the whole system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the candidate does not know something, it's OK. People get nervous, forget
    details, or lack relevant experience. Look at the interview as a two-sided process,where
    you are trying to work through the questions together with the candidate. Real
    work does not look like an examination, does it? Plus, in most cases, the person
    who is able to quickly work through the problem together with the team even if
    they don't know the solution will be valuable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not be a victim of the *curse of knowledge*. The curse of knowledge is a
    cognitive bias that is often seen when a person with certain knowledge assumes
    that others have all the necessary background to understand them well, or at least
    overestimates this background. Do not expect the candidate to fully understand
    and easily solve the problem that your team solved a few days ago. Deep knowledge
    of specifics of the datasets you work with and subtleties of the problems that
    your team solves on a daily basis are simply inaccessible to the candidate. Be
    conscientious about the curse of knowledge and simplify your questions to match
    the candidate's background.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interviewing data scientists
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When interviewing data scientists, keeping your eye on the following qualities
    might help you to make a better choice:'
  prefs: []
  type: TYPE_NORMAL
- en: What kind of data scientist are you looking for? A research data scientist will
    be able to implement state-of-the-art models and push the boundaries of the discipline,
    but a machine learning engineer will be more proficient in quick application of
    existing best practices while maintaining good software design. Many companies
    need the second type of data scientist but are trying to hire the first one. Do
    not make this mistake and be honest about your needs as a company.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ask about the overall workflow of building a model, and specifically about delivering
    the model into production. Pay attention to the offline and online testing strategies
    that the candidate chooses to evaluate the model. Many experts have a good understanding
    of the inner workings of the algorithms but lack a coherent end-to-end approach
    for testing and delivering a model.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ask about common problems in the datasets you are working with. If your team
    constantly faces the problem of imbalanced data, be sure to check whether the
    candidate has an instinct for solving problems of this kind.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you work in a specific business domain, do not forget to ask about domain
    expertise.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interviewing data engineers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Don''t forget to look for the following qualities when searching for data engineers:'
  prefs: []
  type: TYPE_NORMAL
- en: Start from the specific technologies the data engineer will work with. There
    is a multitude of different databases and data processing technologies, so you
    should have a good understanding of what technology stack you are looking for
    because nobody knows everything. A big data engineerwill back you up on taming
    the big data zoo of technologies and writing complex Apache Spark jobs. A backend
    developer with extensive experience in relational databases and data integration will
    help you to process datasets from traditional data warehouses and will easily
    integrate your solution with other systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If the data engineering work at your company is related to distributed data
    processing systems (Apache Spark, for example), then do not forget to touch on
    this topic in the interview. Distributed systems suffer from the problem of leaky
    abstractions: when problems in code start to arise, the developer should have
    a good instinct about how the system works internally to solve the issue. This
    does not mean that every data engineer should be an expert in distributed algorithms
    and know everything about quorums, but they should be able to have enough knowledge
    to make reasonable choices when designing distributed data processing flows.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have looked at the importance of setting goals before starting
    the interview process. We have explained why asking complex theoretical questions
    without a clear purpose is harmful not only to the candidate but also to the interviewer's
    company. We have explored the flaws of modern interviews and gained tools for
    making them purposeful and meaningful. We have seen what separates a good job
    description from a bad one. Also, we have defined a framework for creating interview
    questions from real tasks that you and your teammates solve on a daily basis.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will develop guidelines for building data science teams.
  prefs: []
  type: TYPE_NORMAL
